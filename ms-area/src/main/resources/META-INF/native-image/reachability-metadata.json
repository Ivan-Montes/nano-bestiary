{
  "reflection": [
    {
      "type": "[I"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
    },
    {
      "type": "[Lcom.fasterxml.jackson.databind.ser.Serializers;"
    },
    {
      "type": "[Ljava.lang.Class;"
    },
    {
      "type": "[Ljava.lang.Object;"
    },
    {
      "type": "[Ljava.lang.String;"
    },
    {
      "type": "[Ljava.lang.reflect.Constructor;"
    },
    {
      "type": "[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.AnnotationAttributes;"
    },
    {
      "type": "[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
    },
    {
      "type": "[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
    },
    {
      "type": "[Lorg.springframework.web.bind.annotation.RequestMethod;"
    },
    {
      "type": "[Z"
    },
    {
      "type": "boolean"
    },
    {
      "type": "brave.Tracer"
    },
    {
      "type": "ch.qos.logback.classic.BasicConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.LoggerContext"
    },
    {
      "type": "ch.qos.logback.classic.joran.SerializedModelConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.DateConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LevelConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LineSeparatorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.LoggerConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.MessageConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.pattern.ThreadConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "ch.qos.logback.classic.spi.LogbackServiceProvider"
    },
    {
      "type": "ch.qos.logback.classic.util.DefaultJoranConfigurator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "co.elastic.clients.elasticsearch.ElasticsearchClient"
    },
    {
      "type": "co.elastic.clients.transport.ElasticsearchTransport"
    },
    {
      "type": "com.couchbase.client.java.Bucket"
    },
    {
      "type": "com.couchbase.client.java.Cluster"
    },
    {
      "type": "com.datastax.oss.driver.api.core.CqlSession"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JacksonAnnotation"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAnyGetter"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAnySetter"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonIgnore"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Include"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonInclude$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonProperty"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonSetter$Value"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonTypeInfo$As"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonUnwrapped"
    },
    {
      "type": "com.fasterxml.jackson.annotation.JsonView"
    },
    {
      "type": "com.fasterxml.jackson.annotation.PropertyAccessor"
    },
    {
      "type": "com.fasterxml.jackson.core.Base64Variant"
    },
    {
      "type": "com.fasterxml.jackson.core.FormatSchema"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonEncoding"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonFactory$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonGenerator$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonParser$Feature"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonProcessingException"
    },
    {
      "type": "com.fasterxml.jackson.core.JsonToken"
    },
    {
      "type": "com.fasterxml.jackson.core.ObjectCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.PrettyPrinter"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamReadFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.StreamWriteFeature"
    },
    {
      "type": "com.fasterxml.jackson.core.TreeCodec",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.TreeNode"
    },
    {
      "type": "com.fasterxml.jackson.core.Version"
    },
    {
      "type": "com.fasterxml.jackson.core.Versioned",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamReadException"
    },
    {
      "type": "com.fasterxml.jackson.core.exc.StreamWriteException"
    },
    {
      "type": "com.fasterxml.jackson.core.io.CharacterEscapes"
    },
    {
      "type": "com.fasterxml.jackson.core.type.ResolvedType"
    },
    {
      "type": "com.fasterxml.jackson.core.type.TypeReference"
    },
    {
      "type": "com.fasterxml.jackson.databind.AnnotationIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.DatabindException"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.DeserializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.InjectableValues"
    },
    {
      "type": "com.fasterxml.jackson.databind.JavaType"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonMappingException"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.JsonSerializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.KeyDeserializer"
    },
    {
      "type": "com.fasterxml.jackson.databind.MapperFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.MappingIterator"
    },
    {
      "type": "com.fasterxml.jackson.databind.Module",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.Module$SetupContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectReader"
    },
    {
      "type": "com.fasterxml.jackson.databind.ObjectWriter"
    },
    {
      "type": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.PropertyNamingStrategy"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializationFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.SerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.CacheProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ConstructorDetector"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.ContextAttributes"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.DatatypeFeature"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
    },
    {
      "type": "com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
    },
    {
      "type": "com.fasterxml.jackson.databind.deser.ValueInstantiator"
    },
    {
      "type": "com.fasterxml.jackson.databind.ext.Java7SupportImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.introspect.VisibilityChecker"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsonschema.JsonSchema"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.NamedType"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleModule",
      "allDeclaredFields": true
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleSerializers"
    },
    {
      "type": "com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ArrayNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.JsonNodeFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.node.ObjectNode"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.BasicSerializerFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.FilterProvider"
    },
    {
      "type": "com.fasterxml.jackson.databind.ser.SerializerFactory"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.LogicalType"
    },
    {
      "type": "com.fasterxml.jackson.databind.type.TypeFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.cbor.CBORFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.smile.SmileFactory"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.xml.XmlMapper"
    },
    {
      "type": "com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
    },
    {
      "type": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.fasterxml.jackson.module.kotlin.KotlinModule"
    },
    {
      "type": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Cache"
    },
    {
      "type": "com.github.benmanes.caffeine.cache.Caffeine"
    },
    {
      "type": "com.github.therapi.runtimejavadoc.CommentFormatter"
    },
    {
      "type": "com.google.common.base.Optional"
    },
    {
      "type": "com.google.gson.ExclusionStrategy"
    },
    {
      "type": "com.google.gson.FieldNamingPolicy"
    },
    {
      "type": "com.google.gson.FieldNamingStrategy"
    },
    {
      "type": "com.google.gson.Gson",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.GsonBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "com.google.gson.JsonElement"
    },
    {
      "type": "com.google.gson.JsonIOException"
    },
    {
      "type": "com.google.gson.JsonSyntaxException"
    },
    {
      "type": "com.google.gson.LongSerializationPolicy"
    },
    {
      "type": "com.google.gson.ReflectionAccessFilter"
    },
    {
      "type": "com.google.gson.ToNumberStrategy"
    },
    {
      "type": "com.google.gson.TypeAdapter"
    },
    {
      "type": "com.google.gson.TypeAdapterFactory"
    },
    {
      "type": "com.google.gson.internal.Excluder"
    },
    {
      "type": "com.google.gson.reflect.TypeToken"
    },
    {
      "type": "com.google.gson.stream.JsonReader"
    },
    {
      "type": "com.google.gson.stream.JsonWriter"
    },
    {
      "type": "com.hazelcast.core.Hazelcast"
    },
    {
      "type": "com.hazelcast.core.HazelcastInstance"
    },
    {
      "type": "com.hazelcast.spring.cache.HazelcastCache"
    },
    {
      "type": "com.mchange.v2.c3p0.ComboPooledDataSource"
    },
    {
      "type": "com.mongodb.AutoEncryptionSettings"
    },
    {
      "type": "com.mongodb.ClientSessionOptions"
    },
    {
      "type": "com.mongodb.ConnectionString"
    },
    {
      "type": "com.mongodb.ContextProvider"
    },
    {
      "type": "com.mongodb.DBRef"
    },
    {
      "type": "com.mongodb.LoggerSettings"
    },
    {
      "type": "com.mongodb.MongoClientSettings",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.MongoClientSettings$Builder"
    },
    {
      "type": "com.mongodb.MongoCredential"
    },
    {
      "type": "com.mongodb.MongoException"
    },
    {
      "type": "com.mongodb.ReadConcern"
    },
    {
      "type": "com.mongodb.ReadPreference"
    },
    {
      "type": "com.mongodb.ServerApi"
    },
    {
      "type": "com.mongodb.WriteConcern"
    },
    {
      "type": "com.mongodb.annotations.Immutable"
    },
    {
      "type": "com.mongodb.client.MongoClient"
    },
    {
      "type": "com.mongodb.client.gridfs.model.GridFSFile"
    },
    {
      "type": "com.mongodb.client.gridfs.model.GridFSUploadOptions"
    },
    {
      "type": "com.mongodb.client.model.Collation"
    },
    {
      "type": "com.mongodb.client.model.CountOptions"
    },
    {
      "type": "com.mongodb.client.model.CreateCollectionOptions"
    },
    {
      "type": "com.mongodb.client.model.CreateViewOptions"
    },
    {
      "type": "com.mongodb.client.model.DeleteOptions"
    },
    {
      "type": "com.mongodb.client.model.EstimatedDocumentCountOptions"
    },
    {
      "type": "com.mongodb.client.model.FindOneAndDeleteOptions"
    },
    {
      "type": "com.mongodb.client.model.ReplaceOptions"
    },
    {
      "type": "com.mongodb.client.model.UpdateOptions"
    },
    {
      "type": "com.mongodb.client.model.changestream.ChangeStreamDocument"
    },
    {
      "type": "com.mongodb.client.model.changestream.FullDocument"
    },
    {
      "type": "com.mongodb.client.result.DeleteResult"
    },
    {
      "type": "com.mongodb.client.result.InsertManyResult"
    },
    {
      "type": "com.mongodb.client.result.InsertOneResult"
    },
    {
      "type": "com.mongodb.client.result.UpdateResult"
    },
    {
      "type": "com.mongodb.connection.ClusterDescription"
    },
    {
      "type": "com.mongodb.connection.ClusterSettings"
    },
    {
      "type": "com.mongodb.connection.ConnectionPoolSettings"
    },
    {
      "type": "com.mongodb.connection.ConnectionPoolSettings$Builder"
    },
    {
      "type": "com.mongodb.connection.ProxySettings$Builder"
    },
    {
      "type": "com.mongodb.connection.ServerSettings"
    },
    {
      "type": "com.mongodb.connection.SocketSettings"
    },
    {
      "type": "com.mongodb.connection.SslSettings"
    },
    {
      "type": "com.mongodb.connection.SslSettings$Builder"
    },
    {
      "type": "com.mongodb.connection.TransportSettings"
    },
    {
      "type": "com.mongodb.event.CommandEvent"
    },
    {
      "type": "com.mongodb.event.CommandFailedEvent"
    },
    {
      "type": "com.mongodb.event.CommandListener",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.event.CommandStartedEvent"
    },
    {
      "type": "com.mongodb.event.CommandSucceededEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionCheckOutFailedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionCheckOutStartedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionCheckedInEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionCheckedOutEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionClosedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionCreatedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionPoolClearedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionPoolClosedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionPoolCreatedEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionPoolListener",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.event.ConnectionPoolReadyEvent"
    },
    {
      "type": "com.mongodb.event.ConnectionReadyEvent"
    },
    {
      "type": "com.mongodb.lang.Nullable"
    },
    {
      "type": "com.mongodb.reactivestreams.client.ChangeStreamPublisher"
    },
    {
      "type": "com.mongodb.reactivestreams.client.ClientSession"
    },
    {
      "type": "com.mongodb.reactivestreams.client.FindPublisher"
    },
    {
      "type": "com.mongodb.reactivestreams.client.ListDatabasesPublisher"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoClient",
      "allDeclaredFields": true
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoCollection"
    },
    {
      "type": "com.mongodb.reactivestreams.client.MongoDatabase"
    },
    {
      "type": "com.mongodb.reactivestreams.client.gridfs.GridFSBucket"
    },
    {
      "type": "com.mongodb.spi.dns.DnsClient"
    },
    {
      "type": "com.mongodb.spi.dns.InetAddressResolver"
    },
    {
      "type": "com.netflix.appinfo.ApplicationInfoManager",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.appinfo.ApplicationInfoManager$InstanceStatusMapper"
    },
    {
      "type": "com.netflix.appinfo.ApplicationInfoManager$StatusChangeListener"
    },
    {
      "type": "com.netflix.appinfo.DataCenterInfo"
    },
    {
      "type": "com.netflix.appinfo.EurekaInstanceConfig",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.appinfo.HealthCheckCallback"
    },
    {
      "type": "com.netflix.appinfo.HealthCheckHandler"
    },
    {
      "type": "com.netflix.appinfo.InstanceInfo"
    },
    {
      "type": "com.netflix.appinfo.InstanceInfo$InstanceStatus"
    },
    {
      "type": "com.netflix.discovery.AbstractDiscoveryClientOptionalArgs",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.discovery.DiscoveryClient"
    },
    {
      "type": "com.netflix.discovery.EurekaClient",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.discovery.EurekaClientConfig",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.discovery.EurekaEventListener"
    },
    {
      "type": "com.netflix.discovery.PreRegistrationHandler"
    },
    {
      "type": "com.netflix.discovery.shared.Application"
    },
    {
      "type": "com.netflix.discovery.shared.Applications"
    },
    {
      "type": "com.netflix.discovery.shared.LookupService",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.discovery.shared.transport.EurekaTransportConfig",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.discovery.shared.transport.TransportClientFactory"
    },
    {
      "type": "com.netflix.discovery.shared.transport.jersey.TransportClientFactories",
      "allDeclaredFields": true
    },
    {
      "type": "com.netflix.eventbus.spi.EventBus"
    },
    {
      "type": "com.querydsl.core.Query"
    },
    {
      "type": "com.querydsl.core.types.EntityPath"
    },
    {
      "type": "com.querydsl.core.types.Predicate"
    },
    {
      "type": "com.rabbitmq.client.Channel"
    },
    {
      "type": "com.rabbitmq.client.ConnectionFactory"
    },
    {
      "type": "com.samskivert.mustache.Mustache"
    },
    {
      "type": "com.sendgrid.SendGrid"
    },
    {
      "type": "com.stoyanr.evictor.ConcurrentMapWithTimedEviction"
    },
    {
      "type": "com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.unboundid.ldap.listener.InMemoryDirectoryServer"
    },
    {
      "type": "com.wavefront.sdk.common.WavefrontSender"
    },
    {
      "type": "com.wavefront.sdk.common.application.ApplicationTags"
    },
    {
      "type": "com.zaxxer.hikari.HikariDataSource"
    },
    {
      "type": "dev.ime.MsAreaApplication",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "main",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.MsAreaApplication$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.CommandEndpointHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.endpoint.CommandEndpointRouter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.endpoint.CommandEndpointRouter$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.CommandEndpointRouter$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.CommandEndpointRouter$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.QueryEndpointHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.endpoint.QueryEndpointRouter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.endpoint.QueryEndpointRouter$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.QueryEndpointRouter$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.QueryEndpointRouter$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.api.endpoint.RSocketAreaController",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.error.ApiExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.error.ErrorHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.api.validation.DtoValidator",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.dispatcher.CommandDispatcher",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.dispatcher.QueryDispatcher",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.dto.AreaDto"
    },
    {
      "type": "dev.ime.application.dto.ErrorResponse"
    },
    {
      "type": "dev.ime.application.dto.PaginationDto"
    },
    {
      "type": "dev.ime.application.exception.BasicException"
    },
    {
      "type": "dev.ime.application.handlers.CreateAreaCommandHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.handlers.DeleteAreaCommandHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.handlers.GetAllAreaQueryHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.handlers.GetByIdAreaQueryHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.handlers.UpdateAreaCommandHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.service.CommandService",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.service.QueryService",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.service.RSocketService",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.usecases.CreateAreaCommand"
    },
    {
      "type": "dev.ime.application.usecases.DeleteAreaCommand"
    },
    {
      "type": "dev.ime.application.usecases.GetAllAreaQuery"
    },
    {
      "type": "dev.ime.application.usecases.GetByIdAreaQuery"
    },
    {
      "type": "dev.ime.application.usecases.UpdateAreaCommand"
    },
    {
      "type": "dev.ime.application.utils.ReactiveLoggerUtils",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.utils.ReflectionUtils",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.utils.ResilienceConfigUtils",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.application.utils.SortingValidationUtils",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.AreaMapper",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.KafkaConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.KafkaConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.KafkaConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.KafkaConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.LoggerConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.LoggerConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.LoggerConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.LoggerConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.OpenApiConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.OpenApiConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.OpenApiConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.OpenApiConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.R2dbcConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.R2dbcConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.R2dbcConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.R2dbcConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.R2dbcConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.R2dbcConfigProperties$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.RSocketConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.RSocketConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.RSocketConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.RSocketConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.RedisConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.RedisConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.RedisConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.RedisConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.ResilienceConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.ResilienceConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.ResilienceConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.ResilienceConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.SecurityConfig",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.SecurityConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.SecurityConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.SecurityConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.config.UriConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.config.UriConfigProperties$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "dev.ime.domain.command.Command"
    },
    {
      "type": "dev.ime.domain.command.CommandHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.event.Event",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.model.Area"
    },
    {
      "type": "dev.ime.domain.ports.inbound.CommandEndpointPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.inbound.CommandServicePort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.inbound.QueryEndpointPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.inbound.QueryServicePort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.inbound.RSocketControllerPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.inbound.RSocketServicePort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.inbound.SubscriberPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.BaseProjectorPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.CreatureEntityCheckerPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.EntityCheckerPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.EventWriteRepositoryPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.ExtendedProjectorPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.PublisherPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.RSocketRepositoryPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.ports.outbound.ReadRepositoryPort",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.domain.query.Query"
    },
    {
      "type": "dev.ime.domain.query.QueryHandler",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.AreaProjectorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.AreaProjectorAdapter$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "dev.ime.infrastructure.adapter.AreaReadRepositoryAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.AreaReadRepositoryAdapter$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "dev.ime.infrastructure.adapter.CreatureRedisProjectorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.CreatureRedisProjectorAdapter$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "dev.ime.infrastructure.adapter.EventMongoWriteRepositoryAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.EventMongoWriteRepositoryAdapter$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "dev.ime.infrastructure.adapter.KafkaAreaSubscriberAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.KafkaCreatureSubscriberAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.KafkaPublisherAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.KafkaPublisherAdapter$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "dev.ime.infrastructure.adapter.RSocketCreatureCheckerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.RSocketRepositoryAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.adapter.RSocketRepositoryAdapter$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "dev.ime.infrastructure.adapter.RedisCreatureCheckerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.entity.AreaJpaEntity",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.entity.AreaJpaEntity$AreaJpaEntityBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.entity.CreatureRedisEntity"
    },
    {
      "type": "dev.ime.infrastructure.entity.EventMongoEntity",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.entity.EventMongoEntity$EventMongoEntityBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.repository.AreaReadRepository",
      "allDeclaredFields": true
    },
    {
      "type": "dev.ime.infrastructure.repository.EventMongoWriteRepository",
      "allDeclaredFields": true
    },
    {
      "type": "freemarker.template.Configuration"
    },
    {
      "type": "graphql.GraphQL"
    },
    {
      "type": "groovy.lang.MetaClass"
    },
    {
      "type": "groovy.text.TemplateEngine"
    },
    {
      "type": "groovy.text.markup.MarkupTemplateEngine"
    },
    {
      "type": "io.github.resilience4j.bulkhead.Bulkhead",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.bulkhead.Bulkhead$EventPublisher"
    },
    {
      "type": "io.github.resilience4j.bulkhead.Bulkhead$Metrics"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadConfig"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.bulkhead.BulkheadRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkhead"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadConfig"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.bulkhead.annotation.Bulkhead"
    },
    {
      "type": "io.github.resilience4j.bulkhead.event.BulkheadEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreaker",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreaker$EventPublisher"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreaker$Metrics"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreaker$State"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerConfig"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnCallNotPermittedEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnErrorEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnIgnoredErrorEvent"
    },
    {
      "type": "io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnSuccessEvent"
    },
    {
      "type": "io.github.resilience4j.common.CommonProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.CompositeCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.CustomizerWithName"
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.BulkheadConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.bulkhead.configuration.ThreadPoolBulkheadConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.circuitbreaker.configuration.CircuitBreakerConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.ratelimiter.configuration.RateLimiterConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.retry.configuration.RetryConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties$InstanceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.common.timelimiter.configuration.TimeLimiterConfigCustomizer"
    },
    {
      "type": "io.github.resilience4j.consumer.CircularEventConsumer"
    },
    {
      "type": "io.github.resilience4j.consumer.EventConsumerRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
    },
    {
      "type": "io.github.resilience4j.core.Registry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.core.Registry$EventPublisher"
    },
    {
      "type": "io.github.resilience4j.core.functions.CheckedConsumer"
    },
    {
      "type": "io.github.resilience4j.core.functions.CheckedFunction"
    },
    {
      "type": "io.github.resilience4j.core.functions.CheckedRunnable"
    },
    {
      "type": "io.github.resilience4j.core.functions.CheckedSupplier"
    },
    {
      "type": "io.github.resilience4j.core.metrics.MetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.core.registry.EntryAddedEvent"
    },
    {
      "type": "io.github.resilience4j.core.registry.EntryRemovedEvent"
    },
    {
      "type": "io.github.resilience4j.core.registry.EntryReplacedEvent"
    },
    {
      "type": "io.github.resilience4j.core.registry.RegistryEventConsumer",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractBulkheadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractCircuitBreakerMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractRateLimiterMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractRetryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractThreadPoolBulkheadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.AbstractTimeLimiterMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedBulkheadMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedBulkheadMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRetryMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedRetryMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedThreadPoolBulkheadMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedThreadPoolBulkheadMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetrics"
    },
    {
      "type": "io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetricsPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiter"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterConfig"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.ratelimiter.RateLimiterRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.annotation.RateLimiter"
    },
    {
      "type": "io.github.resilience4j.ratelimiter.event.RateLimiterEvent"
    },
    {
      "type": "io.github.resilience4j.reactor.AbstractSubscriber"
    },
    {
      "type": "io.github.resilience4j.reactor.adapter.ReactorAdapter"
    },
    {
      "type": "io.github.resilience4j.retry.Retry"
    },
    {
      "type": "io.github.resilience4j.retry.RetryConfig"
    },
    {
      "type": "io.github.resilience4j.retry.RetryConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.retry.RetryRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.retry.RetryRegistry$Builder"
    },
    {
      "type": "io.github.resilience4j.retry.annotation.Retry"
    },
    {
      "type": "io.github.resilience4j.retry.event.RetryEvent"
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.BulkheadAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.BulkheadAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.ReactorBulkheadAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.bulkhead.configure.RxJava2BulkheadAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.ReactorCircuitBreakerAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.circuitbreaker.configure.RxJava2CircuitBreakerAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.CompletionStageFallbackDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackDecorators",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.FallbackMethod"
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.ReactorFallbackDecorator",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.fallback.RxJava2FallbackDecorator"
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.ReactorRateLimiterAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.ratelimiter.configure.RxJava2RateLimiterAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.ReactorRetryAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RetryAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RetryAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.retry.configure.RxJava2RetryAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.spelresolver.SpelResolver",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.ReactorTimeLimiterAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.RxJava2TimeLimiterAspectExt"
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterAspectExt",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.spring6.utils.AspectJOnClasspathCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.spring6.utils.ReactorOnClasspathCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.spring6.utils.RxJava2OnClasspathCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.AbstractBulkheadConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.AbstractBulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint.BulkheadEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint.BulkheadEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerHystrixServerSideEvent"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerServerSideEvent"
    },
    {
      "type": "io.github.resilience4j.springboot3.circuitbreaker.monitoring.health.CircuitBreakersHealthIndicator"
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint.RateLimiterEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint.RateLimiterEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.ratelimiter.monitoring.health.RateLimitersHealthIndicator"
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.autoconfigure.RetryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.monitoring.endpoint.RetryEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.retry.monitoring.endpoint.RetryEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterProperties",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint.TimeLimiterEndpoint"
    },
    {
      "type": "io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint.TimeLimiterEventsEndpoint"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiter"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiterConfig"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiterConfig$Builder"
    },
    {
      "type": "io.github.resilience4j.timelimiter.TimeLimiterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.github.resilience4j.timelimiter.annotation.TimeLimiter"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterOnErrorEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterOnSuccessEvent"
    },
    {
      "type": "io.github.resilience4j.timelimiter.event.TimeLimiterOnTimeoutEvent"
    },
    {
      "type": "io.lettuce.core.AbstractRedisClient"
    },
    {
      "type": "io.lettuce.core.ClientOptions"
    },
    {
      "type": "io.lettuce.core.ClientOptions$Builder"
    },
    {
      "type": "io.lettuce.core.RedisClient"
    },
    {
      "type": "io.lettuce.core.RedisCredentialsProvider"
    },
    {
      "type": "io.lettuce.core.RedisURI"
    },
    {
      "type": "io.lettuce.core.RedisURI$Builder"
    },
    {
      "type": "io.lettuce.core.api.StatefulConnection"
    },
    {
      "type": "io.lettuce.core.api.StatefulRedisConnection"
    },
    {
      "type": "io.lettuce.core.cluster.ClusterClientOptions"
    },
    {
      "type": "io.lettuce.core.cluster.RedisClusterClient"
    },
    {
      "type": "io.lettuce.core.cluster.api.StatefulRedisClusterConnection"
    },
    {
      "type": "io.lettuce.core.codec.RedisCodec"
    },
    {
      "type": "io.lettuce.core.event.EventBus"
    },
    {
      "type": "io.lettuce.core.event.EventPublisherOptions"
    },
    {
      "type": "io.lettuce.core.metrics.CommandLatencyRecorder"
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerOptions",
      "allDeclaredFields": true
    },
    {
      "type": "io.lettuce.core.metrics.MicrometerOptions$Builder"
    },
    {
      "type": "io.lettuce.core.resource.ClientResources",
      "allDeclaredFields": true
    },
    {
      "type": "io.lettuce.core.resource.ClientResources$Builder"
    },
    {
      "type": "io.lettuce.core.resource.DefaultClientResources",
      "allDeclaredFields": true
    },
    {
      "type": "io.lettuce.core.resource.DefaultClientResources$Builder"
    },
    {
      "type": "io.lettuce.core.resource.Delay"
    },
    {
      "type": "io.lettuce.core.resource.DnsResolver"
    },
    {
      "type": "io.lettuce.core.resource.EventLoopGroupProvider"
    },
    {
      "type": "io.lettuce.core.resource.NettyCustomizer"
    },
    {
      "type": "io.lettuce.core.resource.SocketAddressResolver"
    },
    {
      "type": "io.lettuce.core.resource.ThreadFactoryProvider"
    },
    {
      "type": "io.lettuce.core.tracing.Tracing"
    },
    {
      "type": "io.micrometer.appoptics.AppOpticsMeterRegistry"
    },
    {
      "type": "io.micrometer.atlas.AtlasMeterRegistry"
    },
    {
      "type": "io.micrometer.common.KeyValue"
    },
    {
      "type": "io.micrometer.common.KeyValues"
    },
    {
      "type": "io.micrometer.common.lang.NonNull"
    },
    {
      "type": "io.micrometer.common.lang.NonNullApi"
    },
    {
      "type": "io.micrometer.common.lang.NonNullFields"
    },
    {
      "type": "io.micrometer.common.lang.Nullable"
    },
    {
      "type": "io.micrometer.core.annotation.Incubating"
    },
    {
      "type": "io.micrometer.core.annotation.Timed"
    },
    {
      "type": "io.micrometer.core.instrument.Clock",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.Counter"
    },
    {
      "type": "io.micrometer.core.instrument.DistributionSummary"
    },
    {
      "type": "io.micrometer.core.instrument.FunctionCounter"
    },
    {
      "type": "io.micrometer.core.instrument.FunctionTimer"
    },
    {
      "type": "io.micrometer.core.instrument.Gauge"
    },
    {
      "type": "io.micrometer.core.instrument.HighCardinalityTagsDetector"
    },
    {
      "type": "io.micrometer.core.instrument.LongTaskTimer"
    },
    {
      "type": "io.micrometer.core.instrument.Measurement"
    },
    {
      "type": "io.micrometer.core.instrument.Meter"
    },
    {
      "type": "io.micrometer.core.instrument.Meter$Id"
    },
    {
      "type": "io.micrometer.core.instrument.Meter$Type"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$Config"
    },
    {
      "type": "io.micrometer.core.instrument.MeterRegistry$More"
    },
    {
      "type": "io.micrometer.core.instrument.Statistic",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.Tag"
    },
    {
      "type": "io.micrometer.core.instrument.Tags"
    },
    {
      "type": "io.micrometer.core.instrument.TimeGauge"
    },
    {
      "type": "io.micrometer.core.instrument.Timer"
    },
    {
      "type": "io.micrometer.core.instrument.Timer$Builder"
    },
    {
      "type": "io.micrometer.core.instrument.binder.MeterBinder",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
    },
    {
      "type": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
    },
    {
      "type": "io.micrometer.core.instrument.composite.CompositeMeterRegistry"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterFilterReply"
    },
    {
      "type": "io.micrometer.core.instrument.config.MeterRegistryConfig",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.config.NamingConvention"
    },
    {
      "type": "io.micrometer.core.instrument.config.validate.Validated"
    },
    {
      "type": "io.micrometer.core.instrument.config.validate.ValidationException"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.TimeWindowSum"
    },
    {
      "type": "io.micrometer.core.instrument.distribution.pause.PauseDetector"
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler$IgnoredMeters"
    },
    {
      "type": "io.micrometer.core.instrument.observation.MeterObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.search.RequiredSearch"
    },
    {
      "type": "io.micrometer.core.instrument.search.Search"
    },
    {
      "type": "io.micrometer.core.instrument.simple.CountingMode"
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleConfig",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.datadog.DatadogMeterRegistry"
    },
    {
      "type": "io.micrometer.dynatrace.DynatraceMeterRegistry"
    },
    {
      "type": "io.micrometer.elastic.ElasticMeterRegistry"
    },
    {
      "type": "io.micrometer.ganglia.GangliaMeterRegistry"
    },
    {
      "type": "io.micrometer.graphite.GraphiteMeterRegistry"
    },
    {
      "type": "io.micrometer.humio.HumioMeterRegistry"
    },
    {
      "type": "io.micrometer.influx.InfluxMeterRegistry"
    },
    {
      "type": "io.micrometer.jmx.JmxMeterRegistry"
    },
    {
      "type": "io.micrometer.kairos.KairosMeterRegistry"
    },
    {
      "type": "io.micrometer.newrelic.NewRelicMeterRegistry"
    },
    {
      "type": "io.micrometer.observation.KeyValuesConvention",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.Observation"
    },
    {
      "type": "io.micrometer.observation.Observation$Context"
    },
    {
      "type": "io.micrometer.observation.Observation$Event"
    },
    {
      "type": "io.micrometer.observation.Observation$Scope"
    },
    {
      "type": "io.micrometer.observation.ObservationConvention",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.ObservationFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.ObservationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.ObservationPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.observation.ObservationRegistry$ObservationConfig"
    },
    {
      "type": "io.micrometer.observation.annotation.Observed"
    },
    {
      "type": "io.micrometer.observation.aop.ObservedAspect",
      "allDeclaredFields": true
    },
    {
      "type": "io.micrometer.prometheus.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.prometheusmetrics.PrometheusMeterRegistry"
    },
    {
      "type": "io.micrometer.registry.otlp.OtlpMeterRegistry"
    },
    {
      "type": "io.micrometer.signalfx.SignalFxMeterRegistry"
    },
    {
      "type": "io.micrometer.stackdriver.StackdriverMeterRegistry"
    },
    {
      "type": "io.micrometer.statsd.StatsdMeterRegistry"
    },
    {
      "type": "io.micrometer.tracing.Tracer"
    },
    {
      "type": "io.micrometer.tracing.otel.bridge.OtelTracer"
    },
    {
      "type": "io.netty.buffer.PooledByteBufAllocator"
    },
    {
      "type": "io.netty.channel.nio.NioEventLoopGroup"
    },
    {
      "type": "io.netty.channel.socket.SocketChannel"
    },
    {
      "type": "io.netty.resolver.AddressResolverGroup"
    },
    {
      "type": "io.netty.util.NettyRuntime"
    },
    {
      "type": "io.netty.util.Timer"
    },
    {
      "type": "io.netty.util.concurrent.EventExecutorGroup"
    },
    {
      "type": "io.netty.util.concurrent.Future"
    },
    {
      "type": "io.opentelemetry.sdk.OpenTelemetrySdk"
    },
    {
      "type": "io.r2dbc.pool.ConnectionPool",
      "allDeclaredFields": true
    },
    {
      "type": "io.r2dbc.pool.ConnectionPoolConfiguration"
    },
    {
      "type": "io.r2dbc.pool.PoolMetrics"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Box"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Circle"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Interval"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Json"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Line"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Lseg"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Path"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Point"
    },
    {
      "type": "io.r2dbc.postgresql.codec.Polygon"
    },
    {
      "type": "io.r2dbc.proxy.ProxyConnectionFactory"
    },
    {
      "type": "io.r2dbc.spi.Closeable",
      "allDeclaredFields": true
    },
    {
      "type": "io.r2dbc.spi.Connection"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactory",
      "allDeclaredFields": true
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactoryMetadata"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactoryOptions"
    },
    {
      "type": "io.r2dbc.spi.ConnectionFactoryOptions$Builder"
    },
    {
      "type": "io.r2dbc.spi.IsolationLevel"
    },
    {
      "type": "io.r2dbc.spi.Nullable"
    },
    {
      "type": "io.r2dbc.spi.Option"
    },
    {
      "type": "io.r2dbc.spi.R2dbcException"
    },
    {
      "type": "io.r2dbc.spi.Readable"
    },
    {
      "type": "io.r2dbc.spi.Row"
    },
    {
      "type": "io.r2dbc.spi.RowMetadata"
    },
    {
      "type": "io.r2dbc.spi.Statement"
    },
    {
      "type": "io.r2dbc.spi.TransactionDefinition"
    },
    {
      "type": "io.r2dbc.spi.Wrapped",
      "allDeclaredFields": true
    },
    {
      "type": "io.reactivex.Flowable"
    },
    {
      "type": "io.reactivex.rxjava3.core.Flowable"
    },
    {
      "type": "io.rsocket.ConnectionSetupPayload"
    },
    {
      "type": "io.rsocket.RSocket"
    },
    {
      "type": "io.rsocket.SocketAcceptor"
    },
    {
      "type": "io.rsocket.core.RSocketServer"
    },
    {
      "type": "io.rsocket.loadbalance.LoadbalanceStrategy"
    },
    {
      "type": "io.rsocket.transport.ClientTransport"
    },
    {
      "type": "io.rsocket.transport.netty.server.TcpServerTransport"
    },
    {
      "type": "io.smallrye.mutiny.Multi"
    },
    {
      "type": "io.swagger.v3.core.converter.AnnotatedType"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverter",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverterContext"
    },
    {
      "type": "io.swagger.v3.core.converter.ModelConverters",
      "fields": [
        {
          "name": "converters"
        }
      ]
    },
    {
      "type": "io.swagger.v3.core.filter.OpenAPISpecFilter"
    },
    {
      "type": "io.swagger.v3.core.filter.SpecFilter",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.core.util.ObjectMapperFactory",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.annotations.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Hidden"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPI31"
    },
    {
      "type": "io.swagger.v3.oas.annotations.OpenAPIDefinition"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Operation"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.Parameters"
    },
    {
      "type": "io.swagger.v3.oas.annotations.StringToClassMapItem"
    },
    {
      "type": "io.swagger.v3.oas.annotations.enums.ParameterIn"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.Extension"
    },
    {
      "type": "io.swagger.v3.oas.annotations.extensions.ExtensionProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.headers.Header"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.Link"
    },
    {
      "type": "io.swagger.v3.oas.annotations.links.LinkParameter"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ArraySchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentRequired"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DependentSchema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.DiscriminatorMapping"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Encoding"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.ExampleObject"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.annotations.media.SchemaProperty"
    },
    {
      "type": "io.swagger.v3.oas.annotations.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.annotations.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlow"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthFlows"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.OAuthScope"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.annotations.security.SecurityScheme"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.annotations.servers.ServerVariable"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tag"
    },
    {
      "type": "io.swagger.v3.oas.annotations.tags.Tags"
    },
    {
      "type": "io.swagger.v3.oas.models.Components"
    },
    {
      "type": "io.swagger.v3.oas.models.ExternalDocumentation"
    },
    {
      "type": "io.swagger.v3.oas.models.OpenAPI",
      "allDeclaredFields": true
    },
    {
      "type": "io.swagger.v3.oas.models.Operation"
    },
    {
      "type": "io.swagger.v3.oas.models.PathItem"
    },
    {
      "type": "io.swagger.v3.oas.models.Paths"
    },
    {
      "type": "io.swagger.v3.oas.models.SpecVersion"
    },
    {
      "type": "io.swagger.v3.oas.models.examples.Example"
    },
    {
      "type": "io.swagger.v3.oas.models.info.Info"
    },
    {
      "type": "io.swagger.v3.oas.models.media.ComposedSchema"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Content"
    },
    {
      "type": "io.swagger.v3.oas.models.media.MediaType"
    },
    {
      "type": "io.swagger.v3.oas.models.media.Schema"
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.Parameter"
    },
    {
      "type": "io.swagger.v3.oas.models.parameters.RequestBody"
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponse"
    },
    {
      "type": "io.swagger.v3.oas.models.responses.ApiResponses"
    },
    {
      "type": "io.swagger.v3.oas.models.security.Scopes"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityRequirement"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$In"
    },
    {
      "type": "io.swagger.v3.oas.models.security.SecurityScheme$Type"
    },
    {
      "type": "io.swagger.v3.oas.models.servers.Server"
    },
    {
      "type": "io.swagger.v3.oas.models.tags.Tag"
    },
    {
      "type": "io.undertow.Undertow"
    },
    {
      "type": "io.undertow.Undertow$ListenerConfig"
    },
    {
      "type": "io.undertow.protocols.ssl.UndertowAcceptingSslChannel"
    },
    {
      "type": "io.undertow.websockets.WebSocketProtocolHandshakeHandler"
    },
    {
      "type": "io.vavr.control.Option"
    },
    {
      "type": "io.vavr.control.Try"
    },
    {
      "type": "jakarta.activation.MimeType"
    },
    {
      "type": "jakarta.annotation.ManagedBean"
    },
    {
      "type": "jakarta.annotation.Nullable"
    },
    {
      "type": "jakarta.annotation.PostConstruct"
    },
    {
      "type": "jakarta.annotation.PreDestroy"
    },
    {
      "type": "jakarta.annotation.Resource"
    },
    {
      "type": "jakarta.ejb.EJB"
    },
    {
      "type": "jakarta.ejb.TransactionAttribute"
    },
    {
      "type": "jakarta.inject.Inject"
    },
    {
      "type": "jakarta.inject.Named"
    },
    {
      "type": "jakarta.inject.Provider"
    },
    {
      "type": "jakarta.inject.Qualifier"
    },
    {
      "type": "jakarta.inject.Scope"
    },
    {
      "type": "jakarta.inject.Singleton"
    },
    {
      "type": "jakarta.jms.ConnectionFactory"
    },
    {
      "type": "jakarta.jms.Message"
    },
    {
      "type": "jakarta.json.bind.Jsonb"
    },
    {
      "type": "jakarta.mail.internet.MimeMessage"
    },
    {
      "type": "jakarta.persistence.EntityManager"
    },
    {
      "type": "jakarta.persistence.EntityManagerFactory"
    },
    {
      "type": "jakarta.persistence.Persistence"
    },
    {
      "type": "jakarta.servlet.Filter"
    },
    {
      "type": "jakarta.servlet.MultipartConfigElement"
    },
    {
      "type": "jakarta.servlet.Servlet"
    },
    {
      "type": "jakarta.servlet.ServletRegistration"
    },
    {
      "type": "jakarta.servlet.ServletRequest"
    },
    {
      "type": "jakarta.transaction.Transaction"
    },
    {
      "type": "jakarta.transaction.TransactionManager"
    },
    {
      "type": "jakarta.transaction.Transactional"
    },
    {
      "type": "jakarta.validation.ClockProvider"
    },
    {
      "type": "jakarta.validation.Configuration"
    },
    {
      "type": "jakarta.validation.Constraint"
    },
    {
      "type": "jakarta.validation.ConstraintValidatorFactory"
    },
    {
      "type": "jakarta.validation.ConstraintViolation"
    },
    {
      "type": "jakarta.validation.MessageInterpolator"
    },
    {
      "type": "jakarta.validation.ParameterNameProvider"
    },
    {
      "type": "jakarta.validation.TraversableResolver"
    },
    {
      "type": "jakarta.validation.Validation"
    },
    {
      "type": "jakarta.validation.ValidationProviderResolver"
    },
    {
      "type": "jakarta.validation.Validator",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.validation.ValidatorContext"
    },
    {
      "type": "jakarta.validation.ValidatorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "jakarta.validation.constraints.Max"
    },
    {
      "type": "jakarta.validation.constraints.Min"
    },
    {
      "type": "jakarta.validation.constraints.NotBlank"
    },
    {
      "type": "jakarta.validation.constraints.Pattern"
    },
    {
      "type": "jakarta.validation.executable.ExecutableValidator"
    },
    {
      "type": "jakarta.validation.metadata.BeanDescriptor"
    },
    {
      "type": "jakarta.validation.metadata.ConstraintDescriptor"
    },
    {
      "type": "jakarta.xml.bind.Binder"
    },
    {
      "type": "java.io.Closeable",
      "allDeclaredFields": true
    },
    {
      "type": "java.io.Console",
      "methods": [
        {
          "name": "isTerminal",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.io.DataInput"
    },
    {
      "type": "java.io.DataOutput"
    },
    {
      "type": "java.io.File"
    },
    {
      "type": "java.io.FilePermission"
    },
    {
      "type": "java.io.IOException"
    },
    {
      "type": "java.io.InputStream"
    },
    {
      "type": "java.io.ObjectInputStream"
    },
    {
      "type": "java.io.ObjectOutputStream"
    },
    {
      "type": "java.io.OutputStream"
    },
    {
      "type": "java.io.Reader"
    },
    {
      "type": "java.io.Serializable",
      "allDeclaredFields": true
    },
    {
      "type": "java.io.Writer"
    },
    {
      "type": "java.lang.Appendable"
    },
    {
      "type": "java.lang.AutoCloseable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Boolean",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.CharSequence",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Class",
      "methods": [
        {
          "name": "getModule",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader"
    },
    {
      "type": "java.lang.ClassNotFoundException"
    },
    {
      "type": "java.lang.CloneNotSupportedException"
    },
    {
      "type": "java.lang.Comparable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Deprecated"
    },
    {
      "type": "java.lang.Double"
    },
    {
      "type": "java.lang.Enum",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Enum$EnumDesc",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Exception"
    },
    {
      "type": "java.lang.FunctionalInterface"
    },
    {
      "type": "java.lang.IllegalAccessException"
    },
    {
      "type": "java.lang.IllegalArgumentException"
    },
    {
      "type": "java.lang.IllegalStateException"
    },
    {
      "type": "java.lang.Integer"
    },
    {
      "type": "java.lang.InterruptedException"
    },
    {
      "type": "java.lang.Iterable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Long",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Long$LongCache",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Module",
      "methods": [
        {
          "name": "isNamed",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.NoSuchMethodException"
    },
    {
      "type": "java.lang.Number",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Object",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Package"
    },
    {
      "type": "java.lang.Record",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.Runnable"
    },
    {
      "type": "java.lang.RuntimeException"
    },
    {
      "type": "java.lang.RuntimePermission"
    },
    {
      "type": "java.lang.SafeVarargs"
    },
    {
      "type": "java.lang.SecurityException"
    },
    {
      "type": "java.lang.String",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.String$CaseInsensitiveComparator",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.StringBuilder"
    },
    {
      "type": "java.lang.Thread",
      "fields": [
        {
          "name": "threadLocalRandomProbe"
        }
      ]
    },
    {
      "type": "java.lang.Thread$State"
    },
    {
      "type": "java.lang.ThreadGroup"
    },
    {
      "type": "java.lang.Throwable"
    },
    {
      "type": "java.lang.Void",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.annotation.Annotation"
    },
    {
      "type": "java.lang.annotation.Documented"
    },
    {
      "type": "java.lang.annotation.Inherited"
    },
    {
      "type": "java.lang.annotation.Repeatable"
    },
    {
      "type": "java.lang.annotation.Retention"
    },
    {
      "type": "java.lang.annotation.Target"
    },
    {
      "type": "java.lang.constant.Constable",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.ConstantDesc",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc$AnonymousDynamicConstantDesc",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.constant.DynamicConstantDesc$CanonicalMapHolder",
      "allDeclaredFields": true
    },
    {
      "type": "java.lang.invoke.SerializedLambda"
    },
    {
      "type": "java.lang.management.MemoryPoolMXBean"
    },
    {
      "type": "java.lang.management.OperatingSystemMXBean"
    },
    {
      "type": "java.lang.management.ThreadInfo"
    },
    {
      "type": "java.lang.management.ThreadMXBean"
    },
    {
      "type": "java.lang.reflect.AccessibleObject"
    },
    {
      "type": "java.lang.reflect.AnnotatedElement"
    },
    {
      "type": "java.lang.reflect.Constructor"
    },
    {
      "type": "java.lang.reflect.Field"
    },
    {
      "type": "java.lang.reflect.GenericArrayType",
      "methods": [
        {
          "name": "getGenericComponentType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.GenericDeclaration"
    },
    {
      "type": "java.lang.reflect.Method"
    },
    {
      "type": "java.lang.reflect.ParameterizedType",
      "methods": [
        {
          "name": "getActualTypeArguments",
          "parameterTypes": []
        },
        {
          "name": "getOwnerType",
          "parameterTypes": []
        },
        {
          "name": "getRawType",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.Type"
    },
    {
      "type": "java.lang.reflect.TypeVariable",
      "methods": [
        {
          "name": "getBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.lang.reflect.WildcardType",
      "methods": [
        {
          "name": "getLowerBounds",
          "parameterTypes": []
        },
        {
          "name": "getUpperBounds",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "java.net.InetAddress"
    },
    {
      "type": "java.net.InetSocketAddress"
    },
    {
      "type": "java.net.NetPermission"
    },
    {
      "type": "java.net.SocketAddress"
    },
    {
      "type": "java.net.SocketPermission"
    },
    {
      "type": "java.net.URI"
    },
    {
      "type": "java.net.URL"
    },
    {
      "type": "java.net.URLPermission",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "java.net.http.HttpClient"
    },
    {
      "type": "java.nio.ByteBuffer"
    },
    {
      "type": "java.nio.charset.Charset"
    },
    {
      "type": "java.nio.file.Path"
    },
    {
      "type": "java.security.AllPermission"
    },
    {
      "type": "java.security.GeneralSecurityException"
    },
    {
      "type": "java.security.SecurityPermission"
    },
    {
      "type": "java.sql.Date"
    },
    {
      "type": "java.sql.Timestamp"
    },
    {
      "type": "java.text.DateFormat"
    },
    {
      "type": "java.time.Duration"
    },
    {
      "type": "java.time.Instant"
    },
    {
      "type": "java.util.ArrayList"
    },
    {
      "type": "java.util.Collection",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Comparator",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Date"
    },
    {
      "type": "java.util.EnumMap"
    },
    {
      "type": "java.util.EventListener",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Iterator"
    },
    {
      "type": "java.util.LinkedHashMap"
    },
    {
      "type": "java.util.List"
    },
    {
      "type": "java.util.Locale"
    },
    {
      "type": "java.util.Map",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Map$Entry",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Optional",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.Properties"
    },
    {
      "type": "java.util.PropertyPermission"
    },
    {
      "type": "java.util.ResourceBundle"
    },
    {
      "type": "java.util.ServiceLoader"
    },
    {
      "type": "java.util.Set"
    },
    {
      "type": "java.util.Spliterator"
    },
    {
      "type": "java.util.TimeZone"
    },
    {
      "type": "java.util.TreeMap"
    },
    {
      "type": "java.util.UUID"
    },
    {
      "type": "java.util.concurrent.BlockingQueue"
    },
    {
      "type": "java.util.concurrent.Callable"
    },
    {
      "type": "java.util.concurrent.CompletableFuture"
    },
    {
      "type": "java.util.concurrent.CompletionStage"
    },
    {
      "type": "java.util.concurrent.CountDownLatch"
    },
    {
      "type": "java.util.concurrent.Executor",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.concurrent.ExecutorService"
    },
    {
      "type": "java.util.concurrent.Future"
    },
    {
      "type": "java.util.concurrent.RejectedExecutionHandler"
    },
    {
      "type": "java.util.concurrent.ThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.concurrent.ThreadPoolExecutor"
    },
    {
      "type": "java.util.concurrent.TimeUnit"
    },
    {
      "type": "java.util.concurrent.TimeoutException"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicBoolean",
      "fields": [
        {
          "name": "value"
        }
      ]
    },
    {
      "type": "java.util.concurrent.atomic.AtomicInteger"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicLong"
    },
    {
      "type": "java.util.concurrent.atomic.AtomicReference"
    },
    {
      "type": "java.util.concurrent.atomic.Striped64",
      "fields": [
        {
          "name": "base"
        },
        {
          "name": "cellsBusy"
        }
      ]
    },
    {
      "type": "java.util.function.BiConsumer"
    },
    {
      "type": "java.util.function.BiFunction"
    },
    {
      "type": "java.util.function.BiPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.function.Consumer",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.function.Function",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.function.IntFunction",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.function.Predicate"
    },
    {
      "type": "java.util.function.Supplier",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.function.ToDoubleFunction"
    },
    {
      "type": "java.util.function.ToLongFunction"
    },
    {
      "type": "java.util.logging.Filter"
    },
    {
      "type": "java.util.logging.Handler"
    },
    {
      "type": "java.util.logging.Level"
    },
    {
      "type": "java.util.logging.LogManager"
    },
    {
      "type": "java.util.logging.LogManager$LoggerWeakRef"
    },
    {
      "type": "java.util.logging.LogRecord"
    },
    {
      "type": "java.util.logging.Logger",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.logging.Logger$LoggerBundle"
    },
    {
      "type": "java.util.regex.Pattern"
    },
    {
      "type": "java.util.stream.BaseStream",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.stream.Stream",
      "allDeclaredFields": true
    },
    {
      "type": "java.util.stream.Stream$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "javafx.beans.value.ObservableValue"
    },
    {
      "type": "javax.annotation.ManagedBean"
    },
    {
      "type": "javax.annotation.PostConstruct"
    },
    {
      "type": "javax.annotation.PreDestroy"
    },
    {
      "type": "javax.annotation.Resource"
    },
    {
      "type": "javax.cache.CacheManager"
    },
    {
      "type": "javax.cache.Caching"
    },
    {
      "type": "javax.inject.Inject"
    },
    {
      "type": "javax.inject.Named"
    },
    {
      "type": "javax.inject.Qualifier"
    },
    {
      "type": "javax.management.MBeanServer"
    },
    {
      "type": "javax.management.MalformedObjectNameException"
    },
    {
      "type": "javax.management.Notification"
    },
    {
      "type": "javax.management.NotificationEmitter"
    },
    {
      "type": "javax.management.NotificationListener"
    },
    {
      "type": "javax.management.ObjectName"
    },
    {
      "type": "javax.money.MonetaryAmount"
    },
    {
      "type": "javax.naming.InitialContext"
    },
    {
      "type": "javax.naming.ldap.LdapContext"
    },
    {
      "type": "javax.net.ssl.HostnameVerifier"
    },
    {
      "type": "javax.net.ssl.SSLContext"
    },
    {
      "type": "javax.smartcardio.CardPermission"
    },
    {
      "type": "javax.sql.DataSource"
    },
    {
      "type": "jdk.crac.management.CRaCMXBean"
    },
    {
      "type": "jdk.internal.reflect.CallerSensitive"
    },
    {
      "type": "jdk.internal.vm.annotation.IntrinsicCandidate"
    },
    {
      "type": "kotlin.Metadata"
    },
    {
      "type": "kotlin.coroutines.Continuation"
    },
    {
      "type": "kotlinx.coroutines.flow.Flow"
    },
    {
      "type": "kotlinx.coroutines.reactor.MonoKt"
    },
    {
      "type": "kotlinx.serialization.cbor.Cbor"
    },
    {
      "type": "kotlinx.serialization.json.Json"
    },
    {
      "type": "kotlinx.serialization.protobuf.ProtoBuf"
    },
    {
      "type": "liquibase.change.DatabaseChange"
    },
    {
      "type": "liquibase.integration.spring.SpringLiquibase"
    },
    {
      "type": "okhttp3.OkHttpClient"
    },
    {
      "type": "oracle.jdbc.OracleConnection"
    },
    {
      "type": "oracle.jdbc.datasource.OracleDataSource"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSource"
    },
    {
      "type": "oracle.ucp.jdbc.PoolDataSourceImpl"
    },
    {
      "type": "org.aopalliance.aop.Advice",
      "allDeclaredFields": true
    },
    {
      "type": "org.aopalliance.intercept.Interceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.aopalliance.intercept.Invocation",
      "allDeclaredFields": true
    },
    {
      "type": "org.aopalliance.intercept.Joinpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.aopalliance.intercept.MethodInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.aopalliance.intercept.MethodInvocation",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.avro.specific.AvroGenerated"
    },
    {
      "type": "org.apache.catalina.Manager"
    },
    {
      "type": "org.apache.catalina.startup.Tomcat"
    },
    {
      "type": "org.apache.commons.dbcp2.BasicDataSource"
    },
    {
      "type": "org.apache.commons.logging.Log"
    },
    {
      "type": "org.apache.commons.pool2.impl.GenericObjectPool"
    },
    {
      "type": "org.apache.coyote.UpgradeProtocol"
    },
    {
      "type": "org.apache.derby.jdbc.EmbeddedDriver"
    },
    {
      "type": "org.apache.el.ExpressionFactoryImpl",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.apache.hc.client5.http.impl.async.HttpAsyncClients"
    },
    {
      "type": "org.apache.hc.client5.http.impl.classic.HttpClients"
    },
    {
      "type": "org.apache.hc.core5.http.nio.AsyncRequestProducer"
    },
    {
      "type": "org.apache.hc.core5.reactive.ReactiveResponseConsumer"
    },
    {
      "type": "org.apache.kafka.clients.admin.AdminClient"
    },
    {
      "type": "org.apache.kafka.clients.admin.DescribeTopicsResult"
    },
    {
      "type": "org.apache.kafka.clients.admin.NewTopic"
    },
    {
      "type": "org.apache.kafka.clients.admin.TopicDescription"
    },
    {
      "type": "org.apache.kafka.clients.consumer.Consumer"
    },
    {
      "type": "org.apache.kafka.clients.consumer.ConsumerGroupMetadata"
    },
    {
      "type": "org.apache.kafka.clients.consumer.ConsumerRecord",
      "allDeclaredFields": true
    },
    {
      "type": "org.apache.kafka.clients.consumer.ConsumerRecords"
    },
    {
      "type": "org.apache.kafka.clients.producer.Callback"
    },
    {
      "type": "org.apache.kafka.clients.producer.Producer"
    },
    {
      "type": "org.apache.kafka.clients.producer.ProducerInterceptor"
    },
    {
      "type": "org.apache.kafka.clients.producer.ProducerRecord"
    },
    {
      "type": "org.apache.kafka.clients.producer.RecordMetadata"
    },
    {
      "type": "org.apache.kafka.common.KafkaFuture"
    },
    {
      "type": "org.apache.kafka.common.TopicPartition"
    },
    {
      "type": "org.apache.kafka.common.config.ConfigResource"
    },
    {
      "type": "org.apache.kafka.common.serialization.Deserializer"
    },
    {
      "type": "org.apache.kafka.common.serialization.Serializer"
    },
    {
      "type": "org.apache.kafka.streams.StreamsBuilder"
    },
    {
      "type": "org.apache.kafka.streams.processor.internals.assignment.FallbackPriorTaskAssignor"
    },
    {
      "type": "org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor"
    },
    {
      "type": "org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$InMemoryDslStoreSuppliers"
    },
    {
      "type": "org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers"
    },
    {
      "type": "org.apache.logging.log4j.core.LoggerContext"
    },
    {
      "type": "org.apache.logging.log4j.core.impl.Log4jContextFactory"
    },
    {
      "type": "org.apache.logging.log4j.spi.ExtendedLogger"
    },
    {
      "type": "org.apache.logging.slf4j.SLF4JProvider"
    },
    {
      "type": "org.apache.pulsar.client.api.PulsarClient"
    },
    {
      "type": "org.apache.tomcat.jdbc.pool.DataSource"
    },
    {
      "type": "org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
    },
    {
      "type": "org.aspectj.lang.ProceedingJoinPoint"
    },
    {
      "type": "org.aspectj.lang.annotation.Around"
    },
    {
      "type": "org.aspectj.lang.annotation.Aspect"
    },
    {
      "type": "org.aspectj.lang.annotation.Pointcut"
    },
    {
      "type": "org.aspectj.weaver.Advice"
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15AnnotationFinder",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.aspectj.weaver.World"
          ]
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.aspectj.weaver.tools.Jdk14TraceFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.bson.Document"
    },
    {
      "type": "org.bson.UuidRepresentation"
    },
    {
      "type": "org.bson.codecs.configuration.CodecRegistry"
    },
    {
      "type": "org.bson.conversions.Bson"
    },
    {
      "type": "org.bson.types.ObjectId"
    },
    {
      "type": "org.cache2k.Cache2kBuilder"
    },
    {
      "type": "org.cache2k.extra.micrometer.Cache2kCacheMetrics"
    },
    {
      "type": "org.cache2k.extra.spring.SpringCache2kCache"
    },
    {
      "type": "org.crac.Resource"
    },
    {
      "type": "org.eclipse.collections.api.list.ImmutableList"
    },
    {
      "type": "org.eclipse.core.runtime.FileLocator"
    },
    {
      "type": "org.eclipse.jetty.client.HttpClient"
    },
    {
      "type": "org.eclipse.jetty.ee10.servlet.ServletHolder"
    },
    {
      "type": "org.eclipse.jetty.ee10.webapp.WebAppContext"
    },
    {
      "type": "org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
    },
    {
      "type": "org.eclipse.jetty.server.Server"
    },
    {
      "type": "org.eclipse.jetty.util.Loader"
    },
    {
      "type": "org.elasticsearch.client.RestClient"
    },
    {
      "type": "org.elasticsearch.client.RestClientBuilder"
    },
    {
      "type": "org.flywaydb.core.Flyway"
    },
    {
      "type": "org.glassfish.jersey.client.JerseyClient"
    },
    {
      "type": "org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
    },
    {
      "type": "org.glassfish.jersey.server.ResourceConfig"
    },
    {
      "type": "org.glassfish.jersey.servlet.ServletContainer"
    },
    {
      "type": "org.h2.Driver"
    },
    {
      "type": "org.h2.jdbcx.JdbcDataSource"
    },
    {
      "type": "org.h2.server.web.JakartaWebServlet"
    },
    {
      "type": "org.hibernate.validator.HibernateValidator"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.jboss.logging.Logger"
          ]
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_es"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Log_$logger_es_ES"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_es"
    },
    {
      "type": "org.hibernate.validator.internal.util.logging.Messages_$bundle_es_ES"
    },
    {
      "type": "org.hsqldb.jdbc.JDBCDriver"
    },
    {
      "type": "org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
    },
    {
      "type": "org.influxdb.InfluxDB"
    },
    {
      "type": "org.jboss.logging.Logger"
    },
    {
      "type": "org.joda.time.ReadableInstant"
    },
    {
      "type": "org.jooq.DSLContext"
    },
    {
      "type": "org.locationtech.jts.geom.Geometry"
    },
    {
      "type": "org.neo4j.driver.Driver"
    },
    {
      "type": "org.postgresql.ds.PGSimpleDataSource"
    },
    {
      "type": "org.quartz.Scheduler"
    },
    {
      "type": "org.quartz.impl.StdSchedulerFactory"
    },
    {
      "type": "org.reactivestreams.Publisher",
      "allDeclaredFields": true
    },
    {
      "type": "org.reactivestreams.Subscriber",
      "allDeclaredFields": true
    },
    {
      "type": "org.reactivestreams.Subscription",
      "allDeclaredFields": true
    },
    {
      "type": "org.slf4j.Logger"
    },
    {
      "type": "org.slf4j.LoggerFactory"
    },
    {
      "type": "org.slf4j.bridge.SLF4JBridgeHandler"
    },
    {
      "type": "org.slf4j.spi.LocationAwareLogger"
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.api.AbstractOpenApiResource$ConditionType"
    },
    {
      "type": "org.springdoc.api.ErrorMessage",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.api.OpenApiResourceNotFoundException"
    },
    {
      "type": "org.springdoc.core.annotations.RouterOperation"
    },
    {
      "type": "org.springdoc.core.annotations.RouterOperations"
    },
    {
      "type": "org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.conditions.SpecPropertiesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocPageableConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocSecurityConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocSortConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.SpringDocUIConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.configuration.hints.SpringDocHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.configuration.hints.SpringDocSecurityHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springdoc.core.converters.AdditionalModelsConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.FileSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.ModelConverterRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PageOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PageableOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PolymorphicModelConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.PropertyCustomizingConverter"
    },
    {
      "type": "org.springdoc.core.converters.ResponseSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.SortOpenAPIConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.converters.WebFluxSupportConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.GlobalOperationCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiBuilderCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OpenApiLocaleCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.OperationCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.PropertyCustomizer"
    },
    {
      "type": "org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.customizers.SpringDocCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.filters.OpenApiMethodFilter"
    },
    {
      "type": "org.springdoc.core.fn.AbstractRouterFunctionVisitor"
    },
    {
      "type": "org.springdoc.core.fn.RouterFunctionData"
    },
    {
      "type": "org.springdoc.core.fn.RouterOperation"
    },
    {
      "type": "org.springdoc.core.models.ControllerAdviceInfo"
    },
    {
      "type": "org.springdoc.core.models.GroupedOpenApi"
    },
    {
      "type": "org.springdoc.core.models.MethodAttributes"
    },
    {
      "type": "org.springdoc.core.models.ParameterId"
    },
    {
      "type": "org.springdoc.core.models.ParameterInfo"
    },
    {
      "type": "org.springdoc.core.models.RequestBodyInfo"
    },
    {
      "type": "org.springdoc.core.parsers.ReturnTypeParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Cache",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Groups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$SortConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SpringDocConfigProperties$Webjars",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigParameters",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.properties.SwaggerUiOAuthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.ActuatorProvider"
    },
    {
      "type": "org.springdoc.core.providers.CloudFunctionProvider"
    },
    {
      "type": "org.springdoc.core.providers.JavadocProvider"
    },
    {
      "type": "org.springdoc.core.providers.ObjectMapperProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringDataWebPropertiesProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringDocProviders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.SpringWebProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.providers.WebConversionServiceProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.AbstractRequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericParameterService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.GenericResponseService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OpenAPIService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.OperationService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.RequestBodyService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.service.SecurityService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.core.utils.PropertyResolverUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.ui.AbstractSwaggerWelcome",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.api.OpenApiActuatorResource"
    },
    {
      "type": "org.springdoc.webflux.api.OpenApiResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.api.OpenApiWebfluxResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.core.configuration.SpringDocWebFluxConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.core.configuration.SpringDocWebFluxConfiguration$SpringDocWebFluxActuatorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.core.service.RequestService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerConfigResource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerIndexTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerUiHome"
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerWebFluxConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerWelcomeCommon",
      "allDeclaredFields": true
    },
    {
      "type": "org.springdoc.webflux.ui.SwaggerWelcomeWebFlux",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.amqp.rabbit.core.RabbitTemplate"
    },
    {
      "type": "org.springframework.aop.Advisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.ClassFilter"
    },
    {
      "type": "org.springframework.aop.Pointcut"
    },
    {
      "type": "org.springframework.aop.PointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.TargetSource"
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AspectJAdvisorBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory"
    },
    {
      "type": "org.springframework.aop.aspectj.annotation.AspectJBeanFactoryInitializationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.AopInfrastructureBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.ProxyConfig",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setProxyTargetClass",
          "parameterTypes": [
            "boolean"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.ProxyFactory"
    },
    {
      "type": "org.springframework.aop.framework.ProxyProcessorSupport",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "setOrder",
          "parameterTypes": [
            "int"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.framework.autoproxy.TargetSourceCreator"
    },
    {
      "type": "org.springframework.aop.scope.ScopedProxyBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aop.support.AbstractPointcutAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aot.generate.Generated"
    },
    {
      "type": "org.springframework.aot.generate.GenerationContext"
    },
    {
      "type": "org.springframework.aot.hint.RuntimeHints"
    },
    {
      "type": "org.springframework.aot.hint.annotation.Reflective",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.aot.hint.annotation.ReflectiveRuntimeHintsRegistrar"
    },
    {
      "type": "org.springframework.aot.hint.annotation.RegisterReflectionForBinding"
    },
    {
      "type": "org.springframework.aot.hint.annotation.SimpleReflectiveProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.hint.support.KotlinDetectorRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.hint.support.ObjectToObjectConverterRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.hint.support.PathMatchingResourcePatternResolverRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.hint.support.SpringFactoriesLoaderRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.aot.hint.support.SpringPropertiesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
    },
    {
      "type": "org.springframework.batch.core.launch.JobLauncher"
    },
    {
      "type": "org.springframework.beans.BeanInfoFactory"
    },
    {
      "type": "org.springframework.beans.BeanUtilsRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.BeansException"
    },
    {
      "type": "org.springframework.beans.PropertyEditorRegistry"
    },
    {
      "type": "org.springframework.beans.PropertyValues"
    },
    {
      "type": "org.springframework.beans.factory.Aware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.BeanClassLoaderAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.BeanCreationException"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.BeanFactoryAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.BeanNameAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.DisposableBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.FactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.InitializingBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.ListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.NoSuchBeanDefinitionException"
    },
    {
      "type": "org.springframework.beans.factory.ObjectFactory"
    },
    {
      "type": "org.springframework.beans.factory.ObjectProvider"
    },
    {
      "type": "org.springframework.beans.factory.SmartInitializingSingleton",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.annotation.Autowired"
    },
    {
      "type": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata"
    },
    {
      "type": "org.springframework.beans.factory.annotation.InjectionMetadata"
    },
    {
      "type": "org.springframework.beans.factory.annotation.JakartaAnnotationsRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.annotation.Qualifier"
    },
    {
      "type": "org.springframework.beans.factory.annotation.Value"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotContribution"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanFactoryInitializationCode"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationCodeFragments"
    },
    {
      "type": "org.springframework.beans.factory.aot.BeanRegistrationsAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.beans.factory.config.BeanDefinition"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanDefinitionHolder"
    },
    {
      "type": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.BeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
    },
    {
      "type": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.PlaceholderConfigurerSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.PropertyResourceConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.generator.BeanRegistrationContributionProvider"
    },
    {
      "type": "org.springframework.beans.factory.parsing.ProblemReporter"
    },
    {
      "type": "org.springframework.beans.factory.parsing.SourceExtractor"
    },
    {
      "type": "org.springframework.beans.factory.support.AutowireCandidateResolver"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistry"
    },
    {
      "type": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.support.BeanNameGenerator"
    },
    {
      "type": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.beans.factory.support.RegisteredBean"
    },
    {
      "type": "org.springframework.beans.factory.support.RootBeanDefinition"
    },
    {
      "type": "org.springframework.boot.ApplicationContextFactory"
    },
    {
      "type": "org.springframework.boot.BootstrapRegistryInitializer"
    },
    {
      "type": "org.springframework.boot.ClearCachesApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.LazyInitializationExcludeFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.SpringApplication",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.SpringApplication$SpringApplicationRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.SpringApplication.SpringApplicationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.SpringApplicationAotProcessor"
    },
    {
      "type": "org.springframework.boot.SpringApplicationBannerPrinter$SpringApplicationBannerPrinterRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.SpringApplicationBannerPrinter.SpringApplicationBannerPrinterRuntimeHints"
    },
    {
      "type": "org.springframework.boot.SpringApplicationRunListener"
    },
    {
      "type": "org.springframework.boot.SpringBootConfiguration"
    },
    {
      "type": "org.springframework.boot.SpringBootExceptionReporter"
    },
    {
      "type": "org.springframework.boot.WebApplicationType$WebApplicationTypeRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.WebApplicationType.WebApplicationTypeRuntimeHints"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventRepository"
    },
    {
      "type": "org.springframework.boot.actuate.audit.AuditEventsEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesHealthEndpointGroupsPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.data.mongo.MongoReactiveHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary$ServiceLevelObjectiveBoundaryHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary.ServiceLevelObjectiveBoundaryHints"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.r2dbc.ConnectionPoolMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.r2dbc.ConnectionFactoryHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator$StatusMappings"
    },
    {
      "type": "org.springframework.boot.actuate.availability.LivenessStateHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.beans.BeansEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.cache.CachesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.ShutdownEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.data.mongo.MongoReactiveHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.data.redis.RedisHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.ApiVersion"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointId"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.ExposableEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.Operation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationResponseBody"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.OperationType"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.SecurityContext"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.Show"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Endpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointConverter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.EndpointExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.OperationReflectiveProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.ReadOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.annotation.Selector"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.Link",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.PathMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointResponse",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer$ControllerEndpointDiscovererRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer$WebEndpointDiscovererRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$AbstractWebFluxEndpointHandlerMappingRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation"
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxEndpointHandlerMappingRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.env.EnvironmentEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.health.AbstractHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealth",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.CompositeReactiveHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.Health$Builder"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthComponent",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroup"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroups",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthEndpointWebExtensionRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.actuate.health.HealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.NamedContributor"
    },
    {
      "type": "org.springframework.boot.actuate.health.NamedContributors",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.PingHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.ReactiveHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.health.Status",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.StatusAggregator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.health.SystemHealth",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.info.EnvironmentInfoContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.info.GitInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.Info$Builder"
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.info.InfoEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.info.JavaInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.OsInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.info.ProcessInfoContributor"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LogFileWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.logging.LoggersEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.management.ThreadDumpEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint$AvailableTag",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricDescriptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.MetricsEndpoint$Sample",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
    },
    {
      "type": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.r2dbc.ConnectionFactoryHealthIndicator"
    },
    {
      "type": "org.springframework.boot.actuate.sbom.SbomEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
    },
    {
      "type": "org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
    },
    {
      "type": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
    },
    {
      "type": "org.springframework.boot.ansi.AnsiOutput$Enabled"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackage"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureAfter"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureBefore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.AutoConfigureOrder"
    },
    {
      "type": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.EnableAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.SpringBootApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.cache.CacheType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.codec.CodecProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnExpression"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnResource"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnThreading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnResourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.condition.SearchStrategy"
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "propertySourcesPlaceholderConfigurer",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "persistenceExceptionTranslationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.ConditionalOnRepositoryType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.OnRepositoryTypeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.RepositoryType"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "mongoManagedTypes",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "r2dbcManagedTypes",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfigureRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.ClientResourcesBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.LettuceClientConfigurationBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.PropertiesRedisConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration$ConnectionInfo"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Cluster"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Node"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Sentinel"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Standalone"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Ssl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
    },
    {
      "type": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizerBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider"
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider$FreeMarkerTemplateAvailabilityRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider"
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider$GroovyTemplateAvailabilityRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider.GroovyTemplateAvailabilityRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.gson.GsonProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "jsonMixinModuleEntries",
          "parameterTypes": [
            "org.springframework.context.ApplicationContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.JacksonAutoConfigurationRuntimeHints"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$IsolationLevel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry$Topic",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.KafkaStreamsAnnotationDrivenConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.PropertiesKafkaConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoClientSettingsBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails$GridFs"
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoProperties$Ssl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$MongoClientSettingsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.PropertiesMongoConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mongo.StandardMongoClientSettingsBuilderCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider"
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$GenericConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PooledConnectionFactoryCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration$PropertiesR2dbcConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.R2dbcConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketMessageHandlerCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server$Spec",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$EmbeddedServerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$OnRSocketWebServerCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration$JacksonCborStrategyConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration$JacksonJsonStrategyConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.IssuerUriCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.KeyValueCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.JwkSetUriReactiveJwtDecoderBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$JwtConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$OpaqueTokenConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterPropertiesCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$WebSecurityConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$WebSecurityConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration$SpringBootWebFluxSecurityConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationScriptsRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider"
    },
    {
      "type": "org.springframework.boot.autoconfigure.template.TemplateRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.thread.Threading"
    },
    {
      "type": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider"
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "methodValidationPostProcessor",
          "parameterTypes": [
            "org.springframework.core.env.Environment",
            "org.springframework.beans.factory.ObjectProvider",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.format.WebConversionService"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebHttpHandlerBuilderCustomizer"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider"
    },
    {
      "type": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailability",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.availability.ApplicationAvailabilityBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityChangeEvent"
    },
    {
      "type": "org.springframework.boot.availability.AvailabilityState"
    },
    {
      "type": "org.springframework.boot.availability.LivenessState"
    },
    {
      "type": "org.springframework.boot.availability.ReadinessState"
    },
    {
      "type": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.cloud.CloudPlatform"
    },
    {
      "type": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.FileEncodingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.TypeExcludeFilter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.ConfigurableBootstrapContext"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLoader"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocation",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "of",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocationEditor"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocationResolver"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataLocationRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundAction"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List",
            "org.springframework.boot.context.config.ConfigDataProperties$Activate"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.context.config.ConfigDataPropertiesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.DelegatingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory",
            "org.springframework.boot.context.properties.bind.Binder",
            "org.springframework.core.io.ResourceLoader"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.event.ApplicationReadyEvent"
    },
    {
      "type": "org.springframework.boot.context.event.ApplicationStartedEvent"
    },
    {
      "type": "org.springframework.boot.context.event.EventPublishingRunListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.SpringApplication",
            "java.lang.String[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.logging.LoggingApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.BoundConfigurationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBean"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationProperties"
    },
    {
      "type": "org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.context.properties.NestedConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.context.properties.PropertyMapper"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindHandler"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.BindResult"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Binder"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Name"
    },
    {
      "type": "org.springframework.boot.context.properties.bind.Nested"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationProperty"
    },
    {
      "type": "org.springframework.boot.context.properties.source.ConfigurationPropertyName"
    },
    {
      "type": "org.springframework.boot.convert.DurationUnit"
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration$DevToolsConnectionFactoryCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.autoconfigure.OnEnabledDevToolsCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsHomePropertiesPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory$Listener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.logger.DevToolsLogFactory.Listener"
    },
    {
      "type": "org.springframework.boot.devtools.restart.ConditionalOnInitializedRestarter"
    },
    {
      "type": "org.springframework.boot.devtools.restart.OnInitializedRestarterCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.devtools.restart.RestartScopeInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.diagnostics.FailureAnalysisReporter"
    },
    {
      "type": "org.springframework.boot.diagnostics.FailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.FailureAnalyzers"
    },
    {
      "type": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessor"
    },
    {
      "type": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertiesPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.PropertySourceLoader"
    },
    {
      "type": "org.springframework.boot.env.PropertySourceRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.boot.logging.DeferredLogFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.env.YamlPropertySourceLoader",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.info.BuildProperties"
    },
    {
      "type": "org.springframework.boot.info.GitProperties"
    },
    {
      "type": "org.springframework.boot.io.Base64ProtocolResolver"
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponent$Scope"
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule$JsonComponentBeanFactoryInitializationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jackson.JsonComponentModule.JsonComponentBeanFactoryInitializationAotProcessor"
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModule",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
    },
    {
      "type": "org.springframework.boot.jackson.JsonMixinModuleEntriesBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.DataSourceBuilder"
    },
    {
      "type": "org.springframework.boot.jdbc.DataSourceBuilderRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
    },
    {
      "type": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
    },
    {
      "type": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.json.JacksonRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.LogLevelEditor"
    },
    {
      "type": "org.springframework.boot.logging.LoggingSystemFactory"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.java.JavaLoggingSystemRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.ApplicationNameConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ColorConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
    },
    {
      "type": "org.springframework.boot.logging.logback.LogbackRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.logging.logback.RootLogLevelConfigurator"
    },
    {
      "type": "org.springframework.boot.origin.OriginProvider"
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "org.springframework.core.env.Environment"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketServerBootstrap",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.rsocket.context.RSocketServerInitializedEvent"
    },
    {
      "type": "org.springframework.boot.rsocket.messaging.RSocketStrategiesCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.rsocket.server.RSocketServer"
    },
    {
      "type": "org.springframework.boot.rsocket.server.RSocketServerCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.rsocket.server.RSocketServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
    },
    {
      "type": "org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationMode"
    },
    {
      "type": "org.springframework.boot.sql.init.DatabaseInitializationSettings"
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor$InitializerBeanNames"
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector"
    },
    {
      "type": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector"
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.NoSuchSslBundleException"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundle"
    },
    {
      "type": "org.springframework.boot.ssl.SslBundleRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.ssl.SslBundles",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.task.TaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.TaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.TaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.TaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
    },
    {
      "type": "org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "byAnnotation",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.ClientHttpRequestFactoriesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.client.RestTemplateBuilder"
    },
    {
      "type": "org.springframework.boot.web.codec.CodecCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.context.WebServerInitializedEvent"
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyRouteProvider"
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.NettyWebServer"
    },
    {
      "type": "org.springframework.boot.web.embedded.netty.SslServerCustomizer"
    },
    {
      "type": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer"
    },
    {
      "type": "org.springframework.boot.web.embedded.undertow.UndertowWebServer$UndertowWebServerRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.embedded.undertow.UndertowWebServer.UndertowWebServerRuntimeHints"
    },
    {
      "type": "org.springframework.boot.web.error.ErrorAttributeOptions"
    },
    {
      "type": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorAttributes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.filter.OrderedHiddenHttpMethodFilter"
    },
    {
      "type": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Compression",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Cookie",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Cookie$SameSite",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPage"
    },
    {
      "type": "org.springframework.boot.web.server.ErrorPageRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Http2",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings"
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings$MimeMappingsRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.server.MimeMappings.MimeMappingsRuntimeHints"
    },
    {
      "type": "org.springframework.boot.web.server.Shutdown"
    },
    {
      "type": "org.springframework.boot.web.server.Ssl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ClientAuth",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.Ssl$ServerNameSslBundle",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.WebServer"
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.DispatcherType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Encoding",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Jsp",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session$Cookie",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.boot.web.servlet.server.Session$SessionTrackingMode",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.Cache"
    },
    {
      "type": "org.springframework.cache.CacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCache"
    },
    {
      "type": "org.springframework.cache.caffeine.CaffeineCacheManager"
    },
    {
      "type": "org.springframework.cache.interceptor.CacheAspectSupport"
    },
    {
      "type": "org.springframework.cache.jcache.JCacheCache"
    },
    {
      "type": "org.springframework.cglib.core.ClassNameReader",
      "fields": [
        {
          "name": "EARLY_EXIT"
        }
      ]
    },
    {
      "type": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration"
    },
    {
      "type": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.BootstrapConfiguration"
    },
    {
      "type": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration"
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration"
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.EncryptionRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.encrypt.RsaProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.bootstrap.marker.Marker"
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled"
    },
    {
      "type": "org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled"
    },
    {
      "type": "org.springframework.cloud.client.DefaultServiceInstance",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.ServiceInstance",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.actuator.FeaturesEndpoint"
    },
    {
      "type": "org.springframework.cloud.client.actuator.HasFeatures",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.actuator.NamedFeature"
    },
    {
      "type": "org.springframework.cloud.client.discovery.DiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.event.InstanceRegisteredEvent"
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.BlockingRestClassesPresentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.DefaultRequest"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalanced"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerLifecycle"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Subset",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.Request"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.RequestData"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.Response"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancedExchangeFilterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerRetryPolicy$Factory"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerWebClientBuilderBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer"
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.loadbalancer.reactive.RetryableLoadBalancerExchangeFilterFunction"
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.Registration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint"
    },
    {
      "type": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtils",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtils$HostInfo"
    },
    {
      "type": "org.springframework.cloud.commons.util.InetUtilsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.config.client.ConfigServerInstanceProvider"
    },
    {
      "type": "org.springframework.cloud.config.server.config.ConfigServerProperties"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityPredicate"
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SleuthPresentVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.TlsProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.configuration.VerificationResult"
    },
    {
      "type": "org.springframework.cloud.context.config.annotation.RefreshScope"
    },
    {
      "type": "org.springframework.cloud.context.environment.EnvironmentChangeEvent"
    },
    {
      "type": "org.springframework.cloud.context.environment.EnvironmentManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.named.NamedContextFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.named.NamedContextFactory$Specification",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.context.refresh.ContextRefresher"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint$PauseEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartEndpoint$ResumeEndpoint"
    },
    {
      "type": "org.springframework.cloud.context.restart.RestartListener",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.context.scope.refresh.RefreshScope"
    },
    {
      "type": "org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent"
    },
    {
      "type": "org.springframework.cloud.endpoint.RefreshEndpoint"
    },
    {
      "type": "org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
    },
    {
      "type": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient"
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.String",
            "java.lang.Class[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients"
    },
    {
      "type": "org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties$Caffeine",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0",
      "allDeclaredFields": true,
      "fields": [
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ],
      "methods": [
        {
          "name": "CGLIB$SET_STATIC_CALLBACKS",
          "parameterTypes": [
            "org.springframework.cglib.proxy.Callback[]"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$FastClass$$0",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$FastClass$$1",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.CaffeineHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "loadBalancerChildContextInitializer",
          "parameterTypes": [
            "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
            "org.springframework.context.ApplicationContext"
          ]
        },
        {
          "name": "loadBalancerClientFactory",
          "parameterTypes": [
            "org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
            "org.springframework.beans.factory.ObjectProvider"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.CloudEurekaClient"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.CloudEurekaInstanceConfig",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnMissingRefreshScope"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnRefreshScope"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientConfigBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaClientHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaHealthIndicator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$JerseyClientNotPresentOrNotEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$JerseyClientPresentAndEnabledCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapConfiguration"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactories",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerClientConfiguration"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.metadata.ManagementMetadata"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClientConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$Builder"
    },
    {
      "type": "org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapDisabled"
    },
    {
      "type": "org.springframework.cloud.util.ConditionalOnBootstrapEnabled"
    },
    {
      "type": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.ApplicationContext"
    },
    {
      "type": "org.springframework.context.ApplicationContextAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.ApplicationContextInitializer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.ApplicationEvent"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisher"
    },
    {
      "type": "org.springframework.context.ApplicationEventPublisherAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.ApplicationListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.ApplicationStartupAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.ConfigurableApplicationContext"
    },
    {
      "type": "org.springframework.context.EmbeddedValueResolverAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.EnvironmentAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.Lifecycle",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.LifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.MessageSource"
    },
    {
      "type": "org.springframework.context.MessageSourceAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.MessageSourceResolvable"
    },
    {
      "type": "org.springframework.context.PayloadApplicationEvent"
    },
    {
      "type": "org.springframework.context.Phased",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.ResourceLoaderAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.SmartLifecycle",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.annotation.AnnotationConfigRegistry"
    },
    {
      "type": "org.springframework.context.annotation.AnnotationScopeMetadataResolver",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AspectJAutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.AutoProxyRegistrar",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Bean"
    },
    {
      "type": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$LookupElement"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan"
    },
    {
      "type": "org.springframework.context.annotation.ComponentScan$Filter"
    },
    {
      "type": "org.springframework.context.annotation.Conditional"
    },
    {
      "type": "org.springframework.context.annotation.Configuration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration"
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.ConfigurationClassPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setMetadataReaderFactory",
          "parameterTypes": [
            "org.springframework.core.type.classreading.MetadataReaderFactory"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.EnableAspectJAutoProxy"
    },
    {
      "type": "org.springframework.context.annotation.Import"
    },
    {
      "type": "org.springframework.context.annotation.ImportAware",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.annotation.ImportRuntimeHints"
    },
    {
      "type": "org.springframework.context.annotation.Lazy"
    },
    {
      "type": "org.springframework.context.annotation.Primary"
    },
    {
      "type": "org.springframework.context.annotation.Profile"
    },
    {
      "type": "org.springframework.context.annotation.ProfileCondition",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.annotation.Role"
    },
    {
      "type": "org.springframework.context.annotation.Scope"
    },
    {
      "type": "org.springframework.context.aot.KotlinReflectionBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.aot.ReflectiveProcessorBeanFactoryInitializationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.ContextClosedEvent"
    },
    {
      "type": "org.springframework.context.event.ContextRefreshedEvent"
    },
    {
      "type": "org.springframework.context.event.ContextStoppedEvent"
    },
    {
      "type": "org.springframework.context.event.DefaultEventListenerFactory",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.EventListener"
    },
    {
      "type": "org.springframework.context.event.EventListenerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.event.EventListenerMethodProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.context.event.SmartApplicationListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.i18n.LocaleContext"
    },
    {
      "type": "org.springframework.context.support.ApplicationObjectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
    },
    {
      "type": "org.springframework.context.support.GenericApplicationContext"
    },
    {
      "type": "org.springframework.context.support.MessageSourceAccessor"
    },
    {
      "type": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.DefaultParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.MethodParameter"
    },
    {
      "type": "org.springframework.core.Ordered",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.ParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.PrioritizedParameterNameDiscoverer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.PriorityOrdered",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.ReactiveAdapter"
    },
    {
      "type": "org.springframework.core.ReactiveAdapterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.ReactiveTypeDescriptor"
    },
    {
      "type": "org.springframework.core.ResolvableType"
    },
    {
      "type": "org.springframework.core.annotation.AliasFor"
    },
    {
      "type": "org.springframework.core.annotation.MergedAnnotation"
    },
    {
      "type": "org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
    },
    {
      "type": "org.springframework.core.annotation.Order"
    },
    {
      "type": "org.springframework.core.codec.Decoder"
    },
    {
      "type": "org.springframework.core.codec.Encoder"
    },
    {
      "type": "org.springframework.core.convert.ConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.convert.TypeDescriptor"
    },
    {
      "type": "org.springframework.core.convert.converter.Converter"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterFactory"
    },
    {
      "type": "org.springframework.core.convert.converter.ConverterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter"
    },
    {
      "type": "org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
    },
    {
      "type": "org.springframework.core.convert.support.ConfigurableConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.convert.support.DefaultConversionService"
    },
    {
      "type": "org.springframework.core.convert.support.GenericConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.ConfigurableEnvironment"
    },
    {
      "type": "org.springframework.core.env.ConfigurablePropertyResolver"
    },
    {
      "type": "org.springframework.core.env.Environment"
    },
    {
      "type": "org.springframework.core.env.EnvironmentCapable",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.env.MutablePropertySources"
    },
    {
      "type": "org.springframework.core.env.PropertyResolver"
    },
    {
      "type": "org.springframework.core.env.PropertySources"
    },
    {
      "type": "org.springframework.core.io.ProtocolResolver"
    },
    {
      "type": "org.springframework.core.io.Resource"
    },
    {
      "type": "org.springframework.core.io.ResourceLoader"
    },
    {
      "type": "org.springframework.core.io.buffer.DataBuffer"
    },
    {
      "type": "org.springframework.core.io.buffer.DataBufferFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.buffer.DefaultDataBuffer"
    },
    {
      "type": "org.springframework.core.io.buffer.DefaultDataBufferFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.io.support.PropertiesLoaderSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.metrics.ApplicationStartup"
    },
    {
      "type": "org.springframework.core.task.AsyncListenableTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.task.AsyncTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.task.SimpleAsyncTaskExecutor"
    },
    {
      "type": "org.springframework.core.task.TaskDecorator"
    },
    {
      "type": "org.springframework.core.task.TaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.core.type.AnnotationMetadata"
    },
    {
      "type": "org.springframework.core.type.classreading.CachingMetadataReaderFactory"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReader"
    },
    {
      "type": "org.springframework.core.type.classreading.MetadataReaderFactory"
    },
    {
      "type": "org.springframework.core.type.classreading.SimpleMetadataReaderFactory"
    },
    {
      "type": "org.springframework.dao.DataAccessException"
    },
    {
      "type": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.dao.support.PersistenceExceptionTranslator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.annotation.Id"
    },
    {
      "type": "org.springframework.data.annotation.Persistent"
    },
    {
      "type": "org.springframework.data.aot.AuditingBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.aot.ManagedTypesBeanFactoryInitializationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.cassandra.ReactiveSession"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterRegistration"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$ConverterRegistrationIntent"
    },
    {
      "type": "org.springframework.data.convert.CustomConversions$StoreConversions"
    },
    {
      "type": "org.springframework.data.convert.EntityConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.EntityReader",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.EntityWriter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.convert.PropertyValueConversions"
    },
    {
      "type": "org.springframework.data.domain.Example",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatchers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$MatchMode",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$MatcherConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$NoOpPropertyValueTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$NullHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$PropertySpecifier",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$PropertySpecifiers",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$PropertyValueTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ExampleMatcher$StringMatcher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Limit",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Limit$Limited",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Limit$Unlimited",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ManagedTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.OffsetScrollPosition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.OffsetScrollPosition$OffsetPositionFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.PageRequest"
    },
    {
      "type": "org.springframework.data.domain.Pageable",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ScrollPosition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.ScrollPosition$Direction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Sort",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Sort$Direction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Sort$NullHandling",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Sort$Order",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Sort$TypedSort",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.domain.Window"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
    },
    {
      "type": "org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
    },
    {
      "type": "org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
    },
    {
      "type": "org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
    },
    {
      "type": "org.springframework.data.jpa.repository.JpaRepository"
    },
    {
      "type": "org.springframework.data.keyvalue.annotation.KeySpace"
    },
    {
      "type": "org.springframework.data.keyvalue.aot.KeyValueRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory"
    },
    {
      "type": "org.springframework.data.ldap.repository.LdapRepository"
    },
    {
      "type": "org.springframework.data.mapping.Association"
    },
    {
      "type": "org.springframework.data.mapping.MappingException"
    },
    {
      "type": "org.springframework.data.mapping.PersistentEntity"
    },
    {
      "type": "org.springframework.data.mapping.PersistentProperty"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyAccessor"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPath"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPathAccessor"
    },
    {
      "type": "org.springframework.data.mapping.PersistentPropertyPaths"
    },
    {
      "type": "org.springframework.data.mapping.PropertyPath"
    },
    {
      "type": "org.springframework.data.mapping.callback.EntityCallbacks"
    },
    {
      "type": "org.springframework.data.mapping.callback.ReactiveEntityCallbacks"
    },
    {
      "type": "org.springframework.data.mapping.context.AbstractMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mapping.context.MappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mapping.model.EntityInstantiators"
    },
    {
      "type": "org.springframework.data.mapping.model.FieldNamingStrategy"
    },
    {
      "type": "org.springframework.data.mapping.model.MutablePersistentEntity"
    },
    {
      "type": "org.springframework.data.mapping.model.ParameterValueProvider"
    },
    {
      "type": "org.springframework.data.mapping.model.Property"
    },
    {
      "type": "org.springframework.data.mapping.model.SimpleTypeHolder"
    },
    {
      "type": "org.springframework.data.mapping.model.ValueExpressionEvaluator"
    },
    {
      "type": "org.springframework.data.mongodb.CodecRegistryProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.MongoDatabaseFactory"
    },
    {
      "type": "org.springframework.data.mongodb.MongoManagedTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.ReactiveMongoDatabaseFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.SessionSynchronization"
    },
    {
      "type": "org.springframework.data.mongodb.aot.MongoManagedTypesBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.aot.MongoRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.config.GeoJsonConfiguration"
    },
    {
      "type": "org.springframework.data.mongodb.core.BulkOperations$BulkMode"
    },
    {
      "type": "org.springframework.data.mongodb.core.ChangeStreamEvent"
    },
    {
      "type": "org.springframework.data.mongodb.core.ChangeStreamOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionPreparer"
    },
    {
      "type": "org.springframework.data.mongodb.core.CollectionPreparerSupport$ReactiveCollectionPreparerDelegate"
    },
    {
      "type": "org.springframework.data.mongodb.core.EntityOperations$AdaptibleEntity"
    },
    {
      "type": "org.springframework.data.mongodb.core.FindAndModifyOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.FindAndReplaceOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.FindPublisherPreparer"
    },
    {
      "type": "org.springframework.data.mongodb.core.MappedDocument"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoAction"
    },
    {
      "type": "org.springframework.data.mongodb.core.MongoTemplate"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$AggregationDefinition"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$DistinctQueryContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$QueryContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.QueryOperations$UpdateContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveAggregationOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveAggregationOperation$ReactiveAggregation"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveBulkOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveChangeStreamOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveChangeStreamOperation$ReactiveChangeStream"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveCollectionCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveDatabaseCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveFindOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveFindOperation$ReactiveFind"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveFluentMongoOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveInsertOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveInsertOperation$ReactiveInsert"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMapReduceOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMapReduceOperation$ReactiveMapReduce"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate$DocumentCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate$PersistableEntityModel"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReactiveCollectionQueryCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReadDocumentCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveRemoveOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveRemoveOperation$ReactiveRemove"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveSessionCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveSessionScoped"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveUpdateOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ReactiveUpdateOperation$ReactiveUpdate"
    },
    {
      "type": "org.springframework.data.mongodb.core.ReplaceOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.ViewOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.WriteConcernResolver"
    },
    {
      "type": "org.springframework.data.mongodb.core.WriteResultChecking"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.Aggregation"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationOperation"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.AggregationPipeline"
    },
    {
      "type": "org.springframework.data.mongodb.core.aggregation.TypedAggregation"
    },
    {
      "type": "org.springframework.data.mongodb.core.annotation.Collation"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.AbstractMongoConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DbRefProxyHandler"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DbRefResolver"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DbRefResolverCallback"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.DocumentAccessor"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MappingMongoConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoTypeMapper"
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.MongoWriter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.convert.ObjectPath"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.IndexOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.index.ReactiveIndexOperations"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntity"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.Document"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.DocumentPointer"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.Field"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.MongoMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.MongoPersistentEntity"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.MongoPersistentProperty"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapping.event.MongoMappingEvent"
    },
    {
      "type": "org.springframework.data.mongodb.core.mapreduce.MapReduceOptions"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.BasicQuery"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.BasicQuery$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Collation"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.NearQuery"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Query"
    },
    {
      "type": "org.springframework.data.mongodb.core.query.Query$$SpringCGLIB$$0",
      "fields": [
        {
          "name": "CGLIB$CALLBACK_FILTER"
        },
        {
          "name": "CGLIB$FACTORY_DATA"
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.core.query.UpdateDefinition"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsObject"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.GridFsOperationsSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.ReactiveGridFsOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.ReactiveGridFsResource"
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.ReactiveGridFsTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.mongodb.gridfs.ReactiveGridFsTemplate$ReactiveBucketCallback"
    },
    {
      "type": "org.springframework.data.mongodb.repository.ReactiveMongoRepository"
    },
    {
      "type": "org.springframework.data.mongodb.repository.aot.AotMongoRepositoryPostProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.repository.aot.RepositoryRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.mongodb.repository.config.EnableReactiveMongoRepositories"
    },
    {
      "type": "org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoryConfigurationExtension"
    },
    {
      "type": "org.springframework.data.mongodb.repository.support.MongoRepositoryFactory"
    },
    {
      "type": "org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.projection.EntityProjection"
    },
    {
      "type": "org.springframework.data.projection.EntityProjection$PropertyProjection"
    },
    {
      "type": "org.springframework.data.projection.EntityProjectionIntrospector"
    },
    {
      "type": "org.springframework.data.projection.ProjectionFactory"
    },
    {
      "type": "org.springframework.data.querydsl.aot.QuerydslHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslBindings"
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
    },
    {
      "type": "org.springframework.data.querydsl.binding.QuerydslPredicate"
    },
    {
      "type": "org.springframework.data.r2dbc.aot.R2dbcRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.r2dbc.convert.MappingR2dbcConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.convert.R2dbcConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.FluentR2dbcOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.R2dbcEntityTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveDataAccessStrategy"
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveDeleteOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveDeleteOperation$ReactiveDelete"
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveInsertOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveInsertOperation$ReactiveInsert"
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveSelectOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveSelectOperation$ReactiveSelect"
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveUpdateOperation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.core.ReactiveUpdateOperation$ReactiveUpdate"
    },
    {
      "type": "org.springframework.data.r2dbc.core.StatementMapper$SelectSpec"
    },
    {
      "type": "org.springframework.data.r2dbc.dialect.DialectResolver$BuiltInDialectProvider"
    },
    {
      "type": "org.springframework.data.r2dbc.dialect.DialectResolver$R2dbcDialectProvider"
    },
    {
      "type": "org.springframework.data.r2dbc.dialect.DialectResolver.BuiltInDialectProvider"
    },
    {
      "type": "org.springframework.data.r2dbc.dialect.R2dbcDialect"
    },
    {
      "type": "org.springframework.data.r2dbc.mapping.OutboundRow"
    },
    {
      "type": "org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.r2dbc.repository.R2dbcRepository"
    },
    {
      "type": "org.springframework.data.r2dbc.repository.config.EnableR2dbcRepositories"
    },
    {
      "type": "org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactory"
    },
    {
      "type": "org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Class"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.redis.aot.RedisRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.redis.cache.RedisCache"
    },
    {
      "type": "org.springframework.data.redis.connection.ClusterCommandExecutor"
    },
    {
      "type": "org.springframework.data.redis.connection.ClusterTopologyProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.DataType"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.connection.RedisClusterConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisClusterConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConfiguration$ClusterConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisConnectionFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.connection.RedisKeyCommands"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisNode"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisPassword"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisSentinelConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisSentinelConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisSocketConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.RedisStandaloneConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.SortParameters"
    },
    {
      "type": "org.springframework.data.redis.connection.jedis.JedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.ClusterConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration$LettuceClientConfigurationBuilder"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceClusterConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnection$PipeliningFlushPolicy"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$MutableLettuceClientConfiguration"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$State"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisClusterConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisConnection"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.RedisCredentialsProviderFactory"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.StaticMasterReplicaConnectionProvider"
    },
    {
      "type": "org.springframework.data.redis.connection.lettuce.aot.LettuceRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.redis.core.BoundGeoOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundHashOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundListOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundStreamOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundValueOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BoundZSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.BulkMapper"
    },
    {
      "type": "org.springframework.data.redis.core.ClusterOperations"
    },
    {
      "type": "org.springframework.data.redis.core.Cursor"
    },
    {
      "type": "org.springframework.data.redis.core.GeoOperations"
    },
    {
      "type": "org.springframework.data.redis.core.HashOperations"
    },
    {
      "type": "org.springframework.data.redis.core.HyperLogLogOperations"
    },
    {
      "type": "org.springframework.data.redis.core.KeyOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ListOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveGeoOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveHashOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveHyperLogLogOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveListOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisCallback"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisSessionCallback"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveRedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveStreamOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveStringRedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveValueOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ReactiveZSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.RedisAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.RedisCallback"
    },
    {
      "type": "org.springframework.data.redis.core.RedisHash"
    },
    {
      "type": "org.springframework.data.redis.core.RedisOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.RedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ScanOptions"
    },
    {
      "type": "org.springframework.data.redis.core.SessionCallback"
    },
    {
      "type": "org.springframework.data.redis.core.SetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.StreamOperations"
    },
    {
      "type": "org.springframework.data.redis.core.StringRedisTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.redis.core.ValueOperations"
    },
    {
      "type": "org.springframework.data.redis.core.ZSetOperations"
    },
    {
      "type": "org.springframework.data.redis.core.query.SortQuery"
    },
    {
      "type": "org.springframework.data.redis.core.script.RedisScript"
    },
    {
      "type": "org.springframework.data.redis.core.script.ScriptExecutor"
    },
    {
      "type": "org.springframework.data.redis.hash.HashMapper"
    },
    {
      "type": "org.springframework.data.redis.listener.ChannelTopic"
    },
    {
      "type": "org.springframework.data.redis.listener.PatternTopic"
    },
    {
      "type": "org.springframework.data.redis.listener.ReactiveRedisMessageListenerContainer"
    },
    {
      "type": "org.springframework.data.redis.listener.Topic"
    },
    {
      "type": "org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
    },
    {
      "type": "org.springframework.data.redis.repository.support.RedisRepositoryFactory"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisElementReader"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisElementWriter"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisSerializationContext"
    },
    {
      "type": "org.springframework.data.redis.serializer.RedisSerializer"
    },
    {
      "type": "org.springframework.data.relational.RelationalManagedTypes",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.aot.RelationalManagedTypesBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$ConversionContext"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$ProjectingConversionContext"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.MappingRelationalConverter$RelationalPropertyValueProvider"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.ObjectPath"
    },
    {
      "type": "org.springframework.data.relational.core.conversion.RelationalConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.conversion.RowDocumentAccessor"
    },
    {
      "type": "org.springframework.data.relational.core.dialect.ArrayColumns"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.AggregatePath"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.BasicRelationalPersistentProperty"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.Column"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.NamingStrategy"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalMappingContext",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
    },
    {
      "type": "org.springframework.data.relational.core.mapping.Table"
    },
    {
      "type": "org.springframework.data.relational.core.query.Criteria"
    },
    {
      "type": "org.springframework.data.relational.core.query.Query"
    },
    {
      "type": "org.springframework.data.relational.core.query.Update"
    },
    {
      "type": "org.springframework.data.relational.core.sql.SqlIdentifier"
    },
    {
      "type": "org.springframework.data.relational.core.sql.Table"
    },
    {
      "type": "org.springframework.data.relational.domain.RowDocument"
    },
    {
      "type": "org.springframework.data.repository.NoRepositoryBean"
    },
    {
      "type": "org.springframework.data.repository.Repository"
    },
    {
      "type": "org.springframework.data.repository.aot.hint.RepositoryRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.config.AotRepositoryContext"
    },
    {
      "type": "org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfiguration"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfigurationAdapter"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryConfigurationSource"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryRegistrationAotContribution"
    },
    {
      "type": "org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "setConfigMap",
          "parameterTypes": [
            "java.util.Map"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.core.EntityInformation"
    },
    {
      "type": "org.springframework.data.repository.core.NamedQueries"
    },
    {
      "type": "org.springframework.data.repository.core.RepositoryInformation"
    },
    {
      "type": "org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactoryInformation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFactorySupport"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFragment"
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.util.List"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
    },
    {
      "type": "org.springframework.data.repository.kotlin.CoroutineCrudRepository"
    },
    {
      "type": "org.springframework.data.repository.query.FluentQuery",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.query.FluentQuery$ReactiveFluentQuery",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.repository.query.QueryLookupStrategy$Key"
    },
    {
      "type": "org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
    },
    {
      "type": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor"
    },
    {
      "type": "org.springframework.data.repository.reactive.ReactiveCrudRepository"
    },
    {
      "type": "org.springframework.data.repository.reactive.ReactiveSortingRepository"
    },
    {
      "type": "org.springframework.data.rest.core.config.RepositoryRestConfiguration"
    },
    {
      "type": "org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
    },
    {
      "type": "org.springframework.data.util.CustomCollectionRegistrar"
    },
    {
      "type": "org.springframework.data.util.CustomCollections$EclipseCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections$VavrCollections",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.CustomCollections.EclipseCollections"
    },
    {
      "type": "org.springframework.data.util.CustomCollections.VavrCollections"
    },
    {
      "type": "org.springframework.data.util.KotlinBeanInfoFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$DefaultPropertyNameDetectionStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$InvocationInformation",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$PropertyNameDetectionStrategy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$Recorded",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$Recorded$ToCollectionConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$Recorded$ToMapConverter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$RecordingMethodInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.MethodInvocationRecorder$Unrecorded",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.Streamable",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.data.util.TypeInformation"
    },
    {
      "type": "org.springframework.data.web.PageableHandlerMethodArgumentResolver"
    },
    {
      "type": "org.springframework.data.web.PagedModel"
    },
    {
      "type": "org.springframework.data.web.aot.WebRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonConfiguration"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataJacksonModules"
    },
    {
      "type": "org.springframework.data.web.config.SpringDataWebSettings"
    },
    {
      "type": "org.springframework.expression.BeanResolver"
    },
    {
      "type": "org.springframework.expression.EvaluationContext"
    },
    {
      "type": "org.springframework.expression.Expression"
    },
    {
      "type": "org.springframework.expression.ExpressionParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.expression.ParseException"
    },
    {
      "type": "org.springframework.expression.ParserContext"
    },
    {
      "type": "org.springframework.expression.common.TemplateAwareExpressionParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.expression.spel.standard.SpelExpression"
    },
    {
      "type": "org.springframework.expression.spel.standard.SpelExpressionParser",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.AnnotationFormatterFactory"
    },
    {
      "type": "org.springframework.format.Formatter"
    },
    {
      "type": "org.springframework.format.FormatterRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.Parser"
    },
    {
      "type": "org.springframework.format.Printer"
    },
    {
      "type": "org.springframework.format.support.FormattingConversionService",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.format.support.FormattingConversionServiceRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.hateoas.EntityModel"
    },
    {
      "type": "org.springframework.hateoas.Link"
    },
    {
      "type": "org.springframework.hateoas.server.LinkRelationProvider"
    },
    {
      "type": "org.springframework.http.CacheControl",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.ContentDisposition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpEntity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpHeaders",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpMethod",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpMimeTypesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.HttpRange",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpRequest"
    },
    {
      "type": "org.springframework.http.HttpStatus",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.HttpStatusCode",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.MediaType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.MediaTypeEditor"
    },
    {
      "type": "org.springframework.http.ProblemDetail",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.ReactiveHttpInputMessage"
    },
    {
      "type": "org.springframework.http.ResponseCookie$ResponseCookieBuilder"
    },
    {
      "type": "org.springframework.http.ResponseEntity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestExecution"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ClientHttpRequestInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.ClientHttpResponse"
    },
    {
      "type": "org.springframework.http.client.HttpComponentsClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.ReactorResourceFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.SimpleClientHttpRequestFactory"
    },
    {
      "type": "org.springframework.http.client.reactive.ClientHttpConnector",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.client.reactive.ReactorClientHttpConnector"
    },
    {
      "type": "org.springframework.http.codec.ClientCodecConfigurer"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurer$CustomCodecs"
    },
    {
      "type": "org.springframework.http.codec.CodecConfigurerRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.codec.ServerCodecConfigurer$ServerDefaultCodecs"
    },
    {
      "type": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
    },
    {
      "type": "org.springframework.http.converter.HttpMessageConverter"
    },
    {
      "type": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.JacksonModulesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.converter.json.ProblemDetailJacksonMixin",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.converter.json.ProblemDetailRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.http.server.PathContainer"
    },
    {
      "type": "org.springframework.http.server.reactive.HttpHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
    },
    {
      "type": "org.springframework.http.server.reactive.ServerHttpRequest"
    },
    {
      "type": "org.springframework.http.server.reactive.ServerHttpResponse"
    },
    {
      "type": "org.springframework.http.server.reactive.observation.DefaultServerRequestObservationConvention",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.http.server.reactive.observation.ServerRequestObservationContext"
    },
    {
      "type": "org.springframework.http.server.reactive.observation.ServerRequestObservationConvention",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.integration.config.EnableIntegration"
    },
    {
      "type": "org.springframework.integration.graph.IntegrationGraphServer"
    },
    {
      "type": "org.springframework.integration.monitor.IntegrationMBeanExporter"
    },
    {
      "type": "org.springframework.jdbc.core.JdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
    },
    {
      "type": "org.springframework.jdbc.datasource.SimpleDriverDataSource"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy"
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
    },
    {
      "type": "org.springframework.jdbc.datasource.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
    },
    {
      "type": "org.springframework.jms.core.JmsTemplate"
    },
    {
      "type": "org.springframework.jmx.export.MBeanExporter"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedAttribute"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedOperation"
    },
    {
      "type": "org.springframework.jmx.export.annotation.ManagedResource"
    },
    {
      "type": "org.springframework.kafka.annotation.EnableKafka"
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaBootstrapConfiguration",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaListener"
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.annotation.KafkaListenerConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.kafka.annotation.PartitionOffset"
    },
    {
      "type": "org.springframework.kafka.annotation.TopicPartition"
    },
    {
      "type": "org.springframework.kafka.aot.KafkaAvroBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.kafka.aot.KafkaRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.AbstractKafkaListenerEndpoint"
    },
    {
      "type": "org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.ContainerCustomizer"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerContainerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerEndpoint"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerEndpointRegistrar"
    },
    {
      "type": "org.springframework.kafka.config.KafkaListenerEndpointRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.config.MethodKafkaListenerEndpoint"
    },
    {
      "type": "org.springframework.kafka.config.StreamsBuilderFactoryBean"
    },
    {
      "type": "org.springframework.kafka.core.ConsumerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.ConsumerFactory$Listener"
    },
    {
      "type": "org.springframework.kafka.core.ConsumerPostProcessor"
    },
    {
      "type": "org.springframework.kafka.core.DefaultKafkaConsumerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.DefaultKafkaProducerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer"
    },
    {
      "type": "org.springframework.kafka.core.KafkaAdmin",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaAdmin$NewTopics",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaAdminOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaOperations$OperationsCallback"
    },
    {
      "type": "org.springframework.kafka.core.KafkaOperations$ProducerCallback"
    },
    {
      "type": "org.springframework.kafka.core.KafkaResourceFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.KafkaTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.core.ProducerFactory$Listener"
    },
    {
      "type": "org.springframework.kafka.core.ProducerPostProcessor"
    },
    {
      "type": "org.springframework.kafka.core.TransactionIdSuffixStrategy"
    },
    {
      "type": "org.springframework.kafka.core.reactive.ReactiveKafkaProducerTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.listener.AbstractMessageListenerContainer"
    },
    {
      "type": "org.springframework.kafka.listener.AfterRollbackProcessor"
    },
    {
      "type": "org.springframework.kafka.listener.BatchInterceptor"
    },
    {
      "type": "org.springframework.kafka.listener.CommonErrorHandler"
    },
    {
      "type": "org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
    },
    {
      "type": "org.springframework.kafka.listener.ConsumerAwareRebalanceListener"
    },
    {
      "type": "org.springframework.kafka.listener.ContainerProperties"
    },
    {
      "type": "org.springframework.kafka.listener.KafkaConsumerBackoffManager"
    },
    {
      "type": "org.springframework.kafka.listener.ListenerContainerRegistry",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.listener.MessageListenerContainer"
    },
    {
      "type": "org.springframework.kafka.listener.RecordInterceptor"
    },
    {
      "type": "org.springframework.kafka.listener.adapter.BatchToRecordAdapter"
    },
    {
      "type": "org.springframework.kafka.listener.adapter.RecordFilterStrategy"
    },
    {
      "type": "org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.DestinationTopicResolver"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfiguration"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurationBuilder"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicConfigurer"
    },
    {
      "type": "org.springframework.kafka.retrytopic.RetryTopicSchedulerWrapper"
    },
    {
      "type": "org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer"
    },
    {
      "type": "org.springframework.kafka.support.LoggingProducerListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.support.ProducerListener",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.support.TopicPartitionOffset"
    },
    {
      "type": "org.springframework.kafka.support.TopicPartitionOffset$SeekPosition"
    },
    {
      "type": "org.springframework.kafka.support.converter.BatchMessageConverter"
    },
    {
      "type": "org.springframework.kafka.support.converter.RecordMessageConverter"
    },
    {
      "type": "org.springframework.kafka.support.micrometer.KafkaRecordSenderContext"
    },
    {
      "type": "org.springframework.kafka.support.micrometer.KafkaTemplateObservationConvention"
    },
    {
      "type": "org.springframework.kafka.support.micrometer.MicrometerHolder"
    },
    {
      "type": "org.springframework.kafka.transaction.KafkaAwareTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.kafka.transaction.KafkaTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.lang.NonNull"
    },
    {
      "type": "org.springframework.lang.Nullable"
    },
    {
      "type": "org.springframework.ldap.core.ContextSource"
    },
    {
      "type": "org.springframework.ldap.core.LdapOperations"
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailMimeTypesRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.mail.javamail.JavaMailSenderImpl"
    },
    {
      "type": "org.springframework.messaging.Message"
    },
    {
      "type": "org.springframework.messaging.MessagingException"
    },
    {
      "type": "org.springframework.messaging.ReactiveMessageHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.messaging.converter.SmartMessageConverter"
    },
    {
      "type": "org.springframework.messaging.handler.CompositeMessageCondition"
    },
    {
      "type": "org.springframework.messaging.handler.HandlerMethod"
    },
    {
      "type": "org.springframework.messaging.handler.MessagingAdviceBean"
    },
    {
      "type": "org.springframework.messaging.handler.annotation.DestinationVariable"
    },
    {
      "type": "org.springframework.messaging.handler.annotation.MessageMapping"
    },
    {
      "type": "org.springframework.messaging.handler.annotation.MessageMappingReflectiveProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.messaging.handler.annotation.reactive.MessageMappingMessageHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory"
    },
    {
      "type": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver"
    },
    {
      "type": "org.springframework.messaging.handler.invocation.reactive.AbstractMethodMessageHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.messaging.handler.invocation.reactive.AbstractMethodMessageHandler$Match"
    },
    {
      "type": "org.springframework.messaging.handler.invocation.reactive.ArgumentResolverConfigurer"
    },
    {
      "type": "org.springframework.messaging.handler.invocation.reactive.HandlerMethodArgumentResolverComposite"
    },
    {
      "type": "org.springframework.messaging.handler.invocation.reactive.ReturnValueHandlerConfigurer"
    },
    {
      "type": "org.springframework.messaging.rsocket.MetadataExtractor"
    },
    {
      "type": "org.springframework.messaging.rsocket.RSocketConnectorConfigurer"
    },
    {
      "type": "org.springframework.messaging.rsocket.RSocketRequester"
    },
    {
      "type": "org.springframework.messaging.rsocket.RSocketRequester$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.messaging.rsocket.RSocketStrategies",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.messaging.rsocket.RSocketStrategies$Builder"
    },
    {
      "type": "org.springframework.messaging.rsocket.annotation.support.MessagingRSocket"
    },
    {
      "type": "org.springframework.messaging.rsocket.annotation.support.RSocketFrameTypeMessageCondition"
    },
    {
      "type": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.messaging.rsocket.service.RSocketExchangeBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
    },
    {
      "type": "org.springframework.oxm.Marshaller"
    },
    {
      "type": "org.springframework.oxm.Unmarshaller"
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject"
    },
    {
      "type": "org.springframework.r2dbc.connection.init.DatabasePopulator"
    },
    {
      "type": "org.springframework.r2dbc.core.ConnectionAccessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.r2dbc.core.DatabaseClient",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.r2dbc.core.DatabaseClient$Builder"
    },
    {
      "type": "org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec"
    },
    {
      "type": "org.springframework.r2dbc.core.Parameter"
    },
    {
      "type": "org.springframework.r2dbc.core.PreparedOperation"
    },
    {
      "type": "org.springframework.r2dbc.core.RowsFetchSpec"
    },
    {
      "type": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BindMarkerFactoryProvider"
    },
    {
      "type": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BuiltInBindMarkersFactoryProvider"
    },
    {
      "type": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver.BuiltInBindMarkersFactoryProvider"
    },
    {
      "type": "org.springframework.retry.RetryContext"
    },
    {
      "type": "org.springframework.retry.RetryListener"
    },
    {
      "type": "org.springframework.retry.backoff.BackOffPolicy"
    },
    {
      "type": "org.springframework.retry.support.RetryTemplate"
    },
    {
      "type": "org.springframework.scheduling.SchedulingTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.annotation.SchedulingConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.CustomizableThreadFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
    },
    {
      "type": "org.springframework.scheduling.config.ScheduledTaskRegistrar"
    },
    {
      "type": "org.springframework.scheduling.quartz.SchedulerFactoryBeanRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.aot.hint.CoreSecurityRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationEventPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.authentication.AuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.authentication.ReactiveAuthenticationManager"
    },
    {
      "type": "org.springframework.security.authentication.password.ReactiveCompromisedPasswordChecker"
    },
    {
      "type": "org.springframework.security.config.Customizer"
    },
    {
      "type": "org.springframework.security.config.annotation.ObjectPostProcessor"
    },
    {
      "type": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationManagerBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity"
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "conversionServicePostProcessor",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.aot.hint.OAuth2LoginRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.aot.hint.WebMvcSecurityConfigurationRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.config.crypto.RsaKeyConversionServicePostProcessor"
    },
    {
      "type": "org.springframework.security.config.http.SessionCreationPolicy"
    },
    {
      "type": "org.springframework.security.config.web.server.SecurityWebFiltersOrder"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$AnonymousSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$AuthorizeExchangeSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$FormLoginSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$HttpBasicSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2ClientSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2ResourceServerSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$PasswordManagementSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec"
    },
    {
      "type": "org.springframework.security.config.web.server.ServerHttpSecurity$X509Spec"
    },
    {
      "type": "org.springframework.security.core.Authentication"
    },
    {
      "type": "org.springframework.security.core.AuthenticationException"
    },
    {
      "type": "org.springframework.security.core.annotation.CurrentSecurityContext"
    },
    {
      "type": "org.springframework.security.core.context.SecurityContext"
    },
    {
      "type": "org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService"
    },
    {
      "type": "org.springframework.security.core.userdetails.ReactiveUserDetailsService"
    },
    {
      "type": "org.springframework.security.crypto.encrypt.TextEncryptor"
    },
    {
      "type": "org.springframework.security.crypto.password.PasswordEncoder"
    },
    {
      "type": "org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
    },
    {
      "type": "org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistration"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
    },
    {
      "type": "org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository"
    },
    {
      "type": "org.springframework.security.oauth2.core.OAuth2Token"
    },
    {
      "type": "org.springframework.security.oauth2.core.OAuth2TokenValidator"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.JwtDecoder"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.JwtDecoderInitializationException"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.JwtException"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder"
    },
    {
      "type": "org.springframework.security.oauth2.jwt.ReactiveJwtDecoder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.oauth2.jwt.SupplierReactiveJwtDecoder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
    },
    {
      "type": "org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
    },
    {
      "type": "org.springframework.security.oauth2.server.resource.introspection.SpringReactiveOpaqueTokenIntrospector"
    },
    {
      "type": "org.springframework.security.rsa.crypto.RsaSecretEncryptor"
    },
    {
      "type": "org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
    },
    {
      "type": "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
    },
    {
      "type": "org.springframework.security.web.SecurityFilterChain"
    },
    {
      "type": "org.springframework.security.web.aot.hint.WebMvcSecurityRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter"
    },
    {
      "type": "org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter"
    },
    {
      "type": "org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
    },
    {
      "type": "org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.server.SecurityWebFilterChain",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.server.ServerAuthenticationEntryPoint"
    },
    {
      "type": "org.springframework.security.web.server.WebFilterChainProxy",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.security.web.server.WebFilterChainProxy$WebFilterChainDecorator"
    },
    {
      "type": "org.springframework.security.web.server.authorization.ServerAccessDeniedHandler"
    },
    {
      "type": "org.springframework.security.web.server.context.ServerSecurityContextRepository"
    },
    {
      "type": "org.springframework.security.web.server.firewall.ServerExchangeRejectedException"
    },
    {
      "type": "org.springframework.security.web.server.firewall.ServerExchangeRejectedHandler"
    },
    {
      "type": "org.springframework.security.web.server.firewall.ServerWebExchangeFirewall"
    },
    {
      "type": "org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher"
    },
    {
      "type": "org.springframework.security.web.util.matcher.OrRequestMatcher"
    },
    {
      "type": "org.springframework.security.web.util.matcher.RequestMatcher"
    },
    {
      "type": "org.springframework.session.Session"
    },
    {
      "type": "org.springframework.stereotype.Component"
    },
    {
      "type": "org.springframework.stereotype.Controller"
    },
    {
      "type": "org.springframework.stereotype.Indexed",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.stereotype.Repository"
    },
    {
      "type": "org.springframework.stereotype.Service"
    },
    {
      "type": "org.springframework.transaction.ConfigurableTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.NoTransactionException"
    },
    {
      "type": "org.springframework.transaction.PlatformTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.ReactiveTransaction"
    },
    {
      "type": "org.springframework.transaction.ReactiveTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.TransactionDefinition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.TransactionException"
    },
    {
      "type": "org.springframework.transaction.TransactionExecutionListener"
    },
    {
      "type": "org.springframework.transaction.TransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.TransactionStatus"
    },
    {
      "type": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "transactionalEventListenerFactory",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.annotation.EnableTransactionManagement"
    },
    {
      "type": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
      "allDeclaredFields": true,
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        },
        {
          "name": "transactionAdvisor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource",
            "org.springframework.transaction.interceptor.TransactionInterceptor"
          ]
        },
        {
          "name": "transactionAttributeSource",
          "parameterTypes": []
        },
        {
          "name": "transactionInterceptor",
          "parameterTypes": [
            "org.springframework.transaction.interceptor.TransactionAttributeSource"
          ]
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory"
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.TransactionRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.transaction.annotation.Transactional"
    },
    {
      "type": "org.springframework.transaction.aspectj.AbstractTransactionAspect"
    },
    {
      "type": "org.springframework.transaction.event.TransactionalEventListenerFactory",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolder"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttribute"
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionAttributeSource",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.interceptor.TransactionInterceptor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder"
    },
    {
      "type": "org.springframework.transaction.reactive.GenericReactiveTransaction"
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionCallback"
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionSynchronization"
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionSynchronizationManager"
    },
    {
      "type": "org.springframework.transaction.reactive.TransactionalOperator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionDefinition",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.DefaultTransactionStatus"
    },
    {
      "type": "org.springframework.transaction.support.TransactionCallback"
    },
    {
      "type": "org.springframework.transaction.support.TransactionOperations",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.transaction.support.TransactionTemplate",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.ui.Model"
    },
    {
      "type": "org.springframework.util.CustomizableThreadCreator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.MimeType",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.util.MultiValueMap"
    },
    {
      "type": "org.springframework.util.PropertiesPersister"
    },
    {
      "type": "org.springframework.util.RouteMatcher"
    },
    {
      "type": "org.springframework.util.RouteMatcher$Route"
    },
    {
      "type": "org.springframework.util.StringValueResolver"
    },
    {
      "type": "org.springframework.util.concurrent.ListenableFuture"
    },
    {
      "type": "org.springframework.util.unit.DataSize"
    },
    {
      "type": "org.springframework.validation.BindingResult"
    },
    {
      "type": "org.springframework.validation.Errors"
    },
    {
      "type": "org.springframework.validation.MessageCodesResolver"
    },
    {
      "type": "org.springframework.validation.ObjectError"
    },
    {
      "type": "org.springframework.validation.SmartValidator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.Validator",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.BeanValidationBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.beanvalidation.SpringValidatorAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.validation.method.MethodValidationException"
    },
    {
      "type": "org.springframework.validation.method.MethodValidationResult"
    },
    {
      "type": "org.springframework.web.ErrorResponseException"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.annotation.ControllerMappingReflectiveProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.CrossOrigin"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandler"
    },
    {
      "type": "org.springframework.web.bind.annotation.ExceptionHandlerReflectiveProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.bind.annotation.GetMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.Mapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.ModelAttribute"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMapping"
    },
    {
      "type": "org.springframework.web.bind.annotation.RequestMethod"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseBody"
    },
    {
      "type": "org.springframework.web.bind.annotation.ResponseStatus"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestController"
    },
    {
      "type": "org.springframework.web.bind.annotation.RestControllerAdvice"
    },
    {
      "type": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.WebBindingInitializer"
    },
    {
      "type": "org.springframework.web.bind.support.WebExchangeBindException"
    },
    {
      "type": "org.springframework.web.client.RestClient"
    },
    {
      "type": "org.springframework.web.client.RestClient$Builder"
    },
    {
      "type": "org.springframework.web.client.RestTemplate"
    },
    {
      "type": "org.springframework.web.context.ConfigurableWebApplicationContext"
    },
    {
      "type": "org.springframework.web.context.support.GenericWebApplicationContext"
    },
    {
      "type": "org.springframework.web.cors.CorsConfiguration"
    },
    {
      "type": "org.springframework.web.cors.reactive.CorsConfigurationSource"
    },
    {
      "type": "org.springframework.web.cors.reactive.CorsProcessor"
    },
    {
      "type": "org.springframework.web.cors.reactive.PreFlightRequestHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.filter.CharacterEncodingFilter"
    },
    {
      "type": "org.springframework.web.method.HandlerMethod"
    },
    {
      "type": "org.springframework.web.method.annotation.HandlerMethodValidationException"
    },
    {
      "type": "org.springframework.web.reactive.BindingContext"
    },
    {
      "type": "org.springframework.web.reactive.DispatchExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.DispatcherHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.HandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.HandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.HandlerResult"
    },
    {
      "type": "org.springframework.web.reactive.HandlerResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.accept.RequestedContentTypeResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
    },
    {
      "type": "org.springframework.web.reactive.config.BlockingExecutionConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.config.CorsRegistry"
    },
    {
      "type": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.config.EnableWebFlux"
    },
    {
      "type": "org.springframework.web.reactive.config.PathMatchConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.config.ResourceHandlerRegistration"
    },
    {
      "type": "org.springframework.web.reactive.config.ResourceHandlerRegistry"
    },
    {
      "type": "org.springframework.web.reactive.config.ViewResolverRegistry"
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurationSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.config.WebFluxConfigurer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.ClientRequest"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ClientRequestObservationConvention"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ClientResponse"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeFilterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.client.ExchangeStrategies"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient"
    },
    {
      "type": "org.springframework.web.reactive.function.client.WebClient$Builder",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.HandlerFilterFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.server.HandlerFunction"
    },
    {
      "type": "org.springframework.web.reactive.function.server.RequestPredicate"
    },
    {
      "type": "org.springframework.web.reactive.function.server.RouterFunction",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.RouterFunctions$Visitor"
    },
    {
      "type": "org.springframework.web.reactive.function.server.ServerRequest"
    },
    {
      "type": "org.springframework.web.reactive.function.server.ServerResponse"
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping"
    },
    {
      "type": "org.springframework.web.reactive.resource.NoResourceFoundException"
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceResolverChain"
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceTransformer",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceTransformerChain"
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceUrlProvider",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.resource.ResourceWebHandler"
    },
    {
      "type": "org.springframework.web.reactive.result.HandlerResultHandlerSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.SimpleHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.condition.RequestCondition"
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$MappingRegistry"
    },
    {
      "type": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.InvocableHandlerMethod"
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfo"
    },
    {
      "type": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.InitBinderBindingContext"
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseEntityExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.view.RequestDataValueProcessor",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.view.View"
    },
    {
      "type": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.reactive.result.view.ViewResolver"
    },
    {
      "type": "org.springframework.web.reactive.socket.server.WebSocketService"
    },
    {
      "type": "org.springframework.web.reactive.socket.server.support.HandshakeWebSocketServiceRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.MethodNotAllowedException"
    },
    {
      "type": "org.springframework.web.server.MissingRequestValueException"
    },
    {
      "type": "org.springframework.web.server.NotAcceptableStatusException"
    },
    {
      "type": "org.springframework.web.server.ResponseStatusException"
    },
    {
      "type": "org.springframework.web.server.ServerErrorException"
    },
    {
      "type": "org.springframework.web.server.ServerWebExchange"
    },
    {
      "type": "org.springframework.web.server.ServerWebInputException"
    },
    {
      "type": "org.springframework.web.server.UnsatisfiedRequestParameterException"
    },
    {
      "type": "org.springframework.web.server.UnsupportedMediaTypeStatusException"
    },
    {
      "type": "org.springframework.web.server.WebExceptionHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.WebFilter",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.WebFilterChain"
    },
    {
      "type": "org.springframework.web.server.WebHandler",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.adapter.ForwardedHeaderTransformer"
    },
    {
      "type": "org.springframework.web.server.adapter.WebHttpHandlerBuilder"
    },
    {
      "type": "org.springframework.web.server.i18n.LocaleContextResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.WebSessionIdResolver",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.server.session.WebSessionManager",
      "allDeclaredFields": true
    },
    {
      "type": "org.springframework.web.service.annotation.HttpExchange"
    },
    {
      "type": "org.springframework.web.service.annotation.HttpExchangeBeanRegistrationAotProcessor",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.servlet.DispatcherServlet"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.EnableWebMvc"
    },
    {
      "type": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
    },
    {
      "type": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
    },
    {
      "type": "org.springframework.web.util.UriBuilderFactory"
    },
    {
      "type": "org.springframework.web.util.UriComponentsBuilder"
    },
    {
      "type": "org.springframework.web.util.WebUtilRuntimeHints",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "org.springframework.web.util.pattern.PathPattern"
    },
    {
      "type": "org.springframework.web.util.pattern.PathPatternParser"
    },
    {
      "type": "org.springframework.ws.client.core.WebServiceTemplate"
    },
    {
      "type": "org.springframework.ws.transport.http.MessageDispatcherServlet"
    },
    {
      "type": "org.thymeleaf.spring6.SpringTemplateEngine"
    },
    {
      "type": "org.webjars.WebJarAssetLocator"
    },
    {
      "type": "org.xnio.SslClientAuthMode"
    },
    {
      "type": "org.yaml.snakeyaml.Yaml"
    },
    {
      "type": "reactor.core.CorePublisher",
      "allDeclaredFields": true
    },
    {
      "type": "reactor.core.Disposable",
      "allDeclaredFields": true
    },
    {
      "type": "reactor.core.publisher.Flux",
      "allDeclaredFields": true
    },
    {
      "type": "reactor.core.publisher.Hooks"
    },
    {
      "type": "reactor.core.publisher.Mono",
      "allDeclaredFields": true
    },
    {
      "type": "reactor.core.publisher.SignalType"
    },
    {
      "type": "reactor.core.publisher.SynchronousSink"
    },
    {
      "type": "reactor.kafka.sender.SenderRecord"
    },
    {
      "type": "reactor.kafka.sender.SenderResult"
    },
    {
      "type": "reactor.kafka.sender.TransactionManager"
    },
    {
      "type": "reactor.netty.http.Http2SettingsSpec$Builder"
    },
    {
      "type": "reactor.netty.http.HttpProtocol"
    },
    {
      "type": "reactor.netty.http.client.HttpClient"
    },
    {
      "type": "reactor.netty.http.server.HttpRequestDecoderSpec"
    },
    {
      "type": "reactor.netty.http.server.HttpServer"
    },
    {
      "type": "reactor.netty.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.netty.resources.ConnectionProvider"
    },
    {
      "type": "reactor.netty.resources.LoopResources"
    },
    {
      "type": "reactor.netty5.http.server.HttpServerResponse"
    },
    {
      "type": "reactor.pool.InstrumentedPool"
    },
    {
      "type": "reactor.pool.InstrumentedPool$PoolMetrics"
    },
    {
      "type": "reactor.pool.PooledRef"
    },
    {
      "type": "reactor.pool.PooledRefMetadata"
    },
    {
      "type": "reactor.tools.agent.ReactorDebugAgent"
    },
    {
      "type": "reactor.util.annotation.Nullable"
    },
    {
      "type": "reactor.util.context.Context"
    },
    {
      "type": "reactor.util.function.Tuple2"
    },
    {
      "type": "redis.clients.jedis.Jedis"
    },
    {
      "type": "scala.Option"
    },
    {
      "type": "sun.security.provider.ConfigFile"
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "zipkin2.reporter.Encoding"
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.GenericArrayType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.ParameterizedType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.TypeVariable",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "java.lang.reflect.WildcardType",
          "org.springframework.core.SerializableTypeWrapper$SerializableTypeProxy",
          "java.io.Serializable"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.boot.context.properties.ConfigurationProperties"
        ]
      }
    },
    {
      "type": {
        "proxy": [
          "org.springframework.data.relational.core.mapping.Table"
        ]
      }
    }
  ],
  "resources": [
    {
      "glob": ""
    },
    {
      "glob": "META-INF/build-info.properties"
    },
    {
      "glob": "META-INF/resources/"
    },
    {
      "glob": "META-INF/services/ch.qos.logback.classic.spi.Configurator"
    },
    {
      "glob": "META-INF/services/io.r2dbc.spi.ConnectionFactoryProvider"
    },
    {
      "glob": "META-INF/services/jakarta.el.ExpressionFactory"
    },
    {
      "glob": "META-INF/services/jakarta.validation.ConstraintValidator"
    },
    {
      "glob": "META-INF/services/jakarta.validation.spi.ValidationProvider"
    },
    {
      "glob": "META-INF/services/jakarta.validation.valueextraction.ValueExtractor"
    },
    {
      "glob": "META-INF/services/java.lang.System$LoggerFinder"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/javax.xml.transform.TransformerFactory"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "META-INF/spring-autoconfigure-metadata.properties"
    },
    {
      "glob": "META-INF/spring.components"
    },
    {
      "glob": "META-INF/spring.factories"
    },
    {
      "glob": "META-INF/spring.integration.properties"
    },
    {
      "glob": "META-INF/spring/aot.factories"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration.imports"
    },
    {
      "glob": "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
    },
    {
      "glob": "META-INF/validation.xml"
    },
    {
      "glob": "application-default.properties"
    },
    {
      "glob": "application-default.xml"
    },
    {
      "glob": "application-default.yaml"
    },
    {
      "glob": "application-default.yml"
    },
    {
      "glob": "application.properties"
    },
    {
      "glob": "application.xml"
    },
    {
      "glob": "application.yaml"
    },
    {
      "glob": "application.yml"
    },
    {
      "glob": "banner.txt"
    },
    {
      "glob": "com/fasterxml/jackson/core/ObjectCodec.class"
    },
    {
      "glob": "com/fasterxml/jackson/core/TreeCodec.class"
    },
    {
      "glob": "com/fasterxml/jackson/core/type/TypeReference.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/Module.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/ObjectMapper.class"
    },
    {
      "glob": "com/fasterxml/jackson/databind/module/SimpleModule.class"
    },
    {
      "glob": "com/fasterxml/jackson/module/paramnames/ParameterNamesModule.class"
    },
    {
      "glob": "com/google/gson/Gson.class"
    },
    {
      "glob": "com/google/gson/GsonBuilder.class"
    },
    {
      "glob": "com/mongodb/MongoClientSettings.class"
    },
    {
      "glob": "com/mongodb/event/ConnectionPoolListener.class"
    },
    {
      "glob": "com/mongodb/reactivestreams/client/MongoClient.class"
    },
    {
      "glob": "com/netflix/appinfo/ApplicationInfoManager.class"
    },
    {
      "glob": "com/netflix/discovery/AbstractDiscoveryClientOptionalArgs.class"
    },
    {
      "glob": "com/netflix/discovery/EurekaClient.class"
    },
    {
      "glob": "com/netflix/discovery/EurekaClientConfig.class"
    },
    {
      "glob": "com/netflix/discovery/shared/LookupService.class"
    },
    {
      "glob": "config/"
    },
    {
      "glob": "config/application-default.properties"
    },
    {
      "glob": "config/application-default.xml"
    },
    {
      "glob": "config/application-default.yaml"
    },
    {
      "glob": "config/application-default.yml"
    },
    {
      "glob": "config/application.properties"
    },
    {
      "glob": "config/application.xml"
    },
    {
      "glob": "config/application.yaml"
    },
    {
      "glob": "config/application.yml"
    },
    {
      "glob": "dev/ime/"
    },
    {
      "glob": "dev/ime/MsAreaApplication$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/MsAreaApplication.class"
    },
    {
      "glob": "dev/ime/api/endpoint/CommandEndpointHandler.class"
    },
    {
      "glob": "dev/ime/api/endpoint/CommandEndpointRouter$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/api/endpoint/CommandEndpointRouter.class"
    },
    {
      "glob": "dev/ime/api/endpoint/QueryEndpointHandler.class"
    },
    {
      "glob": "dev/ime/api/endpoint/QueryEndpointRouter$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/api/endpoint/QueryEndpointRouter.class"
    },
    {
      "glob": "dev/ime/api/endpoint/RSocketAreaController.class"
    },
    {
      "glob": "dev/ime/api/error/ApiExceptionHandler.class"
    },
    {
      "glob": "dev/ime/api/error/ErrorHandler.class"
    },
    {
      "glob": "dev/ime/api/validation/DtoValidator.class"
    },
    {
      "glob": "dev/ime/application/dispatcher/CommandDispatcher.class"
    },
    {
      "glob": "dev/ime/application/dispatcher/QueryDispatcher.class"
    },
    {
      "glob": "dev/ime/application/exception/BasicException.class"
    },
    {
      "glob": "dev/ime/application/handlers/CreateAreaCommandHandler.class"
    },
    {
      "glob": "dev/ime/application/handlers/DeleteAreaCommandHandler.class"
    },
    {
      "glob": "dev/ime/application/handlers/GetAllAreaQueryHandler.class"
    },
    {
      "glob": "dev/ime/application/handlers/GetByIdAreaQueryHandler.class"
    },
    {
      "glob": "dev/ime/application/handlers/UpdateAreaCommandHandler.class"
    },
    {
      "glob": "dev/ime/application/service/CommandService.class"
    },
    {
      "glob": "dev/ime/application/service/QueryService.class"
    },
    {
      "glob": "dev/ime/application/service/RSocketService.class"
    },
    {
      "glob": "dev/ime/application/utils/ReactiveLoggerUtils.class"
    },
    {
      "glob": "dev/ime/application/utils/ReflectionUtils.class"
    },
    {
      "glob": "dev/ime/application/utils/ResilienceConfigUtils.class"
    },
    {
      "glob": "dev/ime/application/utils/SortingValidationUtils.class"
    },
    {
      "glob": "dev/ime/config/AreaMapper.class"
    },
    {
      "glob": "dev/ime/config/KafkaConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/KafkaConfig.class"
    },
    {
      "glob": "dev/ime/config/LoggerConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/LoggerConfig.class"
    },
    {
      "glob": "dev/ime/config/OpenApiConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/OpenApiConfig.class"
    },
    {
      "glob": "dev/ime/config/R2dbcConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/R2dbcConfig.class"
    },
    {
      "glob": "dev/ime/config/R2dbcConfigProperties$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/R2dbcConfigProperties.class"
    },
    {
      "glob": "dev/ime/config/RSocketConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/RSocketConfig.class"
    },
    {
      "glob": "dev/ime/config/RedisConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/RedisConfig.class"
    },
    {
      "glob": "dev/ime/config/ResilienceConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/ResilienceConfig.class"
    },
    {
      "glob": "dev/ime/config/SecurityConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/SecurityConfig.class"
    },
    {
      "glob": "dev/ime/config/UriConfigProperties$$SpringCGLIB$$0.class"
    },
    {
      "glob": "dev/ime/config/UriConfigProperties.class"
    },
    {
      "glob": "dev/ime/domain/command/Command.class"
    },
    {
      "glob": "dev/ime/domain/command/CommandHandler.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/CommandEndpointPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/CommandServicePort.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/QueryEndpointPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/QueryServicePort.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/RSocketControllerPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/RSocketServicePort.class"
    },
    {
      "glob": "dev/ime/domain/ports/inbound/SubscriberPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/BaseProjectorPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/CreatureEntityCheckerPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/EntityCheckerPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/EventWriteRepositoryPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/ExtendedProjectorPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/PublisherPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/RSocketRepositoryPort.class"
    },
    {
      "glob": "dev/ime/domain/ports/outbound/ReadRepositoryPort.class"
    },
    {
      "glob": "dev/ime/domain/query/Query.class"
    },
    {
      "glob": "dev/ime/domain/query/QueryHandler.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/AreaProjectorAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/AreaReadRepositoryAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/CreatureRedisProjectorAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/EventMongoWriteRepositoryAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/KafkaAreaSubscriberAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/KafkaCreatureSubscriberAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/KafkaPublisherAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/RSocketCreatureCheckerAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/RSocketRepositoryAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/adapter/RedisCreatureCheckerAdapter.class"
    },
    {
      "glob": "dev/ime/infrastructure/repository/AreaReadRepository.class"
    },
    {
      "glob": "dev/ime/infrastructure/repository/EventMongoWriteRepository.class"
    },
    {
      "glob": "git.properties"
    },
    {
      "glob": "io/github/resilience4j/bulkhead/Bulkhead.class"
    },
    {
      "glob": "io/github/resilience4j/bulkhead/BulkheadRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/bulkhead/ThreadPoolBulkheadRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/bulkhead/annotation/Bulkhead.class"
    },
    {
      "glob": "io/github/resilience4j/circuitbreaker/CircuitBreaker.class"
    },
    {
      "glob": "io/github/resilience4j/circuitbreaker/CircuitBreakerRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/circuitbreaker/annotation/CircuitBreaker.class"
    },
    {
      "glob": "io/github/resilience4j/common/CommonProperties.class"
    },
    {
      "glob": "io/github/resilience4j/common/CompositeCustomizer.class"
    },
    {
      "glob": "io/github/resilience4j/common/bulkhead/configuration/CommonBulkheadConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/common/bulkhead/configuration/CommonThreadPoolBulkheadConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/common/circuitbreaker/configuration/CommonCircuitBreakerConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/common/ratelimiter/configuration/CommonRateLimiterConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/common/retry/configuration/CommonRetryConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/common/timelimiter/configuration/CommonTimeLimiterConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/consumer/EventConsumerRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/core/Registry.class"
    },
    {
      "glob": "io/github/resilience4j/core/metrics/MetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/core/registry/RegistryEventConsumer.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractBulkheadMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractCircuitBreakerMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractRateLimiterMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractRetryMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractThreadPoolBulkheadMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/AbstractTimeLimiterMetrics.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/TaggedBulkheadMetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/TaggedCircuitBreakerMetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/TaggedRateLimiterMetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/TaggedRetryMetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/TaggedThreadPoolBulkheadMetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/micrometer/tagged/TaggedTimeLimiterMetricsPublisher.class"
    },
    {
      "glob": "io/github/resilience4j/ratelimiter/RateLimiterRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/ratelimiter/annotation/RateLimiter.class"
    },
    {
      "glob": "io/github/resilience4j/retry/RetryRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/retry/annotation/Retry.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/bulkhead/configure/BulkheadAspect.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/bulkhead/configure/BulkheadConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/bulkhead/configure/ReactorBulkheadAspectExt.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerAspect.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/circuitbreaker/configure/CircuitBreakerConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/circuitbreaker/configure/ReactorCircuitBreakerAspectExt.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/fallback/CompletionStageFallbackDecorator.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/fallback/FallbackDecorators.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/fallback/FallbackExecutor.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/fallback/ReactorFallbackDecorator.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterAspect.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/ratelimiter/configure/RateLimiterConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/ratelimiter/configure/ReactorRateLimiterAspectExt.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/retry/configure/ReactorRetryAspectExt.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/retry/configure/RetryAspect.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/retry/configure/RetryConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/spelresolver/SpelResolver.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/timelimiter/configure/ReactorTimeLimiterAspectExt.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterAspect.class"
    },
    {
      "glob": "io/github/resilience4j/spring6/timelimiter/configure/TimeLimiterConfigurationProperties.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/AbstractBulkheadConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadMetricsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadMetricsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/BulkheadProperties.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/ThreadPoolBulkheadMetricsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/bulkhead/autoconfigure/ThreadPoolBulkheadProperties.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/AbstractCircuitBreakerConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerMetricsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerProperties.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakerStreamEventsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/circuitbreaker/autoconfigure/CircuitBreakersHealthIndicatorAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/fallback/autoconfigure/FallbackConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/AbstractRateLimiterConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterMetricsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimiterProperties.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/ratelimiter/autoconfigure/RateLimitersHealthIndicatorAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/AbstractRetryConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryAutoConfiguration$RetryAutoEndpointConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryMetricsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryMetricsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/retry/autoconfigure/RetryProperties.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/scheduled/threadpool/autoconfigure/ContextAwareScheduledThreadPoolAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/spelresolver/autoconfigure/SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/spelresolver/autoconfigure/SpelResolverConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/AbstractTimeLimiterConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterConfigurationOnMissingBean.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$0.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterMetricsAutoConfiguration.class"
    },
    {
      "glob": "io/github/resilience4j/springboot3/timelimiter/autoconfigure/TimeLimiterProperties.class"
    },
    {
      "glob": "io/github/resilience4j/timelimiter/TimeLimiterRegistry.class"
    },
    {
      "glob": "io/github/resilience4j/timelimiter/annotation/TimeLimiter.class"
    },
    {
      "glob": "io/lettuce/core/metrics/MicrometerOptions.class"
    },
    {
      "glob": "io/lettuce/core/resource/ClientResources.class"
    },
    {
      "glob": "io/lettuce/core/resource/DefaultClientResources.class"
    },
    {
      "glob": "io/micrometer/core/instrument/Clock.class"
    },
    {
      "glob": "io/micrometer/core/instrument/MeterRegistry.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/ClassLoaderMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmCompilationMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmGcMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmHeapPressureMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmInfoMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmMemoryMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/jvm/JvmThreadMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/logging/LogbackMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/mongodb/MongoCommandTagsProvider.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/mongodb/MongoConnectionPoolTagsProvider.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/mongodb/MongoMetricsCommandListener.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/mongodb/MongoMetricsConnectionPoolListener.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/system/FileDescriptorMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/system/ProcessorMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/binder/system/UptimeMetrics.class"
    },
    {
      "glob": "io/micrometer/core/instrument/config/MeterFilter.class"
    },
    {
      "glob": "io/micrometer/core/instrument/config/MeterRegistryConfig.class"
    },
    {
      "glob": "io/micrometer/core/instrument/observation/DefaultMeterObservationHandler.class"
    },
    {
      "glob": "io/micrometer/core/instrument/observation/MeterObservationHandler.class"
    },
    {
      "glob": "io/micrometer/core/instrument/simple/SimpleConfig.class"
    },
    {
      "glob": "io/micrometer/core/instrument/simple/SimpleMeterRegistry.class"
    },
    {
      "glob": "io/micrometer/observation/ObservationConvention.class"
    },
    {
      "glob": "io/micrometer/observation/ObservationHandler.class"
    },
    {
      "glob": "io/micrometer/observation/ObservationRegistry.class"
    },
    {
      "glob": "io/micrometer/observation/annotation/Observed.class"
    },
    {
      "glob": "io/micrometer/observation/aop/ObservedAspect.class"
    },
    {
      "glob": "io/r2dbc/pool/ConnectionPool.class"
    },
    {
      "glob": "io/r2dbc/spi/Wrapped.class"
    },
    {
      "glob": "io/swagger/v3/core/converter/ModelConverter.class"
    },
    {
      "glob": "io/swagger/v3/core/filter/SpecFilter.class"
    },
    {
      "glob": "io/swagger/v3/core/util/ObjectMapperFactory.class"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/Hidden.class"
    },
    {
      "glob": "io/swagger/v3/oas/annotations/tags/Tag.class"
    },
    {
      "glob": "io/swagger/v3/oas/models/OpenAPI.class"
    },
    {
      "glob": "java/lang/AutoCloseable.class"
    },
    {
      "glob": "java/lang/Iterable.class"
    },
    {
      "glob": "java/lang/Object.class"
    },
    {
      "glob": "java/util/function/BiPredicate.class"
    },
    {
      "glob": "java/util/logging/Logger.class"
    },
    {
      "glob": "logback-spring.groovy"
    },
    {
      "glob": "logback-spring.xml"
    },
    {
      "glob": "logback-test-spring.groovy"
    },
    {
      "glob": "logback-test-spring.xml"
    },
    {
      "glob": "logback-test.groovy"
    },
    {
      "glob": "logback-test.scmo"
    },
    {
      "glob": "logback-test.xml"
    },
    {
      "glob": "logback.groovy"
    },
    {
      "glob": "logback.scmo"
    },
    {
      "glob": "logback.xml"
    },
    {
      "glob": "messages.properties"
    },
    {
      "glob": "org/springdoc/api/AbstractOpenApiResource.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnCacheDisabled.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/CacheOrGroupedOpenApiCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupConfigProperty.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition$OnListGroupedOpenApiBean.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiGroupsCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnActuatorDifferentPort.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition$OnMultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/conditions/MultipleOpenApiSupportCondition.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$OpenApiResourceAdvice.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$QuerydslProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocRepositoryRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$SpringDocWebFluxSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration$WebConversionServiceConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocDataRestConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocFunctionCatalogConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocGroovyConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocHateoasConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJacksonKotlinModuleConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocJavadocConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocKotlinxConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocPageableConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration$SpringDocSecurityOAuth2ClientConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration$SpringDocSecurityOAuth2Configuration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration$SpringSecurityLoginEndpointConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSecurityConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSortConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocSpecPropertiesConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/configuration/SpringDocUIConfiguration.class"
    },
    {
      "glob": "org/springdoc/core/converters/AdditionalModelsConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/FileSupportConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/ModelConverterRegistrar.class"
    },
    {
      "glob": "org/springdoc/core/converters/PageOpenAPIConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/PageableOpenAPIConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/PolymorphicModelConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/ResponseSupportConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/SchemaPropertyDeprecatingConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/SortOpenAPIConverter.class"
    },
    {
      "glob": "org/springdoc/core/converters/WebFluxSupportConverter.class"
    },
    {
      "glob": "org/springdoc/core/customizers/DelegatingMethodParameterCustomizer.class"
    },
    {
      "glob": "org/springdoc/core/customizers/QuerydslPredicateOperationCustomizer.class"
    },
    {
      "glob": "org/springdoc/core/customizers/SpringDocCustomizers.class"
    },
    {
      "glob": "org/springdoc/core/discoverer/SpringDocParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springdoc/core/parsers/ReturnTypeParser.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$Direction.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties$SwaggerUrl.class"
    },
    {
      "glob": "org/springdoc/core/properties/AbstractSwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ApiDocs.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Cache.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$GroupConfig.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Groups.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$ModelConverters.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$SortConverter.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties$Webjars.class"
    },
    {
      "glob": "org/springdoc/core/properties/SpringDocConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigParameters.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$Csrf.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties$SyntaxHighlight.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiConfigProperties.class"
    },
    {
      "glob": "org/springdoc/core/properties/SwaggerUiOAuthProperties.class"
    },
    {
      "glob": "org/springdoc/core/providers/ObjectMapperProvider.class"
    },
    {
      "glob": "org/springdoc/core/providers/SpringDataWebPropertiesProvider.class"
    },
    {
      "glob": "org/springdoc/core/providers/SpringDocProviders.class"
    },
    {
      "glob": "org/springdoc/core/providers/SpringWebProvider.class"
    },
    {
      "glob": "org/springdoc/core/providers/WebConversionServiceProvider.class"
    },
    {
      "glob": "org/springdoc/core/service/AbstractRequestService.class"
    },
    {
      "glob": "org/springdoc/core/service/GenericParameterService.class"
    },
    {
      "glob": "org/springdoc/core/service/GenericResponseService.class"
    },
    {
      "glob": "org/springdoc/core/service/OpenAPIService.class"
    },
    {
      "glob": "org/springdoc/core/service/OperationService.class"
    },
    {
      "glob": "org/springdoc/core/service/RequestBodyService.class"
    },
    {
      "glob": "org/springdoc/core/service/SecurityService.class"
    },
    {
      "glob": "org/springdoc/core/utils/PropertyResolverUtils.class"
    },
    {
      "glob": "org/springdoc/ui/AbstractSwaggerResourceResolver.class"
    },
    {
      "glob": "org/springdoc/ui/AbstractSwaggerWelcome.class"
    },
    {
      "glob": "org/springdoc/webflux/api/OpenApiResource.class"
    },
    {
      "glob": "org/springdoc/webflux/api/OpenApiWebfluxResource.class"
    },
    {
      "glob": "org/springdoc/webflux/core/configuration/MultipleOpenApiSupportConfiguration$SpringDocWebMvcActuatorDifferentConfiguration.class"
    },
    {
      "glob": "org/springdoc/webflux/core/configuration/MultipleOpenApiSupportConfiguration.class"
    },
    {
      "glob": "org/springdoc/webflux/core/configuration/SpringDocWebFluxConfiguration$SpringDocWebFluxActuatorConfiguration.class"
    },
    {
      "glob": "org/springdoc/webflux/core/configuration/SpringDocWebFluxConfiguration.class"
    },
    {
      "glob": "org/springdoc/webflux/core/service/RequestService.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerConfig$SwaggerActuatorWelcomeConfiguration.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerConfig.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerConfigResource.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerIndexTransformer.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerResourceResolver.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerWebFluxConfigurer.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerWelcomeCommon.class"
    },
    {
      "glob": "org/springdoc/webflux/ui/SwaggerWelcomeWebFlux.class"
    },
    {
      "glob": "org/springframework/aop/Advisor.class"
    },
    {
      "glob": "org/springframework/aop/aspectj/annotation/AnnotationAwareAspectJAutoProxyCreator.class"
    },
    {
      "glob": "org/springframework/aop/aspectj/autoproxy/AspectJAwareAdvisorAutoProxyCreator.class"
    },
    {
      "glob": "org/springframework/aop/framework/AbstractAdvisingBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/aop/framework/ProxyConfig.class"
    },
    {
      "glob": "org/springframework/aop/framework/ProxyProcessorSupport.class"
    },
    {
      "glob": "org/springframework/aop/framework/autoproxy/AbstractAdvisorAutoProxyCreator.class"
    },
    {
      "glob": "org/springframework/aop/framework/autoproxy/AbstractAutoProxyCreator.class"
    },
    {
      "glob": "org/springframework/aop/framework/autoproxy/AbstractBeanFactoryAwareAdvisingPostProcessor.class"
    },
    {
      "glob": "org/springframework/aop/support/AbstractBeanFactoryPointcutAdvisor.class"
    },
    {
      "glob": "org/springframework/aop/support/AbstractPointcutAdvisor.class"
    },
    {
      "glob": "org/springframework/beans/factory/Aware.class"
    },
    {
      "glob": "org/springframework/beans/factory/BeanFactoryAware.class"
    },
    {
      "glob": "org/springframework/beans/factory/FactoryBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/InitializingBean.class"
    },
    {
      "glob": "org/springframework/beans/factory/SmartInitializingSingleton.class"
    },
    {
      "glob": "org/springframework/beans/factory/annotation/AutowiredAnnotationBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/annotation/InitDestroyAnnotationBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/annotation/Qualifier.class"
    },
    {
      "glob": "org/springframework/beans/factory/aot/BeanRegistrationAotProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/BeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/InstantiationAwareBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/PlaceholderConfigurerSupport.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/PropertyResourceConfigurer.class"
    },
    {
      "glob": "org/springframework/beans/factory/config/SmartInstantiationAwareBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/LazyInitializationExcludeFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/audit/AuditEventsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfiguration$ProbesCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/availability/AvailabilityProbesHealthEndpointGroupsPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/beans/BeansEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cache/CachesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/cloudfoundry/reactive/ReactiveCloudFoundryActuatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/condition/ConditionsReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/ShutdownEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/context/properties/ConfigurationPropertiesReportEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/mongo/MongoHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/mongo/MongoReactiveHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/redis/RedisHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/data/redis/RedisReactiveHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/EndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/condition/ConditionalOnAvailableEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/expose/IncludeExcludeEndpointFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jackson/JacksonEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/jmx/JmxEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/CorsEndpointProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/ServletEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration$WebEndpointServletConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/WebEndpointProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/jersey/JerseyWebEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/reactive/WebFluxEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/endpoint/web/servlet/WebMvcEndpointManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/env/EnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/AbstractCompositeHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/CompositeHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/CompositeReactiveHealthContributorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ConditionalOnEnabledHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$AdaptedReactiveHealthContributors.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointReactiveWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthEndpointWebExtensionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/HealthProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/health/ReactiveHealthEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoContributorProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/info/InfoEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration$RoutingDataSourceHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/jdbc/DataSourceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LogFileWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/logging/LoggersEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/mail/MailHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/HeapDumpWebEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/management/ThreadDumpEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$NoMeterRegistryCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition$SingleInjectableMeterRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/CompositeMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/JvmMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/KafkaMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration$LogbackLoggingCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/LogbackMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MeterRegistryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition$ManagementObservationsEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition$MicrometerObservationsEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAspectsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration$MeterRegistryCloser.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/MetricsProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/NoOpMeterRegistryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/PropertiesMeterFilter.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/SystemMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$Cache2kCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$CaffeineCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$HazelcastCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$JCacheCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration$RedisCacheMeterBinderProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMeterBinderProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/cache/CacheMetricsRegistrarConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/data/MetricsRepositoryMethodInvocationListenerBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/data/RepositoryMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/ConditionalOnEnabledMetricsExport.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleMetricsExportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/export/simple/SimpleProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/integration/IntegrationMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/jdbc/DataSourcePoolMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/mongo/MongoMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/r2dbc/ConnectionPoolMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/redis/LettuceMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/startup/StartupTimeMetricsListenerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/metrics/task/TaskExecutorMetricsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration$TracingAndMetricsObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MeterObservationHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$MetricsWithTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$ObservedAspectConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyMetricsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration$OnlyTracingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationHandlerGrouping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/ObservationRegistryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/PropertiesObservationFilterPredicate.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration$MeterFilterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/HttpClientObservationsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/RestTemplateObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/client/WebClientObservationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/observation/web/reactive/WebFluxObservationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/r2dbc/ConnectionFactoryHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/sbom/SbomEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/scheduling/ScheduledTasksObservabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/reactive/ReactiveManagementWebSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/ManagementWebSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/security/servlet/SecurityRequestMatchersManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/startup/StartupEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthContributorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/system/DiskSpaceHealthIndicatorProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/ManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/ManagementContextFactory.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ReactiveHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration$ServletHttpExchangesConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/exchanges/HttpExchangesEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseyChildManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/jersey/JerseySameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/mappings/MappingsEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/reactive/ReactiveManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ConditionalOnManagementPort.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/EnableManagementContext.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$DifferentManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration$SameManagementContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementContextConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/server/ManagementServerProperties.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/ServletManagementChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/autoconfigure/web/servlet/WebMvcEndpointChildContextConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/actuate/availability/AvailabilityStateHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/availability/LivenessStateHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/availability/ReadinessStateHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/annotation/EndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/invoke/ParameterValueMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/invoker/cache/CachingOperationInvokerAdvisor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/jackson/EndpointObjectMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/EndpointMediaTypes.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/PathMappedEndpoints.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/PathMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/annotation/ControllerEndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/annotation/WebEndpointDiscoverer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/reactive/AbstractWebFluxEndpointHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/reactive/AdditionalHealthEndpointPathsWebFluxHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/reactive/ControllerEndpointHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/endpoint/web/reactive/WebFluxEndpointHandlerMapping.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/AbstractHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/CompositeHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/CompositeReactiveHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/ContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpointGroups.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthEndpointSupport.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/HttpCodeStatusMapper.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/NamedContributors.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/PingHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/ReactiveHealthContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/ReactiveHealthContributorRegistry.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/ReactiveHealthEndpointWebExtension.class"
    },
    {
      "glob": "org/springframework/boot/actuate/health/StatusAggregator.class"
    },
    {
      "glob": "org/springframework/boot/actuate/info/EnvironmentInfoContributor.class"
    },
    {
      "glob": "org/springframework/boot/actuate/info/InfoEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/MetricsEndpoint.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/data/DefaultRepositoryTagsProvider.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/data/MetricsRepositoryMethodInvocationListener.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/startup/StartupTimeMetricsListener.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/system/DiskSpaceMetricsBinder.class"
    },
    {
      "glob": "org/springframework/boot/actuate/metrics/web/reactive/client/ObservationWebClientCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/actuate/system/DiskSpaceHealthIndicator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AbstractDependsOnBeanFactoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigurationPackages$BasePackages.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureAfter.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureBefore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/AutoConfigureOrder.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ImportAutoConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/admin/SpringApplicationAdminJmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration$JdkDynamicAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$AspectJAutoProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration$ClassProxyingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/aop/AopAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/availability/ApplicationAvailabilityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheConfigurationImportSelector.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerEntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration$CacheManagerValidator.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/CacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/GenericCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/NoOpCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/RedisCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/cache/SimpleCacheConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/codec/CodecProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnExpression.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingBean.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnMissingClass.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnNotWarDeployment.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnProperty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnResource.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnSingleCandidate.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/condition/ConditionalOnWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/ConfigurationPropertiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/LifecycleProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/MessageSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/context/PropertyPlaceholderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/dao/PersistenceExceptionTranslationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/AbstractRepositoryConfigurationSourceSupport.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/ConditionalOnRepositoryType.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoReactiveDataAutoConfiguration$GridFsReactiveMongoDatabaseFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoReactiveDataAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoReactiveRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/mongo/MongoReactiveRepositoriesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/r2dbc/R2dbcDataAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/r2dbc/R2dbcRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/r2dbc/R2dbcRepositoriesAutoConfigureRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/ClientResourcesBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/JedisConnectionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration$PoolBuilderFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/LettuceConnectionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/PropertiesRedisConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisConnectionConfiguration$ConnectionInfo.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisConnectionConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisReactiveAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/data/redis/RedisRepositoriesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration$StandardGsonBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/gson/GsonProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/HttpMessageConvertersAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$DefaultCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration$JacksonCodecConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/http/codec/CodecsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration$GitResourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/info/ProjectInfoProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonMixinConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$JacksonObjectMapperConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$ParameterNamesModuleConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jackson/JacksonProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$EmbeddedDatabaseConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceAvailableCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition$ExplicitType.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition$PooledDataSourceAvailable.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration$PooledDataSourceConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceCheckpointRestoreConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/DataSourceTransactionManagerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/JndiDataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/NamedParameterJdbcTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$CommonsDbcp2PoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$OracleUcpPoolDataSourceMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration$TomcatDataSourcePoolMetadataProviderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jdbc/metadata/DataSourcePoolMetadataProvidersConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/jmx/JmxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/ConcurrentKafkaListenerContainerFactoryConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/DefaultKafkaConsumerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/DefaultKafkaProducerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaAnnotationDrivenConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/KafkaStreamsAnnotationDrivenConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/PropertiesKafkaConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/kafka/StreamsBuilderFactoryBeanCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mail/MailSenderValidatorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoClientSettingsBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration$MongoClientSettingsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration$NettyDriverConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/MongoReactiveAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/PropertiesMongoConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/mongo/StandardMongoClientSettingsBuilderCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/netty/NettyProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/orm/jpa/EntityManagerFactoryDependsOnPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$GenericConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryConfigurations$PoolConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/ConnectionFactoryDependentConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/R2dbcAutoConfiguration$PropertiesR2dbcConnectionDetails.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/R2dbcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/R2dbcProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/r2dbc/R2dbcTransactionManagerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/ReactorProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyConfigurations$ReactorResourceFactoryConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/reactor/netty/ReactorNettyProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketMessagingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketRequesterAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$EmbeddedServerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$OnRSocketWebServerCondition$HasMappingPathConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$OnRSocketWebServerCondition$HasNoPortConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$OnRSocketWebServerCondition$HasWebsocketTransportConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$OnRSocketWebServerCondition$IsReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$OnRSocketWebServerCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration$WebFluxServerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketServerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration$JacksonCborStrategyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration$JacksonJsonStrategyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/rsocket/RSocketStrategiesAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/SecurityDataConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/SecurityProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/OAuth2ResourceServerProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerConfiguration$JwtConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerConfiguration$OpaqueTokenConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterPropertiesCondition$OnAuthoritiesClaimName.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterPropertiesCondition$OnAuthorityPrefix.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterPropertiesCondition$OnPrincipalClaimName.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterPropertiesCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerJwkConfiguration$WebSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/reactive/ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$WebSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/oauth2/resource/servlet/OAuth2ResourceServerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration$SpringBootWebFluxSecurityConfiguration$EnableWebFluxSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration$SpringBootWebFluxSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveSecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$MissingAlternative.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$NameConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$PasswordConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/reactive/ReactiveUserDetailsServiceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SecurityAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SecurityFilterAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/SpringBootWebSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$MissingAlternative.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$NameConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured$PasswordConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/security/servlet/UserDetailsServiceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/R2dbcInitializationConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition$ModeIsNever.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration$SqlInitializationModeCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlInitializationProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/sql/init/SqlR2dbcScriptDatabaseInitializer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/FileWatcher.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/ssl/SslPropertiesBundleRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutionProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$TaskExecutorConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$TaskSchedulerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/task/TaskSchedulingProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/ExecutionListenersTransactionManagerCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$AspectJTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration$JdkDynamicAutoProxyConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$EnableTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration$TransactionTemplateConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionManagerCustomizers.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/transaction/TransactionProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/PrimaryDefaultValidatorPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/validation/ValidationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/ServerProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/WebProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition$ReactiveWebApplication.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/NotReactiveWebApplicationCondition.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/client/RestTemplateAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$JettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$TomcatWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/EmbeddedWebServerFactoryCustomizerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/embedded/NettyWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration$AnnotationConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/HttpHandlerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveMultipartProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedJetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedTomcat.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryConfiguration$EmbeddedUndertow.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/ReactiveWebServerFactoryCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$EnableWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$MaxIdleTimeInMemoryWebSessionStore.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ProblemDetailsErrorHandlingConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$ResourceChainCustomizerConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WebFluxConfig.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration$WelcomePageConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebFluxProperties.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/WebSessionIdResolverAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/error/ErrorWebFluxAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/AutoConfiguredWebClientSsl.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$HttpClient5.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$JdkClient.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ClientHttpConnectorFactoryConfiguration$ReactorNetty.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/ReactorClientHttpConnectorFactory.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration$WebClientCodecsConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/autoconfigure/web/reactive/function/client/WebClientCodecCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/availability/ApplicationAvailability.class"
    },
    {
      "glob": "org/springframework/boot/availability/ApplicationAvailabilityBean.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/BoundConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/ConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/ConfigurationPropertiesBindingPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationProperties.class"
    },
    {
      "glob": "org/springframework/boot/context/properties/EnableConfigurationPropertiesRegistrar.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsDataSourceAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/DevToolsR2dbcAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/autoconfigure/LocalDevToolsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/boot/devtools/env/devtools-property-defaults.properties"
    },
    {
      "glob": "org/springframework/boot/jackson/JsonComponentModule.class"
    },
    {
      "glob": "org/springframework/boot/jackson/JsonMixinModule.class"
    },
    {
      "glob": "org/springframework/boot/jackson/JsonMixinModuleEntries.class"
    },
    {
      "glob": "org/springframework/boot/r2dbc/init/R2dbcScriptDatabaseInitializer.class"
    },
    {
      "glob": "org/springframework/boot/rsocket/context/RSocketServerBootstrap.class"
    },
    {
      "glob": "org/springframework/boot/rsocket/messaging/RSocketStrategiesCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/rsocket/server/RSocketServerCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/rsocket/server/RSocketServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/AbstractScriptDatabaseInitializer.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/sql/init/dependency/DatabaseInitializationDependencyConfigurer.class"
    },
    {
      "glob": "org/springframework/boot/ssl/DefaultSslBundleRegistry.class"
    },
    {
      "glob": "org/springframework/boot/task/SimpleAsyncTaskExecutorBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/SimpleAsyncTaskSchedulerBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/TaskExecutorBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/TaskSchedulerBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/ThreadPoolTaskExecutorBuilder.class"
    },
    {
      "glob": "org/springframework/boot/task/ThreadPoolTaskSchedulerBuilder.class"
    },
    {
      "glob": "org/springframework/boot/validation/beanvalidation/FilteredMethodValidationPostProcessor.class"
    },
    {
      "glob": "org/springframework/boot/validation/beanvalidation/MethodValidationExcludeFilter$$Lambda/0x00007f3827563aa0.class"
    },
    {
      "glob": "org/springframework/boot/validation/beanvalidation/MethodValidationExcludeFilter.class"
    },
    {
      "glob": "org/springframework/boot/web/codec/CodecCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/web/embedded/netty/NettyReactiveWebServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/web/reactive/error/DefaultErrorAttributes.class"
    },
    {
      "glob": "org/springframework/boot/web/reactive/error/ErrorWebExceptionHandler.class"
    },
    {
      "glob": "org/springframework/boot/web/reactive/function/client/WebClientCustomizer.class"
    },
    {
      "glob": "org/springframework/boot/web/reactive/server/AbstractReactiveWebServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/web/server/AbstractConfigurableWebServerFactory.class"
    },
    {
      "glob": "org/springframework/boot/web/server/WebServerFactoryCustomizerBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/cache/CacheManager.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/ConfigurationPropertiesRebinderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/LifecycleMvcEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/PauseResumeEndpointsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RefreshEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/RestartEndpointWithoutIntegrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/autoconfigure/WritableEnvironmentEndpointAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$ActuatorConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/CommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ConditionalOnBlockingDiscoveryEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/ConditionalOnDiscoveryEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/ConditionalOnReactiveDiscoveryEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ReactiveCommonsClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/ServiceInstance.class"
    },
    {
      "glob": "org/springframework/cloud/client/actuator/HasFeatures.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/DiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/ReactiveDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/CompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/composite/reactive/ReactiveCompositeDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/DiscoveryClientHealthIndicatorProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/DiscoveryCompositeHealthContributor.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryClientHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/health/reactive/ReactiveDiscoveryCompositeHealthContributor.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/SimpleDiscoveryProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/discovery/simple/reactive/SimpleReactiveDiscoveryProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/hypermedia/CloudHypermediaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition$RestClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition$RestTemplatePresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/BlockingRestClassesPresentCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/DeferringLoadBalancerInterceptor.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancedRetryFactory.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$LoadBalancerInterceptorConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition$RetryDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition$RetryTemplateMissing.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerClient.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerClientsProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerDefaultMappingsProviderAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerEagerLoadProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerRequestFactory.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/LoadBalancerRestClientBuilderBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/RestTemplateCustomizer.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/RetryLoadBalancerInterceptor.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/ServiceInstanceChooser.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/DeferringLoadBalancerExchangeFilterFunction.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition$LoadBalancerClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition$ReactiveLoadBalancerFactoryPresent.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerBeanPostProcessorAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/LoadBalancerWebClientBuilderBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/loadbalancer/reactive/ReactorLoadBalancerExchangeFilterFunction.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/AutoServiceRegistrationProperties.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/client/serviceregistry/ServiceRegistryAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/CommonsConfigAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor$MappingsProvider.class"
    },
    {
      "glob": "org/springframework/cloud/commons/config/DefaultsBindHandlerAdvisor.class"
    },
    {
      "glob": "org/springframework/cloud/commons/security/ResourceServerTokenRelayAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/InetUtils.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/InetUtilsProperties.class"
    },
    {
      "glob": "org/springframework/cloud/commons/util/UtilAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompatibilityVerifierAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompatibilityVerifierProperties.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/CompositeCompatibilityVerifier.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/SleuthPresentVerifier.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/SpringBootVersionVerifier.class"
    },
    {
      "glob": "org/springframework/cloud/configuration/TlsProperties.class"
    },
    {
      "glob": "org/springframework/cloud/context/environment/EnvironmentManager.class"
    },
    {
      "glob": "org/springframework/cloud/context/named/NamedContextFactory.class"
    },
    {
      "glob": "org/springframework/cloud/context/properties/ConfigurationPropertiesBeans.class"
    },
    {
      "glob": "org/springframework/cloud/context/properties/ConfigurationPropertiesRebinder.class"
    },
    {
      "glob": "org/springframework/cloud/health/RefreshScopeHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/annotation/LoadBalancerClientConfigurationRegistrar.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/annotation/LoadBalancerClientSpecification.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/annotation/LoadBalancerClients.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/aot/LoadBalancerChildContextInitializer.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/blocking/XForwardedHeadersTransformer.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/cache/LoadBalancerCacheManager.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/cache/LoadBalancerCacheProperties.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/BlockingLoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$CaffeineLoadBalancerCacheManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition$CaffeineCacheManagerClassMissing.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition$CaffeineClassMissing.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition$LoadBalancerCacheEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition$LoadBalancerEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerCacheAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerStatsAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/config/LoadBalancerZoneConfig.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/core/LoadBalancerServiceInstanceCookieTransformer.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/security/OAuth2LoadBalancerClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/support/LoadBalancerClientFactory.class"
    },
    {
      "glob": "org/springframework/cloud/loadbalancer/support/LoadBalancerEagerContextInitializer.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$ConditionalOnMissingRefreshScope.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$ConditionalOnRefreshScope.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition$MissingClass.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition$MissingScope.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition$OnPropertyDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaClientConfigBean.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaDiscoveryClientConfiguration$EurekaHealthCheckHandlerConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaDiscoveryClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaHealthIndicator.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/EurekaInstanceConfigBean.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/RestTemplateTimeoutProperties.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$DiscoveryClientOptionalArgsTlsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$JerseyClientNotPresentOrNotEnabledCondition$OnJerseyClientDisabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$JerseyClientNotPresentOrNotEnabledCondition$OnJerseyClientMissing.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$JerseyClientNotPresentOrNotEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$JerseyClientPresentAndEnabledCondition$OnJerseyClientEnabled.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$JerseyClientPresentAndEnabledCondition$OnJerseyClientPresent.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$JerseyClientPresentAndEnabledCondition.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$WebClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration$WebClientNotFoundConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/config/DiscoveryClientOptionalArgsConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/http/EurekaClientHttpRequestFactorySupplier.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/http/RestTemplateDiscoveryClientOptionalArgs.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/http/RestTemplateTransportClientFactories.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/loadbalancer/EurekaLoadBalancerProperties.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/loadbalancer/LoadBalancerEurekaAutoConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/metadata/ManagementMetadataProvider.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/reactive/EurekaReactiveDiscoveryClient.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/reactive/EurekaReactiveDiscoveryClientConfiguration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/serviceregistry/EurekaAutoServiceRegistration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/serviceregistry/EurekaRegistration.class"
    },
    {
      "glob": "org/springframework/cloud/netflix/eureka/serviceregistry/EurekaServiceRegistry.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextAware.class"
    },
    {
      "glob": "org/springframework/context/ApplicationContextInitializer.class"
    },
    {
      "glob": "org/springframework/context/ApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/EnvironmentAware.class"
    },
    {
      "glob": "org/springframework/context/MessageSourceAware.class"
    },
    {
      "glob": "org/springframework/context/ResourceLoaderAware.class"
    },
    {
      "glob": "org/springframework/context/SmartLifecycle.class"
    },
    {
      "glob": "org/springframework/context/annotation/AdviceModeImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/AspectJAutoProxyRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/AutoProxyRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/CommonAnnotationBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/context/annotation/Conditional.class"
    },
    {
      "glob": "org/springframework/context/annotation/Configuration.class"
    },
    {
      "glob": "org/springframework/context/annotation/ConfigurationClassPostProcessor.class"
    },
    {
      "glob": "org/springframework/context/annotation/DeferredImportSelector.class"
    },
    {
      "glob": "org/springframework/context/annotation/EnableAspectJAutoProxy.class"
    },
    {
      "glob": "org/springframework/context/annotation/Import.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportAware.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportBeanDefinitionRegistrar.class"
    },
    {
      "glob": "org/springframework/context/annotation/ImportRuntimeHints.class"
    },
    {
      "glob": "org/springframework/context/annotation/Lazy.class"
    },
    {
      "glob": "org/springframework/context/annotation/Role.class"
    },
    {
      "glob": "org/springframework/context/event/DefaultEventListenerFactory.class"
    },
    {
      "glob": "org/springframework/context/event/EventListenerMethodProcessor.class"
    },
    {
      "glob": "org/springframework/context/event/SmartApplicationListener.class"
    },
    {
      "glob": "org/springframework/context/support/ApplicationObjectSupport.class"
    },
    {
      "glob": "org/springframework/context/support/DefaultLifecycleProcessor.class"
    },
    {
      "glob": "org/springframework/context/support/PropertySourcesPlaceholderConfigurer.class"
    },
    {
      "glob": "org/springframework/core/DefaultParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springframework/core/Ordered.class"
    },
    {
      "glob": "org/springframework/core/ParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springframework/core/PrioritizedParameterNameDiscoverer.class"
    },
    {
      "glob": "org/springframework/core/ReactiveAdapterRegistry.class"
    },
    {
      "glob": "org/springframework/core/annotation/Order.class"
    },
    {
      "glob": "org/springframework/core/convert/ConversionService.class"
    },
    {
      "glob": "org/springframework/core/convert/support/GenericConversionService.class"
    },
    {
      "glob": "org/springframework/core/io/buffer/DefaultDataBufferFactory.class"
    },
    {
      "glob": "org/springframework/core/io/support/PropertiesLoaderSupport.class"
    },
    {
      "glob": "org/springframework/core/task/AsyncTaskExecutor.class"
    },
    {
      "glob": "org/springframework/core/type/classreading/CachingMetadataReaderFactory.class"
    },
    {
      "glob": "org/springframework/core/type/classreading/SimpleMetadataReaderFactory.class"
    },
    {
      "glob": "org/springframework/dao/annotation/PersistenceExceptionTranslationPostProcessor.class"
    },
    {
      "glob": "org/springframework/data/convert/CustomConversions.class"
    },
    {
      "glob": "org/springframework/data/domain/ManagedTypes.class"
    },
    {
      "glob": "org/springframework/data/mapping/context/AbstractMappingContext.class"
    },
    {
      "glob": "org/springframework/data/mapping/context/MappingContext.class"
    },
    {
      "glob": "org/springframework/data/mongodb/CodecRegistryProvider.class"
    },
    {
      "glob": "org/springframework/data/mongodb/MongoManagedTypes.class"
    },
    {
      "glob": "org/springframework/data/mongodb/ReactiveMongoDatabaseFactory.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/ReactiveMongoOperations.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/ReactiveMongoTemplate.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/SimpleReactiveMongoDatabaseFactory.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/convert/AbstractMongoConverter.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/convert/MappingMongoConverter.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/convert/MongoConverter.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/convert/MongoCustomConversions.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/convert/MongoWriter.class"
    },
    {
      "glob": "org/springframework/data/mongodb/core/mapping/MongoMappingContext.class"
    },
    {
      "glob": "org/springframework/data/mongodb/gridfs/GridFsOperationsSupport.class"
    },
    {
      "glob": "org/springframework/data/mongodb/gridfs/ReactiveGridFsOperations.class"
    },
    {
      "glob": "org/springframework/data/mongodb/gridfs/ReactiveGridFsTemplate.class"
    },
    {
      "glob": "org/springframework/data/mongodb/repository/ReactiveMongoRepository.class"
    },
    {
      "glob": "org/springframework/data/mongodb/repository/aot/AotMongoRepositoryPostProcessor.class"
    },
    {
      "glob": "org/springframework/data/mongodb/repository/support/ReactiveMongoRepositoryFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/r2dbc/convert/MappingR2dbcConverter.class"
    },
    {
      "glob": "org/springframework/data/r2dbc/convert/R2dbcCustomConversions.class"
    },
    {
      "glob": "org/springframework/data/r2dbc/core/R2dbcEntityOperations.class"
    },
    {
      "glob": "org/springframework/data/r2dbc/core/R2dbcEntityTemplate.class"
    },
    {
      "glob": "org/springframework/data/r2dbc/mapping/R2dbcMappingContext.class"
    },
    {
      "glob": "org/springframework/data/r2dbc/repository/support/R2dbcRepositoryFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/redis/connection/lettuce/LettuceConnectionFactory.class"
    },
    {
      "glob": "org/springframework/data/redis/core/ReactiveRedisOperations.class"
    },
    {
      "glob": "org/springframework/data/redis/core/ReactiveRedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/ReactiveStringRedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/RedisAccessor.class"
    },
    {
      "glob": "org/springframework/data/redis/core/RedisOperations.class"
    },
    {
      "glob": "org/springframework/data/redis/core/RedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/redis/core/StringRedisTemplate.class"
    },
    {
      "glob": "org/springframework/data/relational/RelationalManagedTypes.class"
    },
    {
      "glob": "org/springframework/data/relational/core/conversion/AbstractRelationalConverter.class"
    },
    {
      "glob": "org/springframework/data/relational/core/conversion/MappingRelationalConverter.class"
    },
    {
      "glob": "org/springframework/data/relational/core/conversion/RelationalConverter.class"
    },
    {
      "glob": "org/springframework/data/relational/core/mapping/RelationalMappingContext.class"
    },
    {
      "glob": "org/springframework/data/repository/config/PropertiesBasedNamedQueriesFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/repository/config/RepositoryRegistrationAotProcessor.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryFactoryBeanSupport.class"
    },
    {
      "glob": "org/springframework/data/repository/core/support/RepositoryFragmentsFactoryBean.class"
    },
    {
      "glob": "org/springframework/data/repository/reactive/ReactiveCrudRepository.class"
    },
    {
      "glob": "org/springframework/data/repository/reactive/ReactiveSortingRepository.class"
    },
    {
      "glob": "org/springframework/expression/common/TemplateAwareExpressionParser.class"
    },
    {
      "glob": "org/springframework/expression/spel/standard/SpelExpressionParser.class"
    },
    {
      "glob": "org/springframework/format/support/FormattingConversionService.class"
    },
    {
      "glob": "org/springframework/http/client/ReactorResourceFactory.class"
    },
    {
      "glob": "org/springframework/http/client/reactive/ClientHttpConnector.class"
    },
    {
      "glob": "org/springframework/http/codec/CodecConfigurer.class"
    },
    {
      "glob": "org/springframework/http/codec/ServerCodecConfigurer.class"
    },
    {
      "glob": "org/springframework/http/converter/json/Jackson2ObjectMapperBuilder.class"
    },
    {
      "glob": "org/springframework/http/server/reactive/HttpHandler.class"
    },
    {
      "glob": "org/springframework/http/server/reactive/observation/DefaultServerRequestObservationConvention.class"
    },
    {
      "glob": "org/springframework/http/server/reactive/observation/ServerRequestObservationConvention.class"
    },
    {
      "glob": "org/springframework/kafka/annotation/EnableKafka.class"
    },
    {
      "glob": "org/springframework/kafka/annotation/KafkaBootstrapConfiguration.class"
    },
    {
      "glob": "org/springframework/kafka/annotation/KafkaListenerAnnotationBeanPostProcessor.class"
    },
    {
      "glob": "org/springframework/kafka/annotation/KafkaListenerConfigurationSelector.class"
    },
    {
      "glob": "org/springframework/kafka/config/AbstractKafkaListenerContainerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/config/ConcurrentKafkaListenerContainerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/config/KafkaListenerEndpointRegistry.class"
    },
    {
      "glob": "org/springframework/kafka/core/ConsumerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/DefaultKafkaConsumerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/DefaultKafkaProducerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaAdmin$NewTopics.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaAdmin.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaOperations.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaResourceFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/KafkaTemplate.class"
    },
    {
      "glob": "org/springframework/kafka/core/ProducerFactory.class"
    },
    {
      "glob": "org/springframework/kafka/core/reactive/ReactiveKafkaProducerTemplate.class"
    },
    {
      "glob": "org/springframework/kafka/support/LoggingProducerListener.class"
    },
    {
      "glob": "org/springframework/kafka/support/ProducerListener.class"
    },
    {
      "glob": "org/springframework/kafka/transaction/KafkaTransactionManager.class"
    },
    {
      "glob": "org/springframework/messaging/handler/annotation/reactive/MessageMappingMessageHandler.class"
    },
    {
      "glob": "org/springframework/messaging/handler/invocation/reactive/AbstractMethodMessageHandler.class"
    },
    {
      "glob": "org/springframework/messaging/rsocket/RSocketRequester$Builder.class"
    },
    {
      "glob": "org/springframework/messaging/rsocket/RSocketStrategies.class"
    },
    {
      "glob": "org/springframework/messaging/rsocket/annotation/support/RSocketMessageHandler.class"
    },
    {
      "glob": "org/springframework/r2dbc/connection/R2dbcTransactionManager.class"
    },
    {
      "glob": "org/springframework/r2dbc/core/ConnectionAccessor.class"
    },
    {
      "glob": "org/springframework/r2dbc/core/DatabaseClient.class"
    },
    {
      "glob": "org/springframework/scheduling/SchedulingTaskExecutor.class"
    },
    {
      "glob": "org/springframework/scheduling/concurrent/CustomizableThreadFactory.class"
    },
    {
      "glob": "org/springframework/scheduling/concurrent/ExecutorConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.class"
    },
    {
      "glob": "org/springframework/security/authentication/DefaultAuthenticationEventPublisher.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/reactive/EnableWebFluxSecurity.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/reactive/ReactiveOAuth2ClientImportSelector.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/reactive/ServerHttpSecurityConfiguration$ContextAwareServerHttpSecurity.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/reactive/ServerHttpSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/reactive/WebFluxSecurityConfiguration$OAuth2ClasspathGuard.class"
    },
    {
      "glob": "org/springframework/security/config/annotation/web/reactive/WebFluxSecurityConfiguration.class"
    },
    {
      "glob": "org/springframework/security/config/crypto/RsaKeyConversionServicePostProcessor.class"
    },
    {
      "glob": "org/springframework/security/config/web/server/ServerHttpSecurity.class"
    },
    {
      "glob": "org/springframework/security/oauth2/jwt/SupplierReactiveJwtDecoder.class"
    },
    {
      "glob": "org/springframework/security/web/reactive/result/method/annotation/AuthenticationPrincipalArgumentResolver.class"
    },
    {
      "glob": "org/springframework/security/web/reactive/result/method/annotation/CurrentSecurityContextArgumentResolver.class"
    },
    {
      "glob": "org/springframework/security/web/reactive/result/view/CsrfRequestDataValueProcessor.class"
    },
    {
      "glob": "org/springframework/security/web/server/SecurityWebFilterChain.class"
    },
    {
      "glob": "org/springframework/security/web/server/WebFilterChainProxy.class"
    },
    {
      "glob": "org/springframework/transaction/ConfigurableTransactionManager.class"
    },
    {
      "glob": "org/springframework/transaction/TransactionDefinition.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AbstractTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/AnnotationTransactionAttributeSource.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/EnableTransactionManagement.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/RestrictedTransactionalEventListenerFactory.class"
    },
    {
      "glob": "org/springframework/transaction/annotation/TransactionManagementConfigurationSelector.class"
    },
    {
      "glob": "org/springframework/transaction/event/TransactionalEventListenerFactory.class"
    },
    {
      "glob": "org/springframework/transaction/interceptor/AbstractFallbackTransactionAttributeSource.class"
    },
    {
      "glob": "org/springframework/transaction/interceptor/BeanFactoryTransactionAttributeSourceAdvisor.class"
    },
    {
      "glob": "org/springframework/transaction/interceptor/TransactionAspectSupport.class"
    },
    {
      "glob": "org/springframework/transaction/interceptor/TransactionInterceptor.class"
    },
    {
      "glob": "org/springframework/transaction/reactive/AbstractReactiveTransactionManager.class"
    },
    {
      "glob": "org/springframework/transaction/reactive/TransactionalOperator.class"
    },
    {
      "glob": "org/springframework/transaction/support/AbstractPlatformTransactionManager.class"
    },
    {
      "glob": "org/springframework/transaction/support/DefaultTransactionDefinition.class"
    },
    {
      "glob": "org/springframework/transaction/support/TransactionOperations.class"
    },
    {
      "glob": "org/springframework/transaction/support/TransactionTemplate.class"
    },
    {
      "glob": "org/springframework/util/CustomizableThreadCreator.class"
    },
    {
      "glob": "org/springframework/validation/Validator.class"
    },
    {
      "glob": "org/springframework/validation/beanvalidation/LocalValidatorFactoryBean.class"
    },
    {
      "glob": "org/springframework/validation/beanvalidation/MethodValidationPostProcessor.class"
    },
    {
      "glob": "org/springframework/validation/beanvalidation/SpringValidatorAdapter.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/ResponseBody.class"
    },
    {
      "glob": "org/springframework/web/bind/annotation/RestControllerAdvice.class"
    },
    {
      "glob": "org/springframework/web/reactive/DispatcherHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/HandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/accept/RequestedContentTypeResolver.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/DelegatingWebFluxConfiguration.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$EmptyHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoOpValidator.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport$NoUpgradeStrategyWebSocketService.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurationSupport.class"
    },
    {
      "glob": "org/springframework/web/reactive/config/WebFluxConfigurer.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/client/ExchangeFilterFunction.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/client/WebClient$Builder.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/server/RouterFunction.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/server/support/HandlerFunctionAdapter.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/server/support/RouterFunctionMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/function/server/support/ServerResponseResultHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/handler/AbstractHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/resource/ResourceTransformer.class"
    },
    {
      "glob": "org/springframework/web/reactive/resource/ResourceUrlProvider.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/HandlerResultHandlerSupport.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/SimpleHandlerAdapter.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/AbstractHandlerMethodMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/HandlerMethodArgumentResolverSupport.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/RequestMappingInfoHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/annotation/AbstractMessageWriterResultHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerAdapter.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/annotation/RequestMappingHandlerMapping.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/annotation/ResponseBodyResultHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/annotation/ResponseEntityExceptionHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/method/annotation/ResponseEntityResultHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/result/view/ViewResolutionResultHandler.class"
    },
    {
      "glob": "org/springframework/web/reactive/socket/server/support/WebSocketHandlerAdapter.class"
    },
    {
      "glob": "org/springframework/web/server/WebExceptionHandler.class"
    },
    {
      "glob": "org/springframework/web/server/i18n/LocaleContextResolver.class"
    },
    {
      "glob": "org/springframework/web/server/session/WebSessionIdResolver.class"
    },
    {
      "glob": "org/springframework/web/server/session/WebSessionManager.class"
    },
    {
      "glob": "org/springframework/web/util/HtmlCharacterEntityReferences.properties"
    },
    {
      "glob": "public/"
    },
    {
      "glob": "resources/"
    },
    {
      "glob": "spring.properties"
    },
    {
      "glob": "static/"
    },
    {
      "glob": "templates"
    },
    {
      "module": "java.base",
      "glob": "java/lang/AutoCloseable.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/Iterable.class"
    },
    {
      "module": "java.base",
      "glob": "java/lang/Object.class"
    },
    {
      "module": "java.base",
      "glob": "java/util/function/BiPredicate.class"
    },
    {
      "module": "java.logging",
      "glob": "java/util/logging/Logger.class"
    },
    {
      "module": "java.xml",
      "glob": "jdk/xml/internal/jdkcatalog/JDKCatalog.xml"
    }
  ],
  "bundles": [],
  "jni": [
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    }
  ]
}