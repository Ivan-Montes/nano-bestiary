[
{
  "name":"[I"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.BeanDeserializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.KeyDeserializers;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.ValueInstantiators;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.BeanSerializerModifier;"
},
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"
},
{
  "name":"[Ljava.lang.Class;"
},
{
  "name":"[Ljava.lang.Object;"
},
{
  "name":"[Ljava.lang.String;"
},
{
  "name":"[Ljava.lang.reflect.Constructor;"
},
{
  "name":"[Lorg.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure;"
},
{
  "name":"[Lorg.springframework.core.annotation.AnnotationAttributes;"
},
{
  "name":"[Lorg.springframework.core.annotation.TypeMappedAnnotation;"
},
{
  "name":"[Lorg.springframework.util.ConcurrentReferenceHashMap$Segment;"
},
{
  "name":"[Lorg.springframework.web.bind.annotation.RequestMethod;"
},
{
  "name":"[Z"
},
{
  "name":"boolean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean"] }, {"name":"from","parameterTypes":["java.lang.Boolean"] }, {"name":"of","parameterTypes":["java.lang.Boolean"] }, {"name":"valueOf","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"brave.Tracer"
},
{
  "name":"ch.qos.logback.classic.BasicConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.LoggerContext"
},
{
  "name":"ch.qos.logback.classic.joran.SerializedModelConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.util.DefaultJoranConfigurator",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"co.elastic.clients.elasticsearch.ElasticsearchClient"
},
{
  "name":"co.elastic.clients.transport.ElasticsearchTransport"
},
{
  "name":"com.couchbase.client.java.Bucket"
},
{
  "name":"com.couchbase.client.java.Cluster"
},
{
  "name":"com.datastax.oss.driver.api.core.CqlSession"
},
{
  "name":"com.fasterxml.jackson.annotation.JacksonAnnotation",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAnyGetter",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAnySetter",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonIgnore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Include"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonInclude$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonSetter$Value"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonTypeInfo$As"
},
{
  "name":"com.fasterxml.jackson.annotation.JsonUnwrapped",
  "queryAllDeclaredMethods":true
},
{
  "name":"com.fasterxml.jackson.annotation.JsonView"
},
{
  "name":"com.fasterxml.jackson.annotation.PropertyAccessor"
},
{
  "name":"com.fasterxml.jackson.core.Base64Variant"
},
{
  "name":"com.fasterxml.jackson.core.FormatSchema"
},
{
  "name":"com.fasterxml.jackson.core.JsonEncoding"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory"
},
{
  "name":"com.fasterxml.jackson.core.JsonFactory$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator"
},
{
  "name":"com.fasterxml.jackson.core.JsonGenerator$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonParser"
},
{
  "name":"com.fasterxml.jackson.core.JsonParser$Feature"
},
{
  "name":"com.fasterxml.jackson.core.JsonProcessingException"
},
{
  "name":"com.fasterxml.jackson.core.JsonToken"
},
{
  "name":"com.fasterxml.jackson.core.ObjectCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getJsonFactory","parameterTypes":[] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }]
},
{
  "name":"com.fasterxml.jackson.core.PrettyPrinter"
},
{
  "name":"com.fasterxml.jackson.core.StreamReadFeature"
},
{
  "name":"com.fasterxml.jackson.core.StreamWriteFeature"
},
{
  "name":"com.fasterxml.jackson.core.TreeCodec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.fasterxml.jackson.core.TreeNode"
},
{
  "name":"com.fasterxml.jackson.core.Version"
},
{
  "name":"com.fasterxml.jackson.core.Versioned",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.fasterxml.jackson.core.exc.StreamReadException"
},
{
  "name":"com.fasterxml.jackson.core.exc.StreamWriteException"
},
{
  "name":"com.fasterxml.jackson.core.io.CharacterEscapes"
},
{
  "name":"com.fasterxml.jackson.core.type.ResolvedType"
},
{
  "name":"com.fasterxml.jackson.core.type.TypeReference"
},
{
  "name":"com.fasterxml.jackson.databind.AnnotationIntrospector"
},
{
  "name":"com.fasterxml.jackson.databind.DatabindException"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationConfig"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationContext"
},
{
  "name":"com.fasterxml.jackson.databind.DeserializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.InjectableValues"
},
{
  "name":"com.fasterxml.jackson.databind.JavaType"
},
{
  "name":"com.fasterxml.jackson.databind.JsonDeserializer"
},
{
  "name":"com.fasterxml.jackson.databind.JsonMappingException"
},
{
  "name":"com.fasterxml.jackson.databind.JsonNode"
},
{
  "name":"com.fasterxml.jackson.databind.JsonSerializer"
},
{
  "name":"com.fasterxml.jackson.databind.KeyDeserializer"
},
{
  "name":"com.fasterxml.jackson.databind.MapperFeature"
},
{
  "name":"com.fasterxml.jackson.databind.MappingIterator"
},
{
  "name":"com.fasterxml.jackson.databind.Module",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getDependencies","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.Module$SetupContext"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"createArrayNode","parameterTypes":[] }, {"name":"createObjectNode","parameterTypes":[] }, {"name":"getFactory","parameterTypes":[] }, {"name":"missingNode","parameterTypes":[] }, {"name":"nullNode","parameterTypes":[] }, {"name":"readTree","parameterTypes":["com.fasterxml.jackson.core.JsonParser"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValue","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.ResolvedType"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","com.fasterxml.jackson.core.type.TypeReference"] }, {"name":"readValues","parameterTypes":["com.fasterxml.jackson.core.JsonParser","java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"treeAsTokens","parameterTypes":["com.fasterxml.jackson.core.TreeNode"] }, {"name":"treeToValue","parameterTypes":["com.fasterxml.jackson.core.TreeNode","java.lang.Class"] }, {"name":"version","parameterTypes":[] }, {"name":"writeTree","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","com.fasterxml.jackson.core.TreeNode"] }, {"name":"writeValue","parameterTypes":["com.fasterxml.jackson.core.JsonGenerator","java.lang.Object"] }]
},
{
  "name":"com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectReader"
},
{
  "name":"com.fasterxml.jackson.databind.ObjectWriter"
},
{
  "name":"com.fasterxml.jackson.databind.PropertyNamingStrategies",
  "allDeclaredFields":true
},
{
  "name":"com.fasterxml.jackson.databind.PropertyNamingStrategy"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationConfig"
},
{
  "name":"com.fasterxml.jackson.databind.SerializationFeature"
},
{
  "name":"com.fasterxml.jackson.databind.SerializerProvider"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.CacheProvider"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.ConstructorDetector"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.ContextAttributes"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.DatatypeFeature"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.HandlerInstantiator"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableCoercionConfig"
},
{
  "name":"com.fasterxml.jackson.databind.cfg.MutableConfigOverride"
},
{
  "name":"com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"
},
{
  "name":"com.fasterxml.jackson.databind.deser.DefaultDeserializationContext"
},
{
  "name":"com.fasterxml.jackson.databind.deser.DeserializationProblemHandler"
},
{
  "name":"com.fasterxml.jackson.databind.deser.ValueInstantiator"
},
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver"
},
{
  "name":"com.fasterxml.jackson.databind.introspect.VisibilityChecker"
},
{
  "name":"com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper"
},
{
  "name":"com.fasterxml.jackson.databind.jsonschema.JsonSchema"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.NamedType"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.SubtypeResolver"
},
{
  "name":"com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleDeserializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addAbstractTypeMapping","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"addDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonDeserializer"] }, {"name":"addKeyDeserializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.KeyDeserializer"] }, {"name":"addKeySerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addSerializer","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.JsonSerializer"] }, {"name":"addValueInstantiator","parameterTypes":["java.lang.Class","com.fasterxml.jackson.databind.deser.ValueInstantiator"] }, {"name":"getModuleName","parameterTypes":[] }, {"name":"getTypeId","parameterTypes":[] }, {"name":"registerSubtypes","parameterTypes":["java.util.Collection"] }, {"name":"registerSubtypes","parameterTypes":["com.fasterxml.jackson.databind.jsontype.NamedType[]"] }, {"name":"registerSubtypes","parameterTypes":["java.lang.Class[]"] }, {"name":"setAbstractTypes","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleAbstractTypeResolver"] }, {"name":"setDeserializerModifier","parameterTypes":["com.fasterxml.jackson.databind.deser.BeanDeserializerModifier"] }, {"name":"setDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleDeserializers"] }, {"name":"setKeyDeserializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleKeyDeserializers"] }, {"name":"setKeySerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setMixInAnnotation","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"setSerializerModifier","parameterTypes":["com.fasterxml.jackson.databind.ser.BeanSerializerModifier"] }, {"name":"setSerializers","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleSerializers"] }, {"name":"setValueInstantiators","parameterTypes":["com.fasterxml.jackson.databind.module.SimpleValueInstantiators"] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"version","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleSerializers"
},
{
  "name":"com.fasterxml.jackson.databind.module.SimpleValueInstantiators"
},
{
  "name":"com.fasterxml.jackson.databind.node.ArrayNode"
},
{
  "name":"com.fasterxml.jackson.databind.node.JsonNodeFactory"
},
{
  "name":"com.fasterxml.jackson.databind.node.ObjectNode"
},
{
  "name":"com.fasterxml.jackson.databind.ser.BasicSerializerFactory"
},
{
  "name":"com.fasterxml.jackson.databind.ser.BeanSerializerModifier"
},
{
  "name":"com.fasterxml.jackson.databind.ser.DefaultSerializerProvider"
},
{
  "name":"com.fasterxml.jackson.databind.ser.FilterProvider"
},
{
  "name":"com.fasterxml.jackson.databind.ser.SerializerFactory"
},
{
  "name":"com.fasterxml.jackson.databind.type.LogicalType"
},
{
  "name":"com.fasterxml.jackson.databind.type.TypeFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.cbor.CBORFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.smile.SmileFactory"
},
{
  "name":"com.fasterxml.jackson.dataformat.xml.XmlMapper"
},
{
  "name":"com.fasterxml.jackson.dataformat.yaml.YAMLFactory"
},
{
  "name":"com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.fasterxml.jackson.module.kotlin.KotlinModule"
},
{
  "name":"com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setupModule","parameterTypes":["com.fasterxml.jackson.databind.Module$SetupContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.github.benmanes.caffeine.cache.Cache"
},
{
  "name":"com.github.benmanes.caffeine.cache.Caffeine"
},
{
  "name":"com.github.therapi.runtimejavadoc.CommentFormatter"
},
{
  "name":"com.google.common.base.Optional"
},
{
  "name":"com.google.gson.ExclusionStrategy"
},
{
  "name":"com.google.gson.FieldNamingPolicy"
},
{
  "name":"com.google.gson.FieldNamingStrategy"
},
{
  "name":"com.google.gson.Gson",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.google.gson.GsonBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.google.gson.JsonElement"
},
{
  "name":"com.google.gson.JsonIOException"
},
{
  "name":"com.google.gson.JsonSyntaxException"
},
{
  "name":"com.google.gson.LongSerializationPolicy"
},
{
  "name":"com.google.gson.ReflectionAccessFilter"
},
{
  "name":"com.google.gson.ToNumberStrategy"
},
{
  "name":"com.google.gson.TypeAdapter"
},
{
  "name":"com.google.gson.TypeAdapterFactory"
},
{
  "name":"com.google.gson.internal.Excluder"
},
{
  "name":"com.google.gson.reflect.TypeToken"
},
{
  "name":"com.google.gson.stream.JsonReader"
},
{
  "name":"com.google.gson.stream.JsonWriter"
},
{
  "name":"com.hazelcast.core.Hazelcast"
},
{
  "name":"com.hazelcast.core.HazelcastInstance"
},
{
  "name":"com.hazelcast.spring.cache.HazelcastCache"
},
{
  "name":"com.mchange.v2.c3p0.ComboPooledDataSource"
},
{
  "name":"com.mongodb.AutoEncryptionSettings"
},
{
  "name":"com.mongodb.ClientSessionOptions"
},
{
  "name":"com.mongodb.ConnectionString"
},
{
  "name":"com.mongodb.ContextProvider"
},
{
  "name":"com.mongodb.DBRef"
},
{
  "name":"com.mongodb.LoggerSettings"
},
{
  "name":"com.mongodb.MongoClientSettings",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"com.mongodb.MongoClientSettings$Builder"
},
{
  "name":"com.mongodb.MongoCredential"
},
{
  "name":"com.mongodb.MongoException"
},
{
  "name":"com.mongodb.ReadConcern"
},
{
  "name":"com.mongodb.ReadPreference"
},
{
  "name":"com.mongodb.ServerApi"
},
{
  "name":"com.mongodb.WriteConcern"
},
{
  "name":"com.mongodb.annotations.Immutable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.mongodb.client.MongoClient"
},
{
  "name":"com.mongodb.client.gridfs.model.GridFSFile"
},
{
  "name":"com.mongodb.client.gridfs.model.GridFSUploadOptions"
},
{
  "name":"com.mongodb.client.model.Collation"
},
{
  "name":"com.mongodb.client.model.CountOptions"
},
{
  "name":"com.mongodb.client.model.CreateCollectionOptions"
},
{
  "name":"com.mongodb.client.model.CreateViewOptions"
},
{
  "name":"com.mongodb.client.model.DeleteOptions"
},
{
  "name":"com.mongodb.client.model.EstimatedDocumentCountOptions"
},
{
  "name":"com.mongodb.client.model.FindOneAndDeleteOptions"
},
{
  "name":"com.mongodb.client.model.ReplaceOptions"
},
{
  "name":"com.mongodb.client.model.UpdateOptions"
},
{
  "name":"com.mongodb.client.model.changestream.ChangeStreamDocument"
},
{
  "name":"com.mongodb.client.model.changestream.FullDocument"
},
{
  "name":"com.mongodb.client.result.DeleteResult"
},
{
  "name":"com.mongodb.client.result.InsertManyResult"
},
{
  "name":"com.mongodb.client.result.InsertOneResult"
},
{
  "name":"com.mongodb.client.result.UpdateResult"
},
{
  "name":"com.mongodb.connection.ClusterDescription"
},
{
  "name":"com.mongodb.connection.ClusterSettings"
},
{
  "name":"com.mongodb.connection.ConnectionPoolSettings"
},
{
  "name":"com.mongodb.connection.ConnectionPoolSettings$Builder"
},
{
  "name":"com.mongodb.connection.ProxySettings$Builder"
},
{
  "name":"com.mongodb.connection.ServerSettings"
},
{
  "name":"com.mongodb.connection.SocketSettings"
},
{
  "name":"com.mongodb.connection.SslSettings"
},
{
  "name":"com.mongodb.connection.SslSettings$Builder"
},
{
  "name":"com.mongodb.connection.TransportSettings"
},
{
  "name":"com.mongodb.event.CommandEvent"
},
{
  "name":"com.mongodb.event.CommandFailedEvent"
},
{
  "name":"com.mongodb.event.CommandListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.mongodb.event.CommandStartedEvent"
},
{
  "name":"com.mongodb.event.CommandSucceededEvent"
},
{
  "name":"com.mongodb.event.ConnectionCheckOutFailedEvent"
},
{
  "name":"com.mongodb.event.ConnectionCheckOutStartedEvent"
},
{
  "name":"com.mongodb.event.ConnectionCheckedInEvent"
},
{
  "name":"com.mongodb.event.ConnectionCheckedOutEvent"
},
{
  "name":"com.mongodb.event.ConnectionClosedEvent"
},
{
  "name":"com.mongodb.event.ConnectionCreatedEvent"
},
{
  "name":"com.mongodb.event.ConnectionPoolClearedEvent"
},
{
  "name":"com.mongodb.event.ConnectionPoolClosedEvent"
},
{
  "name":"com.mongodb.event.ConnectionPoolCreatedEvent"
},
{
  "name":"com.mongodb.event.ConnectionPoolListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"connectionPoolCleared","parameterTypes":["com.mongodb.event.ConnectionPoolClearedEvent"] }, {"name":"connectionPoolReady","parameterTypes":["com.mongodb.event.ConnectionPoolReadyEvent"] }, {"name":"connectionReady","parameterTypes":["com.mongodb.event.ConnectionReadyEvent"] }]
},
{
  "name":"com.mongodb.event.ConnectionPoolReadyEvent"
},
{
  "name":"com.mongodb.event.ConnectionReadyEvent"
},
{
  "name":"com.mongodb.lang.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"com.mongodb.reactivestreams.client.ChangeStreamPublisher"
},
{
  "name":"com.mongodb.reactivestreams.client.ClientSession"
},
{
  "name":"com.mongodb.reactivestreams.client.FindPublisher"
},
{
  "name":"com.mongodb.reactivestreams.client.ListDatabasesPublisher"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"com.mongodb.reactivestreams.client.MongoCollection"
},
{
  "name":"com.mongodb.reactivestreams.client.MongoDatabase"
},
{
  "name":"com.mongodb.reactivestreams.client.gridfs.GridFSBucket"
},
{
  "name":"com.mongodb.spi.dns.DnsClient"
},
{
  "name":"com.mongodb.spi.dns.InetAddressResolver"
},
{
  "name":"com.netflix.appinfo.ApplicationInfoManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"com.netflix.appinfo.ApplicationInfoManager$InstanceStatusMapper"
},
{
  "name":"com.netflix.appinfo.ApplicationInfoManager$StatusChangeListener"
},
{
  "name":"com.netflix.appinfo.DataCenterInfo"
},
{
  "name":"com.netflix.appinfo.EurekaInstanceConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.netflix.appinfo.HealthCheckCallback"
},
{
  "name":"com.netflix.appinfo.HealthCheckHandler"
},
{
  "name":"com.netflix.appinfo.InstanceInfo"
},
{
  "name":"com.netflix.appinfo.InstanceInfo$InstanceStatus"
},
{
  "name":"com.netflix.discovery.AbstractDiscoveryClientOptionalArgs",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getHostnameVerifier","parameterTypes":[] }, {"name":"getSSLContext","parameterTypes":[] }, {"name":"getTransportClientFactory","parameterTypes":[] }, {"name":"setAdditionalFilters","parameterTypes":["java.util.Collection"] }, {"name":"setEventBus","parameterTypes":["com.netflix.eventbus.spi.EventBus"] }, {"name":"setEventListeners","parameterTypes":["java.util.Set"] }, {"name":"setHealthCheckCallbackProvider","parameterTypes":["jakarta.inject.Provider"] }, {"name":"setHealthCheckHandlerProvider","parameterTypes":["jakarta.inject.Provider"] }, {"name":"setHostnameVerifier","parameterTypes":["javax.net.ssl.HostnameVerifier"] }, {"name":"setPreRegistrationHandler","parameterTypes":["com.netflix.discovery.PreRegistrationHandler"] }, {"name":"setSSLContext","parameterTypes":["javax.net.ssl.SSLContext"] }, {"name":"setTransportClientFactory","parameterTypes":["com.netflix.discovery.shared.transport.TransportClientFactory"] }]
},
{
  "name":"com.netflix.discovery.DiscoveryClient"
},
{
  "name":"com.netflix.discovery.EurekaClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.netflix.discovery.EurekaClientConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"shouldEnforceFetchRegistryAtInit","parameterTypes":[] }]
},
{
  "name":"com.netflix.discovery.EurekaEventListener"
},
{
  "name":"com.netflix.discovery.PreRegistrationHandler"
},
{
  "name":"com.netflix.discovery.shared.Application"
},
{
  "name":"com.netflix.discovery.shared.Applications"
},
{
  "name":"com.netflix.discovery.shared.LookupService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getApplication","parameterTypes":["java.lang.String"] }, {"name":"getApplications","parameterTypes":[] }, {"name":"getInstancesById","parameterTypes":["java.lang.String"] }, {"name":"getNextServerFromEureka","parameterTypes":["java.lang.String","boolean"] }]
},
{
  "name":"com.netflix.discovery.shared.transport.EurekaTransportConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.netflix.discovery.shared.transport.TransportClientFactory"
},
{
  "name":"com.netflix.discovery.shared.transport.jersey.TransportClientFactories",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"com.netflix.eventbus.spi.EventBus"
},
{
  "name":"com.querydsl.core.Query"
},
{
  "name":"com.querydsl.core.types.EntityPath"
},
{
  "name":"com.querydsl.core.types.Predicate"
},
{
  "name":"com.rabbitmq.client.Channel"
},
{
  "name":"com.rabbitmq.client.ConnectionFactory"
},
{
  "name":"com.samskivert.mustache.Mustache"
},
{
  "name":"com.sendgrid.SendGrid"
},
{
  "name":"com.stoyanr.evictor.ConcurrentMapWithTimedEviction"
},
{
  "name":"com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"com.unboundid.ldap.listener.InMemoryDirectoryServer"
},
{
  "name":"com.wavefront.sdk.common.WavefrontSender"
},
{
  "name":"com.wavefront.sdk.common.application.ApplicationTags"
},
{
  "name":"com.zaxxer.hikari.HikariDataSource"
},
{
  "name":"dev.ime.MsAreaApplication",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"main","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"dev.ime.MsAreaApplication$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.api.endpoint.CommandEndpointHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"create","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }, {"name":"deleteById","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }, {"name":"update","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }]
},
{
  "name":"dev.ime.api.endpoint.CommandEndpointRouter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.api.endpoint.CommandEndpointRouter$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":["dev.ime.config.UriConfigProperties"] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.api.endpoint.CommandEndpointRouter$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.api.endpoint.CommandEndpointRouter$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.api.endpoint.QueryEndpointHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAll","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }, {"name":"getById","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }]
},
{
  "name":"dev.ime.api.endpoint.QueryEndpointRouter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.api.endpoint.QueryEndpointRouter$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":["dev.ime.config.UriConfigProperties"] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.api.endpoint.QueryEndpointRouter$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.api.endpoint.QueryEndpointRouter$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.api.endpoint.RSocketAreaController",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"existsById","parameterTypes":["java.lang.String"] }]
},
{
  "name":"dev.ime.api.error.ApiExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.api.error.ErrorHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.api.validation.DtoValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.application.dispatcher.CommandDispatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.application.dispatcher.QueryDispatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.application.dto.AreaDto"
},
{
  "name":"dev.ime.application.dto.ErrorResponse"
},
{
  "name":"dev.ime.application.dto.PaginationDto"
},
{
  "name":"dev.ime.application.exception.BasicException"
},
{
  "name":"dev.ime.application.handlers.CreateAreaCommandHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"handle","parameterTypes":["dev.ime.domain.command.Command"] }]
},
{
  "name":"dev.ime.application.handlers.DeleteAreaCommandHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"handle","parameterTypes":["dev.ime.domain.command.Command"] }]
},
{
  "name":"dev.ime.application.handlers.GetAllAreaQueryHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"handle","parameterTypes":["dev.ime.domain.query.Query"] }]
},
{
  "name":"dev.ime.application.handlers.GetByIdAreaQueryHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"handle","parameterTypes":["dev.ime.domain.query.Query"] }]
},
{
  "name":"dev.ime.application.handlers.UpdateAreaCommandHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"handle","parameterTypes":["dev.ime.domain.command.Command"] }]
},
{
  "name":"dev.ime.application.service.CommandService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"create","parameterTypes":["java.lang.Object"] }, {"name":"deleteById","parameterTypes":["java.util.UUID"] }, {"name":"update","parameterTypes":["java.util.UUID","java.lang.Object"] }]
},
{
  "name":"dev.ime.application.service.QueryService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"getById","parameterTypes":["java.util.UUID"] }]
},
{
  "name":"dev.ime.application.service.RSocketService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"existsById","parameterTypes":["java.util.UUID"] }]
},
{
  "name":"dev.ime.application.usecases.CreateAreaCommand"
},
{
  "name":"dev.ime.application.usecases.DeleteAreaCommand"
},
{
  "name":"dev.ime.application.usecases.GetAllAreaQuery"
},
{
  "name":"dev.ime.application.usecases.GetByIdAreaQuery"
},
{
  "name":"dev.ime.application.usecases.UpdateAreaCommand"
},
{
  "name":"dev.ime.application.utils.ReactiveLoggerUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.application.utils.ReflectionUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.application.utils.ResilienceConfigUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.application.utils.SortingValidationUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.AreaMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.KafkaConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.KafkaConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.KafkaConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.KafkaConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.LoggerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.LoggerConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.LoggerConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.LoggerConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.OpenApiConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.OpenApiConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.OpenApiConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.OpenApiConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.R2dbcConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.R2dbcConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.R2dbcConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.R2dbcConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.R2dbcConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.R2dbcConfigProperties$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.RSocketConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.RSocketConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean","com.netflix.discovery.EurekaClient"] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.RSocketConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.RSocketConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.RedisConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.RedisConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.RedisConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.RedisConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.ResilienceConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.ResilienceConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.ResilienceConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.ResilienceConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.SecurityConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.SecurityConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.config.SecurityConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.SecurityConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"dev.ime.config.UriConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.config.UriConfigProperties$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.domain.command.Command"
},
{
  "name":"dev.ime.domain.command.CommandHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.event.Event",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"dev.ime.domain.model.Area"
},
{
  "name":"dev.ime.domain.ports.inbound.CommandEndpointPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.inbound.CommandServicePort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.inbound.QueryEndpointPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.inbound.QueryServicePort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.inbound.RSocketControllerPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.inbound.RSocketServicePort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.inbound.SubscriberPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.BaseProjectorPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.CreatureEntityCheckerPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.EntityCheckerPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.EventWriteRepositoryPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.ExtendedProjectorPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.PublisherPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.RSocketRepositoryPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.ports.outbound.ReadRepositoryPort",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.domain.query.Query"
},
{
  "name":"dev.ime.domain.query.QueryHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.infrastructure.adapter.AreaProjectorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"create","parameterTypes":["dev.ime.domain.event.Event"] }, {"name":"deleteById","parameterTypes":["dev.ime.domain.event.Event"] }, {"name":"update","parameterTypes":["dev.ime.domain.event.Event"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.AreaProjectorAdapter$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.AreaReadRepositoryAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Pageable"] }, {"name":"findById","parameterTypes":["java.util.UUID"] }, {"name":"findByName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.AreaReadRepositoryAdapter$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.CreatureRedisProjectorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"create","parameterTypes":["dev.ime.domain.event.Event"] }, {"name":"deleteById","parameterTypes":["dev.ime.domain.event.Event"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.CreatureRedisProjectorAdapter$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.EventMongoWriteRepositoryAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"save","parameterTypes":["dev.ime.domain.event.Event"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.EventMongoWriteRepositoryAdapter$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.KafkaAreaSubscriberAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onMessage","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRecord"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.KafkaCreatureSubscriberAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onMessage","parameterTypes":["org.apache.kafka.clients.consumer.ConsumerRecord"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.KafkaPublisherAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"publishEvent","parameterTypes":["dev.ime.domain.event.Event"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.KafkaPublisherAdapter$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.RSocketCreatureCheckerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"existsAnyByAreaId","parameterTypes":["java.util.UUID"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.RSocketRepositoryAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"existsById","parameterTypes":["java.util.UUID"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.RSocketRepositoryAdapter$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"dev.ime.infrastructure.adapter.RedisCreatureCheckerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"existsAnyByAreaId","parameterTypes":["java.util.UUID"] }, {"name":"existsById","parameterTypes":["java.util.UUID"] }]
},
{
  "name":"dev.ime.infrastructure.entity.AreaJpaEntity",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.infrastructure.entity.AreaJpaEntity$AreaJpaEntityBuilder",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.infrastructure.entity.CreatureRedisEntity"
},
{
  "name":"dev.ime.infrastructure.entity.EventMongoEntity",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.infrastructure.entity.EventMongoEntity$EventMongoEntityBuilder",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.infrastructure.repository.AreaReadRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"dev.ime.infrastructure.repository.EventMongoWriteRepository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"freemarker.template.Configuration"
},
{
  "name":"graphql.GraphQL"
},
{
  "name":"groovy.lang.MetaClass"
},
{
  "name":"groovy.text.TemplateEngine"
},
{
  "name":"groovy.text.markup.MarkupTemplateEngine"
},
{
  "name":"io.github.resilience4j.bulkhead.Bulkhead",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.bulkhead.Bulkhead$EventPublisher"
},
{
  "name":"io.github.resilience4j.bulkhead.Bulkhead$Metrics"
},
{
  "name":"io.github.resilience4j.bulkhead.BulkheadConfig"
},
{
  "name":"io.github.resilience4j.bulkhead.BulkheadConfig$Builder"
},
{
  "name":"io.github.resilience4j.bulkhead.BulkheadRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.bulkhead.BulkheadRegistry$Builder"
},
{
  "name":"io.github.resilience4j.bulkhead.ThreadPoolBulkhead"
},
{
  "name":"io.github.resilience4j.bulkhead.ThreadPoolBulkheadConfig"
},
{
  "name":"io.github.resilience4j.bulkhead.ThreadPoolBulkheadConfig$Builder"
},
{
  "name":"io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry$Builder"
},
{
  "name":"io.github.resilience4j.bulkhead.annotation.Bulkhead"
},
{
  "name":"io.github.resilience4j.bulkhead.event.BulkheadEvent"
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreaker",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreaker$EventPublisher"
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreaker$Metrics"
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreaker$State"
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreakerConfig"
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreakerConfig$Builder"
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry$Builder"
},
{
  "name":"io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"
},
{
  "name":"io.github.resilience4j.circuitbreaker.event.CircuitBreakerEvent"
},
{
  "name":"io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnCallNotPermittedEvent"
},
{
  "name":"io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnErrorEvent"
},
{
  "name":"io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnIgnoredErrorEvent"
},
{
  "name":"io.github.resilience4j.circuitbreaker.event.CircuitBreakerOnSuccessEvent"
},
{
  "name":"io.github.resilience4j.common.CommonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getTags","parameterTypes":[] }, {"name":"setTags","parameterTypes":["java.util.Map"] }]
},
{
  "name":"io.github.resilience4j.common.CompositeCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.CustomizerWithName"
},
{
  "name":"io.github.resilience4j.common.bulkhead.configuration.BulkheadConfigCustomizer"
},
{
  "name":"io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createBulkheadConfig","parameterTypes":["io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties$InstanceProperties","io.github.resilience4j.common.CompositeCustomizer","java.lang.String"] }, {"name":"getBackendProperties","parameterTypes":["java.lang.String"] }, {"name":"getBackends","parameterTypes":[] }, {"name":"getConfigs","parameterTypes":[] }, {"name":"getInstances","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.bulkhead.configuration.CommonBulkheadConfigurationProperties$InstanceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createThreadPoolBulkheadConfig","parameterTypes":["io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties$InstanceProperties","io.github.resilience4j.common.CompositeCustomizer","java.lang.String"] }, {"name":"createThreadPoolBulkheadConfig","parameterTypes":["java.lang.String","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"getBackendProperties","parameterTypes":["java.lang.String"] }, {"name":"getBackends","parameterTypes":[] }, {"name":"getConfigs","parameterTypes":[] }, {"name":"getInstances","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties$InstanceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.common.bulkhead.configuration.ThreadPoolBulkheadConfigCustomizer"
},
{
  "name":"io.github.resilience4j.common.circuitbreaker.configuration.CircuitBreakerConfigCustomizer"
},
{
  "name":"io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createCircuitBreakerConfig","parameterTypes":["java.lang.String","io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties$InstanceProperties","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"findCircuitBreakerProperties","parameterTypes":["java.lang.String"] }, {"name":"getBackendProperties","parameterTypes":["java.lang.String"] }, {"name":"getBackends","parameterTypes":[] }, {"name":"getConfigs","parameterTypes":[] }, {"name":"getInstances","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.circuitbreaker.configuration.CommonCircuitBreakerConfigurationProperties$InstanceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createRateLimiterConfig","parameterTypes":["io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties$InstanceProperties","io.github.resilience4j.common.CompositeCustomizer","java.lang.String"] }, {"name":"createRateLimiterConfig","parameterTypes":["java.lang.String","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"findRateLimiterProperties","parameterTypes":["java.lang.String"] }, {"name":"getConfigs","parameterTypes":[] }, {"name":"getInstanceProperties","parameterTypes":["java.lang.String"] }, {"name":"getInstances","parameterTypes":[] }, {"name":"getLimiters","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.ratelimiter.configuration.CommonRateLimiterConfigurationProperties$InstanceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.common.ratelimiter.configuration.RateLimiterConfigCustomizer"
},
{
  "name":"io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createRetryConfig","parameterTypes":["io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties$InstanceProperties","io.github.resilience4j.common.CompositeCustomizer","java.lang.String"] }, {"name":"createRetryConfig","parameterTypes":["java.lang.String","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"getBackendProperties","parameterTypes":["java.lang.String"] }, {"name":"getBackends","parameterTypes":[] }, {"name":"getConfigs","parameterTypes":[] }, {"name":"getInstances","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.retry.configuration.CommonRetryConfigurationProperties$InstanceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.common.retry.configuration.RetryConfigCustomizer"
},
{
  "name":"io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createTimeLimiterConfig","parameterTypes":["java.lang.String"] }, {"name":"createTimeLimiterConfig","parameterTypes":["java.lang.String","io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties$InstanceProperties","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"getConfigs","parameterTypes":[] }, {"name":"getInstanceProperties","parameterTypes":["java.lang.String"] }, {"name":"getInstances","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.common.timelimiter.configuration.CommonTimeLimiterConfigurationProperties$InstanceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.common.timelimiter.configuration.TimeLimiterConfigCustomizer"
},
{
  "name":"io.github.resilience4j.consumer.CircularEventConsumer"
},
{
  "name":"io.github.resilience4j.consumer.EventConsumerRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"
},
{
  "name":"io.github.resilience4j.core.Registry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addConfiguration","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"find","parameterTypes":["java.lang.String"] }, {"name":"getConfiguration","parameterTypes":["java.lang.String"] }, {"name":"getDefaultConfig","parameterTypes":[] }, {"name":"getEventPublisher","parameterTypes":[] }, {"name":"getTags","parameterTypes":[] }, {"name":"remove","parameterTypes":["java.lang.String"] }, {"name":"replace","parameterTypes":["java.lang.String","java.lang.Object"] }]
},
{
  "name":"io.github.resilience4j.core.Registry$EventPublisher"
},
{
  "name":"io.github.resilience4j.core.functions.CheckedConsumer"
},
{
  "name":"io.github.resilience4j.core.functions.CheckedFunction"
},
{
  "name":"io.github.resilience4j.core.functions.CheckedRunnable"
},
{
  "name":"io.github.resilience4j.core.functions.CheckedSupplier"
},
{
  "name":"io.github.resilience4j.core.metrics.MetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onEntryAddedEvent","parameterTypes":["io.github.resilience4j.core.registry.EntryAddedEvent"] }, {"name":"onEntryRemovedEvent","parameterTypes":["io.github.resilience4j.core.registry.EntryRemovedEvent"] }, {"name":"onEntryReplacedEvent","parameterTypes":["io.github.resilience4j.core.registry.EntryReplacedEvent"] }]
},
{
  "name":"io.github.resilience4j.core.registry.EntryAddedEvent"
},
{
  "name":"io.github.resilience4j.core.registry.EntryRemovedEvent"
},
{
  "name":"io.github.resilience4j.core.registry.EntryReplacedEvent"
},
{
  "name":"io.github.resilience4j.core.registry.RegistryEventConsumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractBulkheadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractCircuitBreakerMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractRateLimiterMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractRetryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractThreadPoolBulkheadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.AbstractTimeLimiterMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedBulkheadMetrics"
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedBulkheadMetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishMetrics","parameterTypes":["java.lang.Object"] }, {"name":"removeMetrics","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetrics"
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedCircuitBreakerMetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishMetrics","parameterTypes":["java.lang.Object"] }, {"name":"removeMetrics","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetrics"
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedRateLimiterMetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishMetrics","parameterTypes":["java.lang.Object"] }, {"name":"removeMetrics","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedRetryMetrics"
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedRetryMetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishMetrics","parameterTypes":["java.lang.Object"] }, {"name":"removeMetrics","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedThreadPoolBulkheadMetrics"
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedThreadPoolBulkheadMetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishMetrics","parameterTypes":["java.lang.Object"] }, {"name":"removeMetrics","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetrics"
},
{
  "name":"io.github.resilience4j.micrometer.tagged.TaggedTimeLimiterMetricsPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishMetrics","parameterTypes":["java.lang.Object"] }, {"name":"removeMetrics","parameterTypes":["java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.ratelimiter.RateLimiter"
},
{
  "name":"io.github.resilience4j.ratelimiter.RateLimiterConfig"
},
{
  "name":"io.github.resilience4j.ratelimiter.RateLimiterConfig$Builder"
},
{
  "name":"io.github.resilience4j.ratelimiter.RateLimiterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.ratelimiter.RateLimiterRegistry$Builder"
},
{
  "name":"io.github.resilience4j.ratelimiter.annotation.RateLimiter"
},
{
  "name":"io.github.resilience4j.ratelimiter.event.RateLimiterEvent"
},
{
  "name":"io.github.resilience4j.reactor.AbstractSubscriber"
},
{
  "name":"io.github.resilience4j.reactor.adapter.ReactorAdapter"
},
{
  "name":"io.github.resilience4j.retry.Retry"
},
{
  "name":"io.github.resilience4j.retry.RetryConfig"
},
{
  "name":"io.github.resilience4j.retry.RetryConfig$Builder"
},
{
  "name":"io.github.resilience4j.retry.RetryRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.retry.RetryRegistry$Builder"
},
{
  "name":"io.github.resilience4j.retry.annotation.Retry"
},
{
  "name":"io.github.resilience4j.retry.event.RetryEvent"
},
{
  "name":"io.github.resilience4j.spring6.bulkhead.configure.BulkheadAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.bulkhead.configure.BulkheadAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getBulkheadAspectOrder","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.bulkhead.configure.ReactorBulkheadAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"canHandleReturnType","parameterTypes":["java.lang.Class"] }, {"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.aspectj.lang.ProceedingJoinPoint","io.github.resilience4j.bulkhead.Bulkhead","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.bulkhead.configure.RxJava2BulkheadAspectExt"
},
{
  "name":"io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCircuitBreakerAspectOrder","parameterTypes":[] }, {"name":"setCircuitBreakerAspectOrder","parameterTypes":["int"] }]
},
{
  "name":"io.github.resilience4j.spring6.circuitbreaker.configure.ReactorCircuitBreakerAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"canHandleReturnType","parameterTypes":["java.lang.Class"] }, {"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.aspectj.lang.ProceedingJoinPoint","io.github.resilience4j.circuitbreaker.CircuitBreaker","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.circuitbreaker.configure.RxJava2CircuitBreakerAspectExt"
},
{
  "name":"io.github.resilience4j.spring6.fallback.CompletionStageFallbackDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"decorate","parameterTypes":["io.github.resilience4j.spring6.fallback.FallbackMethod","io.github.resilience4j.core.functions.CheckedSupplier"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.spring6.fallback.FallbackDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.spring6.fallback.FallbackDecorators",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.fallback.FallbackExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.fallback.FallbackMethod"
},
{
  "name":"io.github.resilience4j.spring6.fallback.ReactorFallbackDecorator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"decorate","parameterTypes":["io.github.resilience4j.spring6.fallback.FallbackMethod","io.github.resilience4j.core.functions.CheckedSupplier"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.spring6.fallback.RxJava2FallbackDecorator"
},
{
  "name":"io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getRateLimiterAspectOrder","parameterTypes":[] }, {"name":"setRateLimiterAspectOrder","parameterTypes":["int"] }]
},
{
  "name":"io.github.resilience4j.spring6.ratelimiter.configure.ReactorRateLimiterAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"canHandleReturnType","parameterTypes":["java.lang.Class"] }, {"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.aspectj.lang.ProceedingJoinPoint","io.github.resilience4j.ratelimiter.RateLimiter","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.ratelimiter.configure.RxJava2RateLimiterAspectExt"
},
{
  "name":"io.github.resilience4j.spring6.retry.configure.ReactorRetryAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"canHandleReturnType","parameterTypes":["java.lang.Class"] }, {"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.aspectj.lang.ProceedingJoinPoint","io.github.resilience4j.retry.Retry","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.retry.configure.RetryAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.retry.configure.RetryAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getRetryAspectOrder","parameterTypes":[] }, {"name":"setRetryAspectOrder","parameterTypes":["int"] }]
},
{
  "name":"io.github.resilience4j.spring6.retry.configure.RxJava2RetryAspectExt"
},
{
  "name":"io.github.resilience4j.spring6.spelresolver.SpelResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.timelimiter.configure.ReactorTimeLimiterAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"canHandleReturnType","parameterTypes":["java.lang.Class"] }, {"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.aspectj.lang.ProceedingJoinPoint","io.github.resilience4j.timelimiter.TimeLimiter","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.timelimiter.configure.RxJava2TimeLimiterAspectExt"
},
{
  "name":"io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterAspectExt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getTimeLimiterAspectOrder","parameterTypes":[] }, {"name":"setTimeLimiterAspectOrder","parameterTypes":["int"] }]
},
{
  "name":"io.github.resilience4j.spring6.utils.AspectJOnClasspathCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.utils.ReactorOnClasspathCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.spring6.utils.RxJava2OnClasspathCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.AbstractBulkheadConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bulkheadAspect","parameterTypes":["io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties","io.github.resilience4j.bulkhead.ThreadPoolBulkheadRegistry","io.github.resilience4j.bulkhead.BulkheadRegistry","java.util.List","io.github.resilience4j.spring6.fallback.FallbackExecutor","io.github.resilience4j.spring6.spelresolver.SpelResolver"] }, {"name":"bulkheadRegistry","parameterTypes":["io.github.resilience4j.spring6.bulkhead.configure.BulkheadConfigurationProperties","io.github.resilience4j.consumer.EventConsumerRegistry","io.github.resilience4j.core.registry.RegistryEventConsumer","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"bulkheadRegistryEventConsumer","parameterTypes":["java.util.Optional"] }, {"name":"compositeBulkheadCustomizer","parameterTypes":["java.util.List"] }, {"name":"compositeThreadPoolBulkheadCustomizer","parameterTypes":["java.util.List"] }, {"name":"reactorBulkHeadAspectExt","parameterTypes":[] }, {"name":"rxJava2BulkHeadAspectExt","parameterTypes":[] }, {"name":"threadPoolBulkheadRegistry","parameterTypes":["io.github.resilience4j.common.bulkhead.configuration.CommonThreadPoolBulkheadConfigurationProperties","io.github.resilience4j.consumer.EventConsumerRegistry","io.github.resilience4j.core.registry.RegistryEventConsumer","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"threadPoolBulkheadRegistryEventConsumer","parameterTypes":["java.util.Optional"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.AbstractBulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadAutoConfiguration$BulkheadEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.BulkheadProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.autoconfigure.ThreadPoolBulkheadProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint.BulkheadEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.bulkhead.monitoring.endpoint.BulkheadEventsEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"circuitBreakerAspect","parameterTypes":["io.github.resilience4j.circuitbreaker.CircuitBreakerRegistry","java.util.List","io.github.resilience4j.spring6.fallback.FallbackExecutor","io.github.resilience4j.spring6.spelresolver.SpelResolver"] }, {"name":"circuitBreakerRegistry","parameterTypes":["io.github.resilience4j.consumer.EventConsumerRegistry","io.github.resilience4j.core.registry.RegistryEventConsumer","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"circuitBreakerRegistryEventConsumer","parameterTypes":["java.util.Optional"] }, {"name":"compositeCircuitBreakerCustomizer","parameterTypes":["java.util.List"] }, {"name":"reactorCircuitBreakerAspect","parameterTypes":[] }, {"name":"rxJava2CircuitBreakerAspect","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.AbstractCircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerAutoConfiguration$CircuitBreakerEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":["io.github.resilience4j.spring6.circuitbreaker.configure.CircuitBreakerConfigurationProperties"] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakerStreamEventsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.autoconfigure.CircuitBreakersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerEventsEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerHystrixServerSideEvent"
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.monitoring.endpoint.CircuitBreakerServerSideEvent"
},
{
  "name":"io.github.resilience4j.springboot3.circuitbreaker.monitoring.health.CircuitBreakersHealthIndicator"
},
{
  "name":"io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.fallback.autoconfigure.FallbackConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"compositeRateLimiterCustomizer","parameterTypes":["java.util.List"] }, {"name":"rateLimiterAspect","parameterTypes":["io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties","io.github.resilience4j.ratelimiter.RateLimiterRegistry","java.util.List","io.github.resilience4j.spring6.fallback.FallbackExecutor","io.github.resilience4j.spring6.spelresolver.SpelResolver"] }, {"name":"rateLimiterRegistry","parameterTypes":["io.github.resilience4j.spring6.ratelimiter.configure.RateLimiterConfigurationProperties","io.github.resilience4j.consumer.EventConsumerRegistry","io.github.resilience4j.core.registry.RegistryEventConsumer","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"rateLimiterRegistryEventConsumer","parameterTypes":["java.util.Optional"] }, {"name":"reactorRateLimiterAspectExt","parameterTypes":[] }, {"name":"rxJava2RateLimiterAspectExt","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.AbstractRateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterAutoConfiguration$RateLimiterEndpointAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimiterProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.autoconfigure.RateLimitersHealthIndicatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint.RateLimiterEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.monitoring.endpoint.RateLimiterEventsEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.ratelimiter.monitoring.health.RateLimitersHealthIndicator"
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"compositeRetryCustomizer","parameterTypes":["java.util.List"] }, {"name":"reactorRetryAspectExt","parameterTypes":[] }, {"name":"retryAspect","parameterTypes":["io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties","io.github.resilience4j.retry.RetryRegistry","java.util.List","io.github.resilience4j.spring6.fallback.FallbackExecutor","io.github.resilience4j.spring6.spelresolver.SpelResolver","io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"] }, {"name":"retryRegistry","parameterTypes":["io.github.resilience4j.spring6.retry.configure.RetryConfigurationProperties","io.github.resilience4j.consumer.EventConsumerRegistry","io.github.resilience4j.core.registry.RegistryEventConsumer","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"retryRegistryEventConsumer","parameterTypes":["java.util.Optional"] }, {"name":"rxJava2RetryAspectExt","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.AbstractRetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryAutoConfiguration$RetryAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.retry.autoconfigure.RetryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.retry.monitoring.endpoint.RetryEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.retry.monitoring.endpoint.RetryEventsEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.spelresolver.autoconfigure.SpelResolverConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"compositeTimeLimiterCustomizer","parameterTypes":["java.util.List"] }, {"name":"reactorTimeLimiterAspectExt","parameterTypes":[] }, {"name":"rxJava2TimeLimiterAspectExt","parameterTypes":[] }, {"name":"timeLimiterAspect","parameterTypes":["io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties","io.github.resilience4j.timelimiter.TimeLimiterRegistry","java.util.List","io.github.resilience4j.spring6.fallback.FallbackExecutor","io.github.resilience4j.spring6.spelresolver.SpelResolver","io.github.resilience4j.core.ContextAwareScheduledThreadPoolExecutor"] }, {"name":"timeLimiterRegistry","parameterTypes":["io.github.resilience4j.spring6.timelimiter.configure.TimeLimiterConfigurationProperties","io.github.resilience4j.consumer.EventConsumerRegistry","io.github.resilience4j.core.registry.RegistryEventConsumer","io.github.resilience4j.common.CompositeCustomizer"] }, {"name":"timeLimiterRegistryEventConsumer","parameterTypes":["java.util.Optional"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.AbstractTimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterAutoConfiguration$TimeLimiterAutoEndpointConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterConfigurationOnMissingBean$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterMetricsAutoConfiguration$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.autoconfigure.TimeLimiterProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint.TimeLimiterEndpoint"
},
{
  "name":"io.github.resilience4j.springboot3.timelimiter.monitoring.endpoint.TimeLimiterEventsEndpoint"
},
{
  "name":"io.github.resilience4j.timelimiter.TimeLimiter"
},
{
  "name":"io.github.resilience4j.timelimiter.TimeLimiterConfig"
},
{
  "name":"io.github.resilience4j.timelimiter.TimeLimiterConfig$Builder"
},
{
  "name":"io.github.resilience4j.timelimiter.TimeLimiterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.github.resilience4j.timelimiter.annotation.TimeLimiter"
},
{
  "name":"io.github.resilience4j.timelimiter.event.TimeLimiterEvent"
},
{
  "name":"io.github.resilience4j.timelimiter.event.TimeLimiterOnErrorEvent"
},
{
  "name":"io.github.resilience4j.timelimiter.event.TimeLimiterOnSuccessEvent"
},
{
  "name":"io.github.resilience4j.timelimiter.event.TimeLimiterOnTimeoutEvent"
},
{
  "name":"io.lettuce.core.AbstractRedisClient"
},
{
  "name":"io.lettuce.core.ClientOptions"
},
{
  "name":"io.lettuce.core.ClientOptions$Builder"
},
{
  "name":"io.lettuce.core.RedisClient"
},
{
  "name":"io.lettuce.core.RedisCredentialsProvider"
},
{
  "name":"io.lettuce.core.RedisURI"
},
{
  "name":"io.lettuce.core.RedisURI$Builder"
},
{
  "name":"io.lettuce.core.api.StatefulConnection"
},
{
  "name":"io.lettuce.core.api.StatefulRedisConnection"
},
{
  "name":"io.lettuce.core.cluster.ClusterClientOptions"
},
{
  "name":"io.lettuce.core.cluster.RedisClusterClient"
},
{
  "name":"io.lettuce.core.cluster.api.StatefulRedisClusterConnection"
},
{
  "name":"io.lettuce.core.codec.RedisCodec"
},
{
  "name":"io.lettuce.core.event.EventBus"
},
{
  "name":"io.lettuce.core.event.EventPublisherOptions"
},
{
  "name":"io.lettuce.core.metrics.CommandLatencyRecorder"
},
{
  "name":"io.lettuce.core.metrics.MicrometerCommandLatencyRecorder"
},
{
  "name":"io.lettuce.core.metrics.MicrometerOptions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.lettuce.core.metrics.MicrometerOptions$Builder"
},
{
  "name":"io.lettuce.core.resource.ClientResources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.lettuce.core.resource.ClientResources$Builder"
},
{
  "name":"io.lettuce.core.resource.DefaultClientResources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addressResolverGroup","parameterTypes":[] }, {"name":"commandLatencyPublisherOptions","parameterTypes":[] }, {"name":"commandLatencyRecorder","parameterTypes":[] }, {"name":"computationThreadPoolSize","parameterTypes":[] }, {"name":"dnsResolver","parameterTypes":[] }, {"name":"eventBus","parameterTypes":[] }, {"name":"eventExecutorGroup","parameterTypes":[] }, {"name":"eventLoopGroupProvider","parameterTypes":[] }, {"name":"ioThreadPoolSize","parameterTypes":[] }, {"name":"mutate","parameterTypes":[] }, {"name":"nettyCustomizer","parameterTypes":[] }, {"name":"reconnectDelay","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"shutdown","parameterTypes":["long","long","java.util.concurrent.TimeUnit"] }, {"name":"socketAddressResolver","parameterTypes":[] }, {"name":"timer","parameterTypes":[] }, {"name":"tracing","parameterTypes":[] }]
},
{
  "name":"io.lettuce.core.resource.DefaultClientResources$Builder"
},
{
  "name":"io.lettuce.core.resource.Delay"
},
{
  "name":"io.lettuce.core.resource.DnsResolver"
},
{
  "name":"io.lettuce.core.resource.EventLoopGroupProvider"
},
{
  "name":"io.lettuce.core.resource.NettyCustomizer"
},
{
  "name":"io.lettuce.core.resource.SocketAddressResolver"
},
{
  "name":"io.lettuce.core.resource.ThreadFactoryProvider"
},
{
  "name":"io.lettuce.core.tracing.Tracing"
},
{
  "name":"io.micrometer.appoptics.AppOpticsMeterRegistry"
},
{
  "name":"io.micrometer.atlas.AtlasMeterRegistry"
},
{
  "name":"io.micrometer.common.KeyValue"
},
{
  "name":"io.micrometer.common.KeyValues"
},
{
  "name":"io.micrometer.common.lang.NonNull",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.micrometer.common.lang.NonNullApi",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.micrometer.common.lang.NonNullFields",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.micrometer.common.lang.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.annotation.Incubating"
},
{
  "name":"io.micrometer.core.annotation.Timed"
},
{
  "name":"io.micrometer.core.instrument.Clock",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.Counter"
},
{
  "name":"io.micrometer.core.instrument.DistributionSummary"
},
{
  "name":"io.micrometer.core.instrument.FunctionCounter"
},
{
  "name":"io.micrometer.core.instrument.FunctionTimer"
},
{
  "name":"io.micrometer.core.instrument.Gauge"
},
{
  "name":"io.micrometer.core.instrument.HighCardinalityTagsDetector"
},
{
  "name":"io.micrometer.core.instrument.LongTaskTimer"
},
{
  "name":"io.micrometer.core.instrument.Measurement"
},
{
  "name":"io.micrometer.core.instrument.Meter"
},
{
  "name":"io.micrometer.core.instrument.Meter$Id"
},
{
  "name":"io.micrometer.core.instrument.Meter$Type"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"clear","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"config","parameterTypes":[] }, {"name":"counter","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"counter","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"find","parameterTypes":["java.lang.String"] }, {"name":"forEachMeter","parameterTypes":["java.util.function.Consumer"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Number"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Iterable","java.lang.Object","java.util.function.ToDoubleFunction"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Number"] }, {"name":"gauge","parameterTypes":["java.lang.String","java.lang.Object","java.util.function.ToDoubleFunction"] }, {"name":"gaugeCollectionSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Collection"] }, {"name":"gaugeMapSize","parameterTypes":["java.lang.String","java.lang.Iterable","java.util.Map"] }, {"name":"get","parameterTypes":["java.lang.String"] }, {"name":"getMeters","parameterTypes":[] }, {"name":"isClosed","parameterTypes":[] }, {"name":"more","parameterTypes":[] }, {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"remove","parameterTypes":["io.micrometer.core.instrument.Meter"] }, {"name":"removeByPreFilterId","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"summary","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"summary","parameterTypes":["java.lang.String","java.lang.String[]"] }, {"name":"timer","parameterTypes":["java.lang.String","java.lang.Iterable"] }, {"name":"timer","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry$Config"
},
{
  "name":"io.micrometer.core.instrument.MeterRegistry$More"
},
{
  "name":"io.micrometer.core.instrument.Statistic",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"io.micrometer.core.instrument.Tag"
},
{
  "name":"io.micrometer.core.instrument.Tags"
},
{
  "name":"io.micrometer.core.instrument.TimeGauge"
},
{
  "name":"io.micrometer.core.instrument.Timer"
},
{
  "name":"io.micrometer.core.instrument.Timer$Builder"
},
{
  "name":"io.micrometer.core.instrument.binder.MeterBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jetty.JettyServerThreadPoolMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.ExecutorServiceMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaClientMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.kafka.KafkaStreamsMetrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.Log4j2Metrics"
},
{
  "name":"io.micrometer.core.instrument.binder.logging.LogbackMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoCommandTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoConnectionPoolTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"commandFailed","parameterTypes":["com.mongodb.event.CommandFailedEvent"] }, {"name":"commandStarted","parameterTypes":["com.mongodb.event.CommandStartedEvent"] }, {"name":"commandSucceeded","parameterTypes":["com.mongodb.event.CommandSucceededEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"connectionCheckOutFailed","parameterTypes":["com.mongodb.event.ConnectionCheckOutFailedEvent"] }, {"name":"connectionCheckOutStarted","parameterTypes":["com.mongodb.event.ConnectionCheckOutStartedEvent"] }, {"name":"connectionCheckedIn","parameterTypes":["com.mongodb.event.ConnectionCheckedInEvent"] }, {"name":"connectionCheckedOut","parameterTypes":["com.mongodb.event.ConnectionCheckedOutEvent"] }, {"name":"connectionClosed","parameterTypes":["com.mongodb.event.ConnectionClosedEvent"] }, {"name":"connectionCreated","parameterTypes":["com.mongodb.event.ConnectionCreatedEvent"] }, {"name":"connectionPoolClosed","parameterTypes":["com.mongodb.event.ConnectionPoolClosedEvent"] }, {"name":"connectionPoolCreated","parameterTypes":["com.mongodb.event.ConnectionPoolCreatedEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.ProcessorMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.system.UptimeMetrics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.binder.tomcat.TomcatMetrics"
},
{
  "name":"io.micrometer.core.instrument.composite.CompositeMeterRegistry"
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.config.MeterFilterReply"
},
{
  "name":"io.micrometer.core.instrument.config.MeterRegistryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"get","parameterTypes":["java.lang.String"] }, {"name":"requireValid","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.config.NamingConvention"
},
{
  "name":"io.micrometer.core.instrument.config.validate.Validated"
},
{
  "name":"io.micrometer.core.instrument.config.validate.ValidationException"
},
{
  "name":"io.micrometer.core.instrument.distribution.DistributionStatisticConfig"
},
{
  "name":"io.micrometer.core.instrument.distribution.TimeWindowSum"
},
{
  "name":"io.micrometer.core.instrument.distribution.pause.PauseDetector"
},
{
  "name":"io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onEvent","parameterTypes":["io.micrometer.observation.Observation$Event","io.micrometer.observation.Observation$Context"] }, {"name":"onStart","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onStop","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.observation.DefaultMeterObservationHandler$IgnoredMeters"
},
{
  "name":"io.micrometer.core.instrument.observation.MeterObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.core.instrument.search.RequiredSearch"
},
{
  "name":"io.micrometer.core.instrument.search.Search"
},
{
  "name":"io.micrometer.core.instrument.simple.CountingMode"
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"prefix","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"validate","parameterTypes":[] }]
},
{
  "name":"io.micrometer.core.instrument.simple.SimpleMeterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micrometer.datadog.DatadogMeterRegistry"
},
{
  "name":"io.micrometer.dynatrace.DynatraceMeterRegistry"
},
{
  "name":"io.micrometer.elastic.ElasticMeterRegistry"
},
{
  "name":"io.micrometer.ganglia.GangliaMeterRegistry"
},
{
  "name":"io.micrometer.graphite.GraphiteMeterRegistry"
},
{
  "name":"io.micrometer.humio.HumioMeterRegistry"
},
{
  "name":"io.micrometer.influx.InfluxMeterRegistry"
},
{
  "name":"io.micrometer.jmx.JmxMeterRegistry"
},
{
  "name":"io.micrometer.kairos.KairosMeterRegistry"
},
{
  "name":"io.micrometer.newrelic.NewRelicMeterRegistry"
},
{
  "name":"io.micrometer.observation.KeyValuesConvention",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micrometer.observation.Observation"
},
{
  "name":"io.micrometer.observation.Observation$Context"
},
{
  "name":"io.micrometer.observation.Observation$Event"
},
{
  "name":"io.micrometer.observation.Observation$Scope"
},
{
  "name":"io.micrometer.observation.ObservationConvention",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getContextualName","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getHighCardinalityKeyValues","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getLowCardinalityKeyValues","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.observation.ObservationFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micrometer.observation.ObservationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onError","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeClosed","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeOpened","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"onScopeReset","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"io.micrometer.observation.ObservationPredicate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.micrometer.observation.ObservationRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.observation.ObservationRegistry$ObservationConfig"
},
{
  "name":"io.micrometer.observation.annotation.Observed"
},
{
  "name":"io.micrometer.observation.aop.ObservedAspect",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"io.micrometer.prometheus.PrometheusMeterRegistry"
},
{
  "name":"io.micrometer.prometheusmetrics.PrometheusMeterRegistry"
},
{
  "name":"io.micrometer.registry.otlp.OtlpMeterRegistry"
},
{
  "name":"io.micrometer.signalfx.SignalFxMeterRegistry"
},
{
  "name":"io.micrometer.stackdriver.StackdriverMeterRegistry"
},
{
  "name":"io.micrometer.statsd.StatsdMeterRegistry"
},
{
  "name":"io.micrometer.tracing.Tracer"
},
{
  "name":"io.micrometer.tracing.otel.bridge.OtelTracer"
},
{
  "name":"io.netty.buffer.PooledByteBufAllocator"
},
{
  "name":"io.netty.channel.nio.NioEventLoopGroup"
},
{
  "name":"io.netty.channel.socket.SocketChannel"
},
{
  "name":"io.netty.resolver.AddressResolverGroup"
},
{
  "name":"io.netty.util.NettyRuntime"
},
{
  "name":"io.netty.util.Timer"
},
{
  "name":"io.netty.util.concurrent.EventExecutorGroup"
},
{
  "name":"io.netty.util.concurrent.Future"
},
{
  "name":"io.opentelemetry.sdk.OpenTelemetrySdk"
},
{
  "name":"io.r2dbc.pool.ConnectionPool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"create","parameterTypes":[] }, {"name":"dispose","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"isDisposed","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }, {"name":"unwrap","parameterTypes":[] }]
},
{
  "name":"io.r2dbc.pool.ConnectionPoolConfiguration"
},
{
  "name":"io.r2dbc.pool.PoolMetrics"
},
{
  "name":"io.r2dbc.postgresql.codec.Box"
},
{
  "name":"io.r2dbc.postgresql.codec.Circle"
},
{
  "name":"io.r2dbc.postgresql.codec.Interval"
},
{
  "name":"io.r2dbc.postgresql.codec.Json"
},
{
  "name":"io.r2dbc.postgresql.codec.Line"
},
{
  "name":"io.r2dbc.postgresql.codec.Lseg"
},
{
  "name":"io.r2dbc.postgresql.codec.Path"
},
{
  "name":"io.r2dbc.postgresql.codec.Point"
},
{
  "name":"io.r2dbc.postgresql.codec.Polygon"
},
{
  "name":"io.r2dbc.proxy.ProxyConnectionFactory"
},
{
  "name":"io.r2dbc.spi.Closeable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.r2dbc.spi.Connection"
},
{
  "name":"io.r2dbc.spi.ConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"dispose","parameterTypes":[] }]
},
{
  "name":"io.r2dbc.spi.ConnectionFactoryMetadata"
},
{
  "name":"io.r2dbc.spi.ConnectionFactoryOptions"
},
{
  "name":"io.r2dbc.spi.ConnectionFactoryOptions$Builder"
},
{
  "name":"io.r2dbc.spi.IsolationLevel"
},
{
  "name":"io.r2dbc.spi.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.r2dbc.spi.Option"
},
{
  "name":"io.r2dbc.spi.R2dbcException"
},
{
  "name":"io.r2dbc.spi.Readable"
},
{
  "name":"io.r2dbc.spi.Row"
},
{
  "name":"io.r2dbc.spi.RowMetadata"
},
{
  "name":"io.r2dbc.spi.Statement"
},
{
  "name":"io.r2dbc.spi.TransactionDefinition"
},
{
  "name":"io.r2dbc.spi.Wrapped",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"unwrap","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"io.reactivex.Flowable"
},
{
  "name":"io.reactivex.rxjava3.core.Flowable"
},
{
  "name":"io.rsocket.ConnectionSetupPayload"
},
{
  "name":"io.rsocket.RSocket"
},
{
  "name":"io.rsocket.SocketAcceptor"
},
{
  "name":"io.rsocket.core.RSocketServer"
},
{
  "name":"io.rsocket.loadbalance.LoadbalanceStrategy"
},
{
  "name":"io.rsocket.transport.ClientTransport"
},
{
  "name":"io.rsocket.transport.netty.server.TcpServerTransport"
},
{
  "name":"io.smallrye.mutiny.Multi"
},
{
  "name":"io.swagger.v3.core.converter.AnnotatedType"
},
{
  "name":"io.swagger.v3.core.converter.ModelConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"isOpenapi31","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.core.converter.ModelConverterContext"
},
{
  "name":"io.swagger.v3.core.converter.ModelConverters",
  "fields":[{"name":"converters"}]
},
{
  "name":"io.swagger.v3.core.filter.OpenAPISpecFilter"
},
{
  "name":"io.swagger.v3.core.filter.SpecFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"filter","parameterTypes":["io.swagger.v3.oas.models.OpenAPI","io.swagger.v3.core.filter.OpenAPISpecFilter","java.util.Map","java.util.Map","java.util.Map"] }]
},
{
  "name":"io.swagger.v3.core.util.ObjectMapperFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"io.swagger.v3.oas.annotations.ExternalDocumentation",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Hidden",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPI31",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.OpenAPIDefinition"
},
{
  "name":"io.swagger.v3.oas.annotations.Operation",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.annotations.Parameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.Parameters"
},
{
  "name":"io.swagger.v3.oas.annotations.StringToClassMapItem",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.enums.ParameterIn"
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.Extension",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.extensions.ExtensionProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.headers.Header",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.links.Link",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.links.LinkParameter",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.ArraySchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Content",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DependentRequired",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DependentSchema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.DiscriminatorMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Encoding",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.ExampleObject",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.Schema",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.media.SchemaProperty",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.parameters.RequestBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponse",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.annotations.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlow"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthFlows"
},
{
  "name":"io.swagger.v3.oas.annotations.security.OAuthScope"
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityRequirement",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.annotations.servers.Server",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.servers.ServerVariable",
  "queryAllDeclaredMethods":true
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tag",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.annotations.tags.Tags"
},
{
  "name":"io.swagger.v3.oas.models.Components"
},
{
  "name":"io.swagger.v3.oas.models.ExternalDocumentation"
},
{
  "name":"io.swagger.v3.oas.models.OpenAPI",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"io.swagger.v3.oas.models.Operation"
},
{
  "name":"io.swagger.v3.oas.models.PathItem"
},
{
  "name":"io.swagger.v3.oas.models.Paths"
},
{
  "name":"io.swagger.v3.oas.models.SpecVersion"
},
{
  "name":"io.swagger.v3.oas.models.examples.Example"
},
{
  "name":"io.swagger.v3.oas.models.info.Info"
},
{
  "name":"io.swagger.v3.oas.models.media.ComposedSchema"
},
{
  "name":"io.swagger.v3.oas.models.media.Content"
},
{
  "name":"io.swagger.v3.oas.models.media.MediaType"
},
{
  "name":"io.swagger.v3.oas.models.media.Schema"
},
{
  "name":"io.swagger.v3.oas.models.parameters.Parameter"
},
{
  "name":"io.swagger.v3.oas.models.parameters.RequestBody"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponse"
},
{
  "name":"io.swagger.v3.oas.models.responses.ApiResponses"
},
{
  "name":"io.swagger.v3.oas.models.security.Scopes"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityRequirement"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme$In"
},
{
  "name":"io.swagger.v3.oas.models.security.SecurityScheme$Type"
},
{
  "name":"io.swagger.v3.oas.models.servers.Server"
},
{
  "name":"io.swagger.v3.oas.models.tags.Tag"
},
{
  "name":"io.undertow.Undertow"
},
{
  "name":"io.undertow.Undertow$ListenerConfig"
},
{
  "name":"io.undertow.protocols.ssl.UndertowAcceptingSslChannel"
},
{
  "name":"io.undertow.websockets.WebSocketProtocolHandshakeHandler"
},
{
  "name":"io.vavr.control.Option"
},
{
  "name":"io.vavr.control.Try"
},
{
  "name":"jakarta.activation.MimeType"
},
{
  "name":"jakarta.annotation.ManagedBean"
},
{
  "name":"jakarta.annotation.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.annotation.PostConstruct"
},
{
  "name":"jakarta.annotation.PreDestroy"
},
{
  "name":"jakarta.annotation.Resource"
},
{
  "name":"jakarta.ejb.EJB"
},
{
  "name":"jakarta.ejb.TransactionAttribute"
},
{
  "name":"jakarta.inject.Inject",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.inject.Named"
},
{
  "name":"jakarta.inject.Provider"
},
{
  "name":"jakarta.inject.Qualifier"
},
{
  "name":"jakarta.inject.Scope",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.inject.Singleton",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"jakarta.jms.ConnectionFactory"
},
{
  "name":"jakarta.jms.Message"
},
{
  "name":"jakarta.json.bind.Jsonb"
},
{
  "name":"jakarta.mail.internet.MimeMessage"
},
{
  "name":"jakarta.persistence.EntityManager"
},
{
  "name":"jakarta.persistence.EntityManagerFactory"
},
{
  "name":"jakarta.persistence.Persistence"
},
{
  "name":"jakarta.servlet.Filter"
},
{
  "name":"jakarta.servlet.MultipartConfigElement"
},
{
  "name":"jakarta.servlet.Servlet"
},
{
  "name":"jakarta.servlet.ServletRegistration"
},
{
  "name":"jakarta.servlet.ServletRequest"
},
{
  "name":"jakarta.transaction.Transaction"
},
{
  "name":"jakarta.transaction.TransactionManager"
},
{
  "name":"jakarta.transaction.Transactional"
},
{
  "name":"jakarta.validation.ClockProvider"
},
{
  "name":"jakarta.validation.Configuration"
},
{
  "name":"jakarta.validation.Constraint",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.ConstraintValidatorFactory"
},
{
  "name":"jakarta.validation.ConstraintViolation"
},
{
  "name":"jakarta.validation.MessageInterpolator"
},
{
  "name":"jakarta.validation.ParameterNameProvider"
},
{
  "name":"jakarta.validation.TraversableResolver"
},
{
  "name":"jakarta.validation.Validation"
},
{
  "name":"jakarta.validation.ValidationProviderResolver"
},
{
  "name":"jakarta.validation.Validator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"jakarta.validation.ValidatorContext"
},
{
  "name":"jakarta.validation.ValidatorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"jakarta.validation.constraints.Max",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.constraints.Min",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.constraints.NotBlank",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.constraints.Pattern",
  "queryAllDeclaredMethods":true
},
{
  "name":"jakarta.validation.executable.ExecutableValidator"
},
{
  "name":"jakarta.validation.metadata.BeanDescriptor"
},
{
  "name":"jakarta.validation.metadata.ConstraintDescriptor"
},
{
  "name":"jakarta.xml.bind.Binder"
},
{
  "name":"java.io.Closeable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"java.io.Console",
  "methods":[{"name":"isTerminal","parameterTypes":[] }]
},
{
  "name":"java.io.DataInput"
},
{
  "name":"java.io.DataOutput"
},
{
  "name":"java.io.File"
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.io.IOException"
},
{
  "name":"java.io.InputStream"
},
{
  "name":"java.io.ObjectInputStream"
},
{
  "name":"java.io.ObjectOutputStream"
},
{
  "name":"java.io.OutputStream"
},
{
  "name":"java.io.Reader"
},
{
  "name":"java.io.Serializable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.io.Writer"
},
{
  "name":"java.lang.Appendable"
},
{
  "name":"java.lang.AutoCloseable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"java.lang.Boolean",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"toboolean","parameterTypes":[] }]
},
{
  "name":"java.lang.CharSequence",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.Class",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String"] }, {"name":"from","parameterTypes":["java.lang.String"] }, {"name":"getModule","parameterTypes":[] }, {"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.lang.ClassLoader",
  "methods":[{"name":"defineClass","parameterTypes":["java.lang.String","byte[]","int","int","java.security.ProtectionDomain"] }]
},
{
  "name":"java.lang.ClassNotFoundException"
},
{
  "name":"java.lang.CloneNotSupportedException"
},
{
  "name":"java.lang.Comparable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.Deprecated"
},
{
  "name":"java.lang.Double"
},
{
  "name":"java.lang.Enum",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Enum$EnumDesc",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.Exception"
},
{
  "name":"java.lang.FunctionalInterface"
},
{
  "name":"java.lang.IllegalAccessException"
},
{
  "name":"java.lang.IllegalArgumentException"
},
{
  "name":"java.lang.IllegalStateException"
},
{
  "name":"java.lang.Integer"
},
{
  "name":"java.lang.InterruptedException"
},
{
  "name":"java.lang.Iterable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, {"name":"iterator","parameterTypes":[] }, {"name":"spliterator","parameterTypes":[] }]
},
{
  "name":"java.lang.Long",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.Long$LongCache",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.Module",
  "methods":[{"name":"isNamed","parameterTypes":[] }]
},
{
  "name":"java.lang.NoSuchMethodException"
},
{
  "name":"java.lang.Number",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"java.lang.Package"
},
{
  "name":"java.lang.Record",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.Runnable"
},
{
  "name":"java.lang.RuntimeException"
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.lang.SafeVarargs"
},
{
  "name":"java.lang.SecurityException"
},
{
  "name":"java.lang.String",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.String$CaseInsensitiveComparator",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.StringBuilder"
},
{
  "name":"java.lang.Thread",
  "fields":[{"name":"threadLocalRandomProbe"}]
},
{
  "name":"java.lang.Thread$State"
},
{
  "name":"java.lang.ThreadGroup"
},
{
  "name":"java.lang.Throwable"
},
{
  "name":"java.lang.Void",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.annotation.Annotation",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.annotation.Documented",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Inherited",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Repeatable",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Retention",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.annotation.Target",
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.constant.Constable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.lang.constant.ConstantDesc",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.constant.DynamicConstantDesc",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.constant.DynamicConstantDesc$AnonymousDynamicConstantDesc",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.constant.DynamicConstantDesc$CanonicalMapHolder",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.lang.invoke.SerializedLambda"
},
{
  "name":"java.lang.management.MemoryPoolMXBean"
},
{
  "name":"java.lang.management.OperatingSystemMXBean"
},
{
  "name":"java.lang.management.ThreadInfo"
},
{
  "name":"java.lang.management.ThreadMXBean"
},
{
  "name":"java.lang.reflect.AccessibleObject"
},
{
  "name":"java.lang.reflect.AnnotatedElement"
},
{
  "name":"java.lang.reflect.Constructor"
},
{
  "name":"java.lang.reflect.Field"
},
{
  "name":"java.lang.reflect.GenericArrayType",
  "methods":[{"name":"getGenericComponentType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.GenericDeclaration"
},
{
  "name":"java.lang.reflect.Method"
},
{
  "name":"java.lang.reflect.ParameterizedType",
  "methods":[{"name":"getActualTypeArguments","parameterTypes":[] }, {"name":"getOwnerType","parameterTypes":[] }, {"name":"getRawType","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.Type"
},
{
  "name":"java.lang.reflect.TypeVariable",
  "methods":[{"name":"getBounds","parameterTypes":[] }]
},
{
  "name":"java.lang.reflect.WildcardType",
  "methods":[{"name":"getLowerBounds","parameterTypes":[] }, {"name":"getUpperBounds","parameterTypes":[] }]
},
{
  "name":"java.net.InetAddress"
},
{
  "name":"java.net.InetSocketAddress"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketAddress"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URI"
},
{
  "name":"java.net.URL"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.net.http.HttpClient"
},
{
  "name":"java.nio.ByteBuffer"
},
{
  "name":"java.nio.charset.Charset"
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.GeneralSecurityException"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Date"
},
{
  "name":"java.sql.Timestamp"
},
{
  "name":"java.text.DateFormat"
},
{
  "name":"java.time.Duration"
},
{
  "name":"java.time.Instant"
},
{
  "name":"java.util.ArrayList"
},
{
  "name":"java.util.Collection",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.Comparator",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.Date"
},
{
  "name":"java.util.EnumMap"
},
{
  "name":"java.util.EventListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.Iterator"
},
{
  "name":"java.util.LinkedHashMap"
},
{
  "name":"java.util.List"
},
{
  "name":"java.util.Locale"
},
{
  "name":"java.util.Map",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"putIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"java.util.Map$Entry",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.Optional",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.Properties"
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"java.util.ResourceBundle"
},
{
  "name":"java.util.ServiceLoader"
},
{
  "name":"java.util.Set"
},
{
  "name":"java.util.Spliterator"
},
{
  "name":"java.util.TimeZone"
},
{
  "name":"java.util.TreeMap"
},
{
  "name":"java.util.UUID"
},
{
  "name":"java.util.concurrent.BlockingQueue"
},
{
  "name":"java.util.concurrent.Callable"
},
{
  "name":"java.util.concurrent.CompletableFuture"
},
{
  "name":"java.util.concurrent.CompletionStage"
},
{
  "name":"java.util.concurrent.CountDownLatch"
},
{
  "name":"java.util.concurrent.Executor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.concurrent.ExecutorService"
},
{
  "name":"java.util.concurrent.Future"
},
{
  "name":"java.util.concurrent.RejectedExecutionHandler"
},
{
  "name":"java.util.concurrent.ThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"java.util.concurrent.ThreadPoolExecutor"
},
{
  "name":"java.util.concurrent.TimeUnit"
},
{
  "name":"java.util.concurrent.TimeoutException"
},
{
  "name":"java.util.concurrent.atomic.AtomicBoolean",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.AtomicInteger"
},
{
  "name":"java.util.concurrent.atomic.AtomicLong"
},
{
  "name":"java.util.concurrent.atomic.AtomicReference",
  "fields":[{"name":"value"}]
},
{
  "name":"java.util.concurrent.atomic.Striped64",
  "fields":[{"name":"base"}, {"name":"cellsBusy"}]
},
{
  "name":"java.util.function.BiConsumer"
},
{
  "name":"java.util.function.BiFunction"
},
{
  "name":"java.util.function.BiPredicate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"and","parameterTypes":["java.util.function.BiPredicate"] }, {"name":"negate","parameterTypes":[] }, {"name":"or","parameterTypes":["java.util.function.BiPredicate"] }]
},
{
  "name":"java.util.function.Consumer",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.function.Function",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.IntFunction",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.Predicate"
},
{
  "name":"java.util.function.Supplier",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"java.util.function.ToDoubleFunction"
},
{
  "name":"java.util.function.ToLongFunction"
},
{
  "name":"java.util.logging.Filter"
},
{
  "name":"java.util.logging.Handler"
},
{
  "name":"java.util.logging.Level"
},
{
  "name":"java.util.logging.LogManager"
},
{
  "name":"java.util.logging.LogManager$LoggerWeakRef"
},
{
  "name":"java.util.logging.LogRecord"
},
{
  "name":"java.util.logging.Logger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"java.util.logging.Logger$LoggerBundle"
},
{
  "name":"java.util.regex.Pattern"
},
{
  "name":"java.util.stream.BaseStream",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.stream.Stream",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"java.util.stream.Stream$Builder",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"javafx.beans.value.ObservableValue"
},
{
  "name":"javax.annotation.ManagedBean"
},
{
  "name":"javax.annotation.PostConstruct"
},
{
  "name":"javax.annotation.PreDestroy"
},
{
  "name":"javax.annotation.Resource"
},
{
  "name":"javax.cache.CacheManager"
},
{
  "name":"javax.cache.Caching"
},
{
  "name":"javax.inject.Inject"
},
{
  "name":"javax.inject.Named"
},
{
  "name":"javax.inject.Qualifier"
},
{
  "name":"javax.management.MBeanServer"
},
{
  "name":"javax.management.MalformedObjectNameException"
},
{
  "name":"javax.management.Notification"
},
{
  "name":"javax.management.NotificationEmitter"
},
{
  "name":"javax.management.NotificationListener"
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.money.MonetaryAmount"
},
{
  "name":"javax.naming.InitialContext"
},
{
  "name":"javax.naming.ldap.LdapContext"
},
{
  "name":"javax.net.ssl.HostnameVerifier"
},
{
  "name":"javax.net.ssl.SSLContext"
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"javax.sql.DataSource"
},
{
  "name":"jdk.crac.management.CRaCMXBean"
},
{
  "name":"jdk.internal.reflect.CallerSensitive"
},
{
  "name":"jdk.internal.vm.annotation.IntrinsicCandidate"
},
{
  "name":"kotlin.Metadata"
},
{
  "name":"kotlin.coroutines.Continuation"
},
{
  "name":"kotlinx.coroutines.flow.Flow"
},
{
  "name":"kotlinx.coroutines.reactor.MonoKt"
},
{
  "name":"kotlinx.serialization.cbor.Cbor"
},
{
  "name":"kotlinx.serialization.json.Json"
},
{
  "name":"kotlinx.serialization.protobuf.ProtoBuf"
},
{
  "name":"liquibase.change.DatabaseChange"
},
{
  "name":"liquibase.integration.spring.SpringLiquibase"
},
{
  "name":"okhttp3.OkHttpClient"
},
{
  "name":"oracle.jdbc.OracleConnection"
},
{
  "name":"oracle.jdbc.datasource.OracleDataSource"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSource"
},
{
  "name":"oracle.ucp.jdbc.PoolDataSourceImpl"
},
{
  "name":"org.aopalliance.aop.Advice",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.aopalliance.intercept.Interceptor",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.aopalliance.intercept.Invocation",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.aopalliance.intercept.Joinpoint",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.aopalliance.intercept.MethodInterceptor",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.aopalliance.intercept.MethodInvocation",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.avro.specific.AvroGenerated"
},
{
  "name":"org.apache.catalina.Manager"
},
{
  "name":"org.apache.catalina.startup.Tomcat"
},
{
  "name":"org.apache.commons.dbcp2.BasicDataSource"
},
{
  "name":"org.apache.commons.logging.Log"
},
{
  "name":"org.apache.commons.pool2.impl.GenericObjectPool"
},
{
  "name":"org.apache.coyote.UpgradeProtocol"
},
{
  "name":"org.apache.derby.jdbc.EmbeddedDriver"
},
{
  "name":"org.apache.el.ExpressionFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.hc.client5.http.impl.async.HttpAsyncClients"
},
{
  "name":"org.apache.hc.client5.http.impl.classic.HttpClients"
},
{
  "name":"org.apache.hc.core5.http.nio.AsyncRequestProducer"
},
{
  "name":"org.apache.hc.core5.reactive.ReactiveResponseConsumer"
},
{
  "name":"org.apache.kafka.clients.admin.AdminClient"
},
{
  "name":"org.apache.kafka.clients.admin.DescribeTopicsResult"
},
{
  "name":"org.apache.kafka.clients.admin.NewTopic"
},
{
  "name":"org.apache.kafka.clients.admin.TopicDescription"
},
{
  "name":"org.apache.kafka.clients.consumer.Consumer"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerGroupMetadata"
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerRecord",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.apache.kafka.clients.consumer.ConsumerRecords"
},
{
  "name":"org.apache.kafka.clients.producer.Callback"
},
{
  "name":"org.apache.kafka.clients.producer.Producer"
},
{
  "name":"org.apache.kafka.clients.producer.ProducerInterceptor"
},
{
  "name":"org.apache.kafka.clients.producer.ProducerRecord"
},
{
  "name":"org.apache.kafka.clients.producer.RecordMetadata"
},
{
  "name":"org.apache.kafka.common.KafkaFuture"
},
{
  "name":"org.apache.kafka.common.TopicPartition"
},
{
  "name":"org.apache.kafka.common.config.ConfigResource"
},
{
  "name":"org.apache.kafka.common.serialization.Deserializer"
},
{
  "name":"org.apache.kafka.common.serialization.Serializer"
},
{
  "name":"org.apache.kafka.streams.StreamsBuilder"
},
{
  "name":"org.apache.kafka.streams.processor.internals.assignment.FallbackPriorTaskAssignor"
},
{
  "name":"org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor"
},
{
  "name":"org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$InMemoryDslStoreSuppliers"
},
{
  "name":"org.apache.kafka.streams.state.BuiltInDslStoreSuppliers$RocksDBDslStoreSuppliers"
},
{
  "name":"org.apache.logging.log4j.core.LoggerContext"
},
{
  "name":"org.apache.logging.log4j.core.impl.Log4jContextFactory"
},
{
  "name":"org.apache.logging.log4j.spi.ExtendedLogger"
},
{
  "name":"org.apache.logging.slf4j.SLF4JProvider"
},
{
  "name":"org.apache.pulsar.client.api.PulsarClient"
},
{
  "name":"org.apache.tomcat.jdbc.pool.DataSource"
},
{
  "name":"org.apache.tomcat.websocket.server.WsHttpUpgradeHandler"
},
{
  "name":"org.aspectj.lang.ProceedingJoinPoint"
},
{
  "name":"org.aspectj.lang.annotation.Around",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.aspectj.lang.annotation.Aspect",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.aspectj.lang.annotation.Pointcut",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.Advice"
},
{
  "name":"org.aspectj.weaver.reflect.Java15AnnotationFinder",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider",
  "methods":[{"name":"<init>","parameterTypes":["org.aspectj.weaver.World"] }]
},
{
  "name":"org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.aspectj.weaver.tools.Jdk14TraceFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.bson.Document"
},
{
  "name":"org.bson.UuidRepresentation"
},
{
  "name":"org.bson.codecs.configuration.CodecRegistry"
},
{
  "name":"org.bson.conversions.Bson"
},
{
  "name":"org.bson.types.ObjectId"
},
{
  "name":"org.cache2k.Cache2kBuilder"
},
{
  "name":"org.cache2k.extra.micrometer.Cache2kCacheMetrics"
},
{
  "name":"org.cache2k.extra.spring.SpringCache2kCache"
},
{
  "name":"org.crac.Resource"
},
{
  "name":"org.eclipse.collections.api.list.ImmutableList"
},
{
  "name":"org.eclipse.core.runtime.FileLocator"
},
{
  "name":"org.eclipse.jetty.client.HttpClient"
},
{
  "name":"org.eclipse.jetty.ee10.servlet.ServletHolder"
},
{
  "name":"org.eclipse.jetty.ee10.webapp.WebAppContext"
},
{
  "name":"org.eclipse.jetty.ee10.websocket.server.JettyWebSocketServerContainer"
},
{
  "name":"org.eclipse.jetty.server.Server"
},
{
  "name":"org.eclipse.jetty.util.Loader"
},
{
  "name":"org.elasticsearch.client.RestClient"
},
{
  "name":"org.elasticsearch.client.RestClientBuilder"
},
{
  "name":"org.flywaydb.core.Flyway"
},
{
  "name":"org.glassfish.jersey.client.JerseyClient"
},
{
  "name":"org.glassfish.jersey.micrometer.server.ObservationApplicationEventListener"
},
{
  "name":"org.glassfish.jersey.server.ResourceConfig"
},
{
  "name":"org.glassfish.jersey.servlet.ServletContainer"
},
{
  "name":"org.h2.Driver"
},
{
  "name":"org.h2.jdbcx.JdbcDataSource"
},
{
  "name":"org.h2.server.web.JakartaWebServlet"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger",
  "methods":[{"name":"<init>","parameterTypes":["org.jboss.logging.Logger"] }]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_es"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Log_$logger_es_ES"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle",
  "fields":[{"name":"INSTANCE"}]
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_es"
},
{
  "name":"org.hibernate.validator.internal.util.logging.Messages_$bundle_es_ES"
},
{
  "name":"org.hsqldb.jdbc.JDBCDriver"
},
{
  "name":"org.infinispan.spring.embedded.provider.SpringEmbeddedCacheManager"
},
{
  "name":"org.influxdb.InfluxDB"
},
{
  "name":"org.jboss.logging.Logger"
},
{
  "name":"org.joda.time.ReadableInstant"
},
{
  "name":"org.jooq.DSLContext"
},
{
  "name":"org.locationtech.jts.geom.Geometry"
},
{
  "name":"org.neo4j.driver.Driver"
},
{
  "name":"org.postgresql.ds.PGSimpleDataSource"
},
{
  "name":"org.quartz.Scheduler"
},
{
  "name":"org.quartz.impl.StdSchedulerFactory"
},
{
  "name":"org.reactivestreams.Publisher",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.reactivestreams.Subscriber",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.reactivestreams.Subscription",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.slf4j.Logger"
},
{
  "name":"org.slf4j.LoggerFactory"
},
{
  "name":"org.slf4j.bridge.SLF4JBridgeHandler"
},
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.api.AbstractOpenApiResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.api.AbstractOpenApiResource$ConditionType"
},
{
  "name":"org.springdoc.api.ErrorMessage",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.api.OpenApiResourceNotFoundException"
},
{
  "name":"org.springdoc.core.annotations.RouterOperation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springdoc.core.annotations.RouterOperations",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.CacheOrGroupedOpenApiCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.MultipleOpenApiGroupsCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.MultipleOpenApiSupportCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.conditions.SpecPropertiesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$OpenApiResourceAdvice",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$QuerydslProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$SpringDocSpringDataWebPropertiesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$SpringDocWebFluxSupportConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocConfiguration$WebConversionServiceConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocPageableConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocSortConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.configuration.SpringDocUIConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.hints.SpringDocHints",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.configuration.hints.SpringDocSecurityHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.AdditionalModelsConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.FileSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.ModelConverterRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PageOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PageableOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PolymorphicModelConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.PropertyCustomizingConverter"
},
{
  "name":"org.springdoc.core.converters.ResponseSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.SchemaPropertyDeprecatingConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.SortOpenAPIConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.converters.WebFluxSupportConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolve","parameterTypes":["io.swagger.v3.core.converter.AnnotatedType","io.swagger.v3.core.converter.ModelConverterContext","java.util.Iterator"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.customizers.DelegatingMethodParameterCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.customizers.GlobalOpenApiCustomizer"
},
{
  "name":"org.springdoc.core.customizers.GlobalOperationCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.customizers.OpenApiBuilderCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OpenApiCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OpenApiLocaleCustomizer"
},
{
  "name":"org.springdoc.core.customizers.OperationCustomizer",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springdoc.core.customizers.PropertyCustomizer"
},
{
  "name":"org.springdoc.core.customizers.QuerydslPredicateOperationCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["io.swagger.v3.oas.models.Operation","org.springframework.web.method.HandlerMethod"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.customizers.SpringDocCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.discoverer.SpringDocParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getParameterNames","parameterTypes":["java.lang.reflect.Method"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.filters.OpenApiMethodFilter"
},
{
  "name":"org.springdoc.core.fn.AbstractRouterFunctionVisitor"
},
{
  "name":"org.springdoc.core.fn.RouterFunctionData"
},
{
  "name":"org.springdoc.core.fn.RouterOperation"
},
{
  "name":"org.springdoc.core.models.ControllerAdviceInfo"
},
{
  "name":"org.springdoc.core.models.GroupedOpenApi"
},
{
  "name":"org.springdoc.core.models.MethodAttributes"
},
{
  "name":"org.springdoc.core.models.ParameterId"
},
{
  "name":"org.springdoc.core.models.ParameterInfo"
},
{
  "name":"org.springdoc.core.models.RequestBodyInfo"
},
{
  "name":"org.springdoc.core.parsers.ReturnTypeParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getConfigUrl","parameterTypes":[] }, {"name":"getDeepLinking","parameterTypes":[] }, {"name":"getDefaultModelExpandDepth","parameterTypes":[] }, {"name":"getDefaultModelRendering","parameterTypes":[] }, {"name":"getDefaultModelsExpandDepth","parameterTypes":[] }, {"name":"getDisplayOperationId","parameterTypes":[] }, {"name":"getDisplayRequestDuration","parameterTypes":[] }, {"name":"getDocExpansion","parameterTypes":[] }, {"name":"getFilter","parameterTypes":[] }, {"name":"getGroupsOrder","parameterTypes":[] }, {"name":"getLayout","parameterTypes":[] }, {"name":"getMaxDisplayedTags","parameterTypes":[] }, {"name":"getOauth2RedirectUrl","parameterTypes":[] }, {"name":"getOperationsSorter","parameterTypes":[] }, {"name":"getPath","parameterTypes":[] }, {"name":"getPersistAuthorization","parameterTypes":[] }, {"name":"getQueryConfigEnabled","parameterTypes":[] }, {"name":"getShowCommonExtensions","parameterTypes":[] }, {"name":"getShowExtensions","parameterTypes":[] }, {"name":"getSupportedSubmitMethods","parameterTypes":[] }, {"name":"getTagsSorter","parameterTypes":[] }, {"name":"getTryItOutEnabled","parameterTypes":[] }, {"name":"getUrl","parameterTypes":[] }, {"name":"getUrls","parameterTypes":[] }, {"name":"getUrlsPrimaryName","parameterTypes":[] }, {"name":"getValidatorUrl","parameterTypes":[] }, {"name":"getWithCredentials","parameterTypes":[] }, {"name":"setConfigUrl","parameterTypes":["java.lang.String"] }, {"name":"setDeepLinking","parameterTypes":["java.lang.Boolean"] }, {"name":"setDefaultModelExpandDepth","parameterTypes":["java.lang.Integer"] }, {"name":"setDefaultModelRendering","parameterTypes":["java.lang.String"] }, {"name":"setDefaultModelsExpandDepth","parameterTypes":["java.lang.Integer"] }, {"name":"setDisplayOperationId","parameterTypes":["java.lang.Boolean"] }, {"name":"setDisplayRequestDuration","parameterTypes":["java.lang.Boolean"] }, {"name":"setDocExpansion","parameterTypes":["java.lang.String"] }, {"name":"setFilter","parameterTypes":["java.lang.String"] }, {"name":"setGroupsOrder","parameterTypes":["org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction"] }, {"name":"setLayout","parameterTypes":["java.lang.String"] }, {"name":"setMaxDisplayedTags","parameterTypes":["java.lang.Integer"] }, {"name":"setOauth2RedirectUrl","parameterTypes":["java.lang.String"] }, {"name":"setOperationsSorter","parameterTypes":["java.lang.String"] }, {"name":"setPath","parameterTypes":["java.lang.String"] }, {"name":"setPersistAuthorization","parameterTypes":["java.lang.Boolean"] }, {"name":"setQueryConfigEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setShowCommonExtensions","parameterTypes":["java.lang.Boolean"] }, {"name":"setShowExtensions","parameterTypes":["java.lang.Boolean"] }, {"name":"setSupportedSubmitMethods","parameterTypes":["java.util.List"] }, {"name":"setTagsSorter","parameterTypes":["java.lang.String"] }, {"name":"setTryItOutEnabled","parameterTypes":["java.lang.Boolean"] }, {"name":"setUrl","parameterTypes":["java.lang.String"] }, {"name":"setUrls","parameterTypes":["java.util.Set"] }, {"name":"setUrlsPrimaryName","parameterTypes":["java.lang.String"] }, {"name":"setValidatorUrl","parameterTypes":["java.lang.String"] }, {"name":"setWithCredentials","parameterTypes":["java.lang.Boolean"] }]
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$Direction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.AbstractSwaggerUiConfigProperties$SwaggerUrl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ApiDocs$OpenApiVersion",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Cache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$GroupConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Groups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$DeprecatingConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PageableConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$ModelConverters$PolymorphicConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$SortConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SpringDocConfigProperties$Webjars",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigParameters",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties$Csrf",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SwaggerUiConfigProperties$SyntaxHighlight",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.properties.SwaggerUiOAuthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.core.providers.ActuatorProvider"
},
{
  "name":"org.springdoc.core.providers.CloudFunctionProvider"
},
{
  "name":"org.springdoc.core.providers.JavadocProvider"
},
{
  "name":"org.springdoc.core.providers.ObjectMapperProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.SpringDataWebPropertiesProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.SpringDocProviders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.SpringWebProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.providers.WebConversionServiceProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.AbstractRequestService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"applyBeanValidatorAnnotations","parameterTypes":["io.swagger.v3.oas.models.parameters.Parameter","java.util.List"] }, {"name":"applyBeanValidatorAnnotations","parameterTypes":["io.swagger.v3.oas.models.parameters.RequestBody","java.util.List","boolean"] }, {"name":"build","parameterTypes":["org.springframework.web.method.HandlerMethod","org.springframework.web.bind.annotation.RequestMethod","io.swagger.v3.oas.models.Operation","org.springdoc.core.models.MethodAttributes","io.swagger.v3.oas.models.OpenAPI"] }, {"name":"buildParam","parameterTypes":["org.springdoc.core.models.ParameterInfo","io.swagger.v3.oas.models.Components","com.fasterxml.jackson.annotation.JsonView"] }, {"name":"buildParams","parameterTypes":["org.springdoc.core.models.ParameterInfo","io.swagger.v3.oas.models.Components","org.springframework.web.bind.annotation.RequestMethod","org.springdoc.core.models.MethodAttributes","java.lang.String"] }, {"name":"getRequestBodyBuilder","parameterTypes":[] }, {"name":"isDefaultFlatParamObject","parameterTypes":[] }, {"name":"isParamToIgnore","parameterTypes":["org.springframework.core.MethodParameter"] }, {"name":"isValidParameter","parameterTypes":["io.swagger.v3.oas.models.parameters.Parameter"] }]
},
{
  "name":"org.springdoc.core.service.GenericParameterService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.GenericResponseService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.OpenAPIService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.OperationService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.RequestBodyService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.service.SecurityService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.core.utils.PropertyResolverUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.ui.AbstractSwaggerResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.ui.AbstractSwaggerWelcome",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.webflux.api.OpenApiActuatorResource"
},
{
  "name":"org.springdoc.webflux.api.OpenApiResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.webflux.api.OpenApiWebfluxResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webflux.core.configuration.SpringDocWebFluxConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.webflux.core.configuration.SpringDocWebFluxConfiguration$SpringDocWebFluxActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.webflux.core.service.RequestService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webflux.ui.SwaggerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.webflux.ui.SwaggerConfigResource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webflux.ui.SwaggerIndexTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webflux.ui.SwaggerResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveResource","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.String","java.util.List","org.springframework.web.reactive.resource.ResourceResolverChain"] }, {"name":"resolveUrlPath","parameterTypes":["java.lang.String","java.util.List","org.springframework.web.reactive.resource.ResourceResolverChain"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webflux.ui.SwaggerUiHome"
},
{
  "name":"org.springdoc.webflux.ui.SwaggerWebFluxConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springdoc.webflux.ui.SwaggerWelcomeCommon",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springdoc.webflux.ui.SwaggerWelcomeWebFlux",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.amqp.rabbit.core.RabbitTemplate"
},
{
  "name":"org.springframework.aop.Advisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"isPerInstance","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.ClassFilter"
},
{
  "name":"org.springframework.aop.Pointcut"
},
{
  "name":"org.springframework.aop.PointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.aop.SpringProxy",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.TargetClassAware",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.TargetSource"
},
{
  "name":"org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.annotation.AspectJAdvisorBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory"
},
{
  "name":"org.springframework.aop.aspectj.annotation.AspectJBeanFactoryInitializationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setBeforeExistingAdvisors","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.aop.framework.Advised",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aop.framework.AopInfrastructureBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.aop.framework.ProxyConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"copyFrom","parameterTypes":["org.springframework.aop.framework.ProxyConfig"] }, {"name":"isExposeProxy","parameterTypes":[] }, {"name":"isFrozen","parameterTypes":[] }, {"name":"isOpaque","parameterTypes":[] }, {"name":"isOptimize","parameterTypes":[] }, {"name":"isProxyTargetClass","parameterTypes":[] }, {"name":"setExposeProxy","parameterTypes":["boolean"] }, {"name":"setFrozen","parameterTypes":["boolean"] }, {"name":"setOpaque","parameterTypes":["boolean"] }, {"name":"setOptimize","parameterTypes":["boolean"] }, {"name":"setProxyTargetClass","parameterTypes":["boolean"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.framework.ProxyFactory"
},
{
  "name":"org.springframework.aop.framework.ProxyProcessorSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setProxyClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"isFrozen","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"setAdvisorAdapterRegistry","parameterTypes":["org.springframework.aop.framework.adapter.AdvisorAdapterRegistry"] }, {"name":"setApplyCommonInterceptorsFirst","parameterTypes":["boolean"] }, {"name":"setCustomTargetSourceCreators","parameterTypes":["org.springframework.aop.framework.autoproxy.TargetSourceCreator[]"] }, {"name":"setFrozen","parameterTypes":["boolean"] }, {"name":"setInterceptorNames","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.aop.framework.autoproxy.TargetSourceCreator"
},
{
  "name":"org.springframework.aop.scope.ScopedProxyBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAdvice","parameterTypes":[] }, {"name":"getAdviceBeanName","parameterTypes":[] }, {"name":"setAdvice","parameterTypes":["org.aopalliance.aop.Advice"] }, {"name":"setAdviceBeanName","parameterTypes":["java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.aop.support.AbstractPointcutAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.aot.generate.GenerationContext"
},
{
  "name":"org.springframework.aot.hint.RuntimeHints"
},
{
  "name":"org.springframework.aot.hint.annotation.Reflective",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.ReflectiveRuntimeHintsRegistrar"
},
{
  "name":"org.springframework.aot.hint.annotation.RegisterReflectionForBinding",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.aot.hint.annotation.SimpleReflectiveProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.hint.support.KotlinDetectorRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.hint.support.ObjectToObjectConverterRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.hint.support.PathMatchingResourcePatternResolverRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.hint.support.SpringFactoriesLoaderRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.aot.hint.support.SpringPropertiesRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.batch.core.configuration.annotation.BatchObservabilityBeanPostProcessor"
},
{
  "name":"org.springframework.batch.core.launch.JobLauncher"
},
{
  "name":"org.springframework.beans.BeanInfoFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.BeanUtilsRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.BeansException"
},
{
  "name":"org.springframework.beans.PropertyEditorRegistry"
},
{
  "name":"org.springframework.beans.PropertyValues"
},
{
  "name":"org.springframework.beans.factory.Aware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.beans.factory.BeanClassLoaderAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.BeanCreationException"
},
{
  "name":"org.springframework.beans.factory.BeanFactory"
},
{
  "name":"org.springframework.beans.factory.BeanFactoryAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.BeanNameAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.DisposableBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.FactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.InitializingBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.ListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.NoSuchBeanDefinitionException"
},
{
  "name":"org.springframework.beans.factory.ObjectFactory"
},
{
  "name":"org.springframework.beans.factory.ObjectProvider"
},
{
  "name":"org.springframework.beans.factory.SmartInitializingSingleton",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Autowired",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"determineBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"postProcessMergedBeanDefinition","parameterTypes":["org.springframework.beans.factory.support.RootBeanDefinition","java.lang.Class","java.lang.String"] }, {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.support.RegisteredBean"] }, {"name":"resetBeanDefinition","parameterTypes":["java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"addDestroyAnnotationType","parameterTypes":["java.lang.Class"] }, {"name":"addInitAnnotationType","parameterTypes":["java.lang.Class"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeDestruction","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"requiresDestruction","parameterTypes":["java.lang.Object"] }, {"name":"setDestroyAnnotationType","parameterTypes":["java.lang.Class"] }, {"name":"setInitAnnotationType","parameterTypes":["java.lang.Class"] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata"
},
{
  "name":"org.springframework.beans.factory.annotation.InjectionMetadata"
},
{
  "name":"org.springframework.beans.factory.annotation.JakartaAnnotationsRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Qualifier",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.annotation.Value",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotContribution"
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.aot.BeanFactoryInitializationCode"
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotContribution"
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"isBeanExcludedFromAotProcessing","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationCodeFragments"
},
{
  "name":"org.springframework.beans.factory.aot.BeanRegistrationsAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.beans.factory.config.BeanDefinition"
},
{
  "name":"org.springframework.beans.factory.config.BeanDefinitionHolder"
},
{
  "name":"org.springframework.beans.factory.config.BeanFactoryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.config.BeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.ConfigurableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
},
{
  "name":"org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"postProcessAfterInstantiation","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.PlaceholderConfigurerSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreUnresolvablePlaceholders","parameterTypes":["boolean"] }, {"name":"setNullValue","parameterTypes":["java.lang.String"] }, {"name":"setPlaceholderPrefix","parameterTypes":["java.lang.String"] }, {"name":"setPlaceholderSuffix","parameterTypes":["java.lang.String"] }, {"name":"setTrimValues","parameterTypes":["boolean"] }, {"name":"setValueSeparator","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.config.PropertyResourceConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"determineCandidateConstructors","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"getEarlyBeanReference","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"predictBeanType","parameterTypes":["java.lang.Class","java.lang.String"] }]
},
{
  "name":"org.springframework.beans.factory.generator.BeanRegistrationContributionProvider"
},
{
  "name":"org.springframework.beans.factory.parsing.ProblemReporter"
},
{
  "name":"org.springframework.beans.factory.parsing.SourceExtractor"
},
{
  "name":"org.springframework.beans.factory.support.AutowireCandidateResolver"
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistry"
},
{
  "name":"org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.support.BeanNameGenerator"
},
{
  "name":"org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.beans.factory.support.RegisteredBean"
},
{
  "name":"org.springframework.beans.factory.support.RootBeanDefinition"
},
{
  "name":"org.springframework.boot.ApplicationContextFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.BootstrapRegistryInitializer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.ClearCachesApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.LazyInitializationExcludeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication$SpringApplicationRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplication.SpringApplicationRuntimeHints"
},
{
  "name":"org.springframework.boot.SpringApplicationAotProcessor",
  "methods":[{"name":"main","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.SpringApplicationBannerPrinter$SpringApplicationBannerPrinterRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.SpringApplicationBannerPrinter.SpringApplicationBannerPrinterRuntimeHints"
},
{
  "name":"org.springframework.boot.SpringApplicationRunListener",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.SpringBootConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.SpringBootExceptionReporter",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.WebApplicationType$WebApplicationTypeRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.WebApplicationType.WebApplicationTypeRuntimeHints"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventRepository"
},
{
  "name":"org.springframework.boot.actuate.audit.AuditEventsEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesAutoConfiguration$ProbesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.availability.AvailabilityProbesHealthEndpointGroupsPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessHealthEndpointGroups","parameterTypes":["org.springframework.boot.actuate.health.HealthEndpointGroups"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.mongo.MongoReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.ConditionalOnAvailableEndpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.condition.OnAvailableEndpointCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.EndpointExposure"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"match","parameterTypes":["org.springframework.boot.actuate.endpoint.ExposableEndpoint"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.endpoint.web.reactive.WebFluxEndpointManagementContextConfiguration$ServerCodecConfigurerEndpointObjectMapperBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.AbstractCompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.CompositeReactiveHealthContributorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ConditionalOnEnabledHealthIndicator",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getShowDetails","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointReactiveWebExtensionConfiguration$WebFluxAdditionalHealthEndpointPathsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getRoles","parameterTypes":[] }, {"name":"getShowComponents","parameterTypes":[] }, {"name":"getStatus","parameterTypes":[] }, {"name":"setRoles","parameterTypes":["java.util.Set"] }, {"name":"setShowComponents","parameterTypes":["org.springframework.boot.actuate.endpoint.Show"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.OnEnabledHealthIndicatorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.ConditionalOnEnabledInfoContributor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorFallback"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.info.OnEnabledInfoContributorCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryConfiguration$MultipleNonPrimaryMeterRegistriesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.KafkaMetricsAutoConfiguration$KafkaStreamsMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration$LogbackLoggingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryCustomizer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAspectsAutoConfiguration$ObservationAnnotationsEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.NoOpMeterRegistryConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"accept","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"close","parameterTypes":[] }, {"name":"configure","parameterTypes":["io.micrometer.core.instrument.Meter$Id","io.micrometer.core.instrument.distribution.DistributionStatisticConfig"] }, {"name":"map","parameterTypes":["io.micrometer.core.instrument.Meter$Id"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary$ServiceLevelObjectiveBoundaryHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary.ServiceLevelObjectiveBoundaryHints"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.ConditionalOnEnabledMetricsExport",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.OnMetricsExportEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoCommandMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.mongo.MongoMetricsAutoConfiguration$MongoConnectionPoolMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.r2dbc.ConnectionPoolMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.redis.LettuceMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$LongTaskTimer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryConfigurer"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"map","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"test","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.observation.web.reactive.WebFluxObservationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.r2dbc.ConnectionFactoryHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"configureTasks","parameterTypes":["org.springframework.scheduling.config.ScheduledTaskRegistrar"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.startup.StartupEndpointAutoConfiguration$ApplicationStartupCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.tracing.MicrometerTracingAutoConfiguration"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.ManagementContextType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.reactive.ReactiveManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ConditionalOnManagementPort",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.EnableManagementContext",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementPortType"
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.autoconfigure.web.server.OnManagementPortCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.availability.AvailabilityStateHealthIndicator$StatusMappings"
},
{
  "name":"org.springframework.boot.actuate.availability.LivenessStateHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.availability.ReadinessStateHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.beans.BeansEndpoint"
},
{
  "name":"org.springframework.boot.actuate.cache.CachesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.ShutdownEndpoint"
},
{
  "name":"org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint"
},
{
  "name":"org.springframework.boot.actuate.data.mongo.MongoReactiveHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.data.redis.RedisReactiveHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.endpoint.ApiVersion"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointId"
},
{
  "name":"org.springframework.boot.actuate.endpoint.EndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.ExposableEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Operation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.OperationResponseBody",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.OperationType"
},
{
  "name":"org.springframework.boot.actuate.endpoint.SecurityContext"
},
{
  "name":"org.springframework.boot.actuate.endpoint.Show"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationMethod"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.DiscoveredOperationsFactory"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Endpoint",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointConverter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createOperationKey","parameterTypes":["org.springframework.boot.actuate.endpoint.Operation"] }, {"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$EndpointBean"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$ExtensionBean"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointDiscoverer$OperationKey"
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.EndpointExtension",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.FilteredEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.OperationReflectiveProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.ReadOperation",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.annotation.Selector",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameter"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.OperationParameters"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterMappingException"
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.actuate.endpoint.EndpointId","org.springframework.boot.actuate.endpoint.OperationType","org.springframework.boot.actuate.endpoint.invoke.OperationParameters","org.springframework.boot.actuate.endpoint.invoke.OperationInvoker"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.ExposableWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.Link",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"iterator","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.PathMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointResponse",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebOperation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.WebServerNamespace"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer$ControllerEndpointDiscovererRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.EndpointWebExtension",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.ExposableControllerEndpoint"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpoint",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer$WebEndpointDiscovererRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getEndpoints","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$AbstractWebFluxEndpointHandlerMappingRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$LinksHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReactiveWebOperation"
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$ReadOperationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AbstractWebFluxEndpointHandlerMapping$WriteOperationHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.AdditionalHealthEndpointPathsWebFluxHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.ControllerEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxEndpointHandlerMappingRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.endpoint.web.reactive.WebFluxEndpointHandlerMapping$WebFluxLinksHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.env.EnvironmentEndpoint"
},
{
  "name":"org.springframework.boot.actuate.health.AbstractHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"health","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.AdditionalHealthEndpointPath"
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealth",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.CompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.CompositeReactiveHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.ContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"registerContributor","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"unregisterContributor","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.actuate.health.Health",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.Health$Builder"
},
{
  "name":"org.springframework.boot.actuate.health.HealthComponent",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroup"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroups",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointGroupsPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getHealth","parameterTypes":["java.lang.Object","boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointSupport$HealthResult"
},
{
  "name":"org.springframework.boot.actuate.health.HealthEndpointWebExtensionRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.HealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getHealth","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.boot.actuate.health.HttpCodeStatusMapper",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributor"
},
{
  "name":"org.springframework.boot.actuate.health.NamedContributors",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"stream","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.PingHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.ReactiveHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.health.Status",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.health.StatusAggregator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.health.SystemHealth",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.info.EnvironmentInfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"contribute","parameterTypes":["org.springframework.boot.actuate.info.Info$Builder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.info.GitInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.Info$Builder"
},
{
  "name":"org.springframework.boot.actuate.info.InfoContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.info.InfoEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.info.JavaInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.OsInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.info.ProcessInfoContributor"
},
{
  "name":"org.springframework.boot.actuate.logging.LogFileWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.logging.LoggersEndpoint"
},
{
  "name":"org.springframework.boot.actuate.management.HeapDumpWebEndpoint"
},
{
  "name":"org.springframework.boot.actuate.management.ThreadDumpEndpoint"
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint$AvailableTag",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricDescriptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.MetricsEndpoint$Sample",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.actuate.metrics.cache.CacheMeterBinderProvider"
},
{
  "name":"org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"repositoryTags","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterInvocation","parameterTypes":["org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"bindTo","parameterTypes":["io.micrometer.core.instrument.MeterRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.web.reactive.function.client.WebClient$Builder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.r2dbc.ConnectionFactoryHealthIndicator"
},
{
  "name":"org.springframework.boot.actuate.sbom.SbomEndpoint"
},
{
  "name":"org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint"
},
{
  "name":"org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangeRepository"
},
{
  "name":"org.springframework.boot.actuate.web.exchanges.HttpExchangesEndpoint"
},
{
  "name":"org.springframework.boot.actuate.web.mappings.MappingsEndpoint"
},
{
  "name":"org.springframework.boot.ansi.AnsiOutput$Enabled",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationImportSelector$AutoConfigurationGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackage",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureAfter",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureBefore",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.AutoConfigureOrder",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.BackgroundPreinitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.EnableAutoConfiguration",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer$SharedMetadataReaderFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.SpringBootApplication",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheConfigurationImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.cache.CacheType",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.codec.CodecProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCheckpointRestore",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnClass",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnCloudPlatform",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnExpression",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnMissingClass",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnNotWarDeployment",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnProperty",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnResource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnSingleCandidate",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnThreading",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.ConditionalOnWebApplication$Type"
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnBeanCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnClassCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnCloudPlatformCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnExpressionCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnPropertyCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnResourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnThreadingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWarDeploymentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.condition.SearchStrategy"
},
{
  "name":"org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.LifecycleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.context.MessageSourceAutoConfiguration$ResourceBundleCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"propertySourcesPlaceholderConfigurer","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"persistenceExceptionTranslationPostProcessor","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.ConditionalOnRepositoryType",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.OnRepositoryTypeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.RepositoryType"
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoDataConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"mongoManagedTypes","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveDataAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.mongo.MongoReactiveRepositoriesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.r2dbc.R2dbcDataAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"r2dbcManagedTypes","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.r2dbc.R2dbcRepositoriesAutoConfigureRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.ClientResourcesBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.JedisConnectionConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceClientConfigurationBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.LettuceConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.PropertiesRedisConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getCluster","parameterTypes":[] }, {"name":"getPassword","parameterTypes":[] }, {"name":"getSentinel","parameterTypes":[] }, {"name":"getStandalone","parameterTypes":[] }, {"name":"getUsername","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionConfiguration$ConnectionInfo"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Cluster"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Node"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Sentinel"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails$Standalone"
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisProperties$Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
},
{
  "name":"org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.flyway.ResourceProviderCustomizerBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider$FreeMarkerTemplateAvailabilityRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider.FreeMarkerTemplateAvailabilityRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider$GroovyTemplateAvailabilityRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider.GroovyTemplateAvailabilityRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration$StandardGsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["com.google.gson.GsonBuilder"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.gson.GsonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration$GitResourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonAutoConfigurationRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"jsonMixinModuleEntries","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration.JacksonAutoConfigurationRuntimeHints"
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$EmbeddedDatabaseCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceAvailableCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$PooledDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.ConcurrentKafkaListenerContainerFactoryConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaConsumerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.DefaultKafkaProducerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAnnotationDrivenConfiguration$EnableKafkaConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAdminBootstrapServers","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Admin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Cleanup",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Consumer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$IsolationLevel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Jaas",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Listener$Type",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Producer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Retry$Topic",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Security",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Streams",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaProperties$Template",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.KafkaStreamsAnnotationDrivenConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.PropertiesKafkaConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getBootstrapServers","parameterTypes":[] }, {"name":"getConsumerBootstrapServers","parameterTypes":[] }, {"name":"getProducerBootstrapServers","parameterTypes":[] }, {"name":"getStreamsBootstrapServers","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.kafka.StreamsBuilderFactoryBeanCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoClientSettingsBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoConnectionDetails$GridFs"
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoProperties$Gridfs",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoProperties$Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$MongoClientSettingsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.MongoReactiveAutoConfiguration$NettyDriverMongoClientSettingsBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"customize","parameterTypes":["com.mongodb.MongoClientSettings$Builder"] }, {"name":"destroy","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.PropertiesMongoConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getConnectionString","parameterTypes":[] }, {"name":"getGridFs","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mongo.StandardMongoClientSettingsBuilderCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["com.mongodb.MongoClientSettings$Builder"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$GenericConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PoolConfiguration$PooledConnectionFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryConfigurations$PooledConnectionFactoryCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryDependentConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcAutoConfiguration$PropertiesR2dbcConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getConnectionFactoryOptions","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcProperties$Pool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.r2dbc.R2dbcTransactionManagerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.ReactorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketMessageHandlerCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketMessagingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketProperties$Server$Spec",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketRequesterAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$EmbeddedServerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketServerAutoConfiguration$OnRSocketWebServerCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration$JacksonCborStrategyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.rsocket.RSocketStrategiesAutoConfiguration$JacksonJsonStrategyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.ConditionalOnDefaultWebSecurity",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.DefaultWebSecurityCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityDataConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.SecurityProperties$User",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.IssuerUriCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.KeyValueCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Jwt",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.OAuth2ResourceServerProperties$Opaquetoken",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.JwkSetUriReactiveJwtDecoderBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$JwtConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerConfiguration$OpaqueTokenConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$JwtConverterPropertiesCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerJwkConfiguration$WebSecurityConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$OpaqueTokenIntrospectionClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.oauth2.resource.reactive.ReactiveOAuth2ResourceServerOpaqueTokenConfiguration$WebSecurityConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration$SpringBootWebFluxSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration$RSocketEnabledOrReactiveWebApplication",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration$MissingAlternativeOrUserPropertiesConfigured",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.R2dbcInitializationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer"
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration$SqlInitializationModeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlInitializationScriptsRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.sql.init.SqlR2dbcScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.BundleContentNotWatchableFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.BundleContentProperty"
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.FileWatcher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"registerBundles","parameterTypes":["org.springframework.boot.ssl.SslBundleRegistry"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar$Bundle"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool$Shutdown",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.template.TemplateRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.thread.Threading"
},
{
  "name":"org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.transaction.TransactionManager"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.transaction.TransactionProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"customize","parameterTypes":["org.springframework.transaction.TransactionManager"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.PrimaryDefaultValidatorPostProcessor",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"methodValidationPostProcessor","parameterTypes":["org.springframework.core.env.Environment","org.springframework.beans.factory.ObjectProvider","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.validation.ValidationConfigurationCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.ConditionalOnEnabledResourceChain",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.OnEnabledResourceChainCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.WebResourcesRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.NotReactiveWebApplicationCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration"
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.format.WebConversionService"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.HttpHandlerAutoConfiguration$AnnotationConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveMultipartProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryAutoConfiguration$BeanPostProcessorsRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedJetty"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedNetty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedTomcat"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryConfiguration$EmbeddedUndertow"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.ReactiveWebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.boot.web.server.WebServerFactory"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.TomcatReactiveWebServerFactoryCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$EnableWebFluxConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"localeContextResolver","parameterTypes":[] }, {"name":"webFluxConversionService","parameterTypes":[] }, {"name":"webFluxValidator","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WebFluxConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] }, {"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] }, {"name":"configureBlockingExecution","parameterTypes":["org.springframework.web.reactive.config.BlockingExecutionConfigurer"] }, {"name":"configureHttpMessageCodecs","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.reactive.config.ViewResolverRegistry"] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxAutoConfiguration$WelcomePageConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Format",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebFluxProperties$Problemdetails",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebHttpHandlerBuilderCustomizer"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.WebSessionIdResolverAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.error.ErrorWebFluxAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"fromBundle","parameterTypes":["java.lang.String"] }, {"name":"fromBundle","parameterTypes":["org.springframework.boot.ssl.SslBundle"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createClientHttpConnector","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$HttpClient5"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$JdkClient"
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"createClientHttpConnector","parameterTypes":["org.springframework.boot.ssl.SslBundle"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"customize","parameterTypes":["org.springframework.web.reactive.function.client.WebClient$Builder"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration"
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailability",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getLivenessState","parameterTypes":[] }, {"name":"getReadinessState","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.ApplicationAvailabilityBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getLastChangeEvent","parameterTypes":["java.lang.Class"] }, {"name":"getState","parameterTypes":["java.lang.Class"] }, {"name":"getState","parameterTypes":["java.lang.Class","org.springframework.boot.availability.AvailabilityState"] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.availability.AvailabilityChangeEvent"
},
{
  "name":"org.springframework.boot.availability.AvailabilityState"
},
{
  "name":"org.springframework.boot.availability.LivenessState"
},
{
  "name":"org.springframework.boot.availability.ReadinessState"
},
{
  "name":"org.springframework.boot.builder.ParentContextCloserApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.cloud.CloudPlatform"
},
{
  "name":"org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.ContextIdApplicationContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.FileEncodingApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.TypeExcludeFilter",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.AnsiOutputApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.ConfigurableBootstrapContext"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLoader",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }, {"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocationEditor"
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocationResolver",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataLocationRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundAction",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.util.List","org.springframework.boot.context.config.ConfigDataProperties$Activate"] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigDataProperties$Activate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.config.ConfigDataPropertiesRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.DelegatingApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLoader",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.config.StandardConfigDataLocationResolver",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory","org.springframework.boot.context.properties.bind.Binder","org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.context.event.ApplicationReadyEvent"
},
{
  "name":"org.springframework.boot.context.event.ApplicationStartedEvent"
},
{
  "name":"org.springframework.boot.context.event.EventPublishingRunListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.SpringApplication","java.lang.String[]"] }]
},
{
  "name":"org.springframework.boot.context.logging.LoggingApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.BoundConfigurationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationProperties",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBean"
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBeanFactoryInitializationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder"
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationProperties",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.EnableConfigurationPropertiesRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.NestedConfigurationProperty",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.context.properties.PropertyMapper"
},
{
  "name":"org.springframework.boot.context.properties.bind.BindHandler"
},
{
  "name":"org.springframework.boot.context.properties.bind.BindResult"
},
{
  "name":"org.springframework.boot.context.properties.bind.Binder"
},
{
  "name":"org.springframework.boot.context.properties.bind.Name",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.bind.Nested",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationProperty"
},
{
  "name":"org.springframework.boot.context.properties.source.ConfigurationPropertyName"
},
{
  "name":"org.springframework.boot.convert.DurationUnit",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.autoconfigure.DevToolsDataSourceAutoConfiguration$DevToolsDataSourceCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.autoconfigure.DevToolsR2dbcAutoConfiguration$DevToolsConnectionFactoryCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.autoconfigure.OnEnabledDevToolsCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.env.DevToolsHomePropertiesPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.env.DevToolsPropertyDefaultsPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.logger.DevToolsLogFactory$Listener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.logger.DevToolsLogFactory.Listener"
},
{
  "name":"org.springframework.boot.devtools.restart.ConditionalOnInitializedRestarter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.boot.devtools.restart.OnInitializedRestarterCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.restart.RestartApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.devtools.restart.RestartScopeInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.diagnostics.FailureAnalysisReporter",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.FailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.FailureAnalyzers",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.AotInitializerNotFoundFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertiesPropertySourceLoader",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.PropertySourceLoader",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.env.PropertySourceRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.logging.DeferredLogFactory"] }]
},
{
  "name":"org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.env.YamlPropertySourceLoader",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.info.BuildProperties"
},
{
  "name":"org.springframework.boot.info.GitProperties"
},
{
  "name":"org.springframework.boot.io.Base64ProtocolResolver",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.jackson.JsonComponent$Scope"
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule$JsonComponentBeanFactoryInitializationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonComponentModule.JsonComponentBeanFactoryInitializationAotProcessor"
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModule",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntries$Builder"
},
{
  "name":"org.springframework.boot.jackson.JsonMixinModuleEntriesBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.DataSourceBuilder"
},
{
  "name":"org.springframework.boot.jdbc.DataSourceBuilderRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
},
{
  "name":"org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider"
},
{
  "name":"org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.json.JacksonRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.LogLevelEditor"
},
{
  "name":"org.springframework.boot.logging.LoggingSystemFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.java.JavaLoggingSystemRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.log4j2.Log4J2LoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.ApplicationNameConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ColorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.logging.logback.LogbackLoggingSystem.Factory"
},
{
  "name":"org.springframework.boot.logging.logback.LogbackRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.origin.OriginProvider",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketServerBootstrap",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.context.RSocketServerInitializedEvent"
},
{
  "name":"org.springframework.boot.rsocket.messaging.RSocketStrategiesCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.server.RSocketServer"
},
{
  "name":"org.springframework.boot.rsocket.server.RSocketServerCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.rsocket.server.RSocketServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"initializeDatabase","parameterTypes":[] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$ScriptLocationResolver"
},
{
  "name":"org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer$Scripts"
},
{
  "name":"org.springframework.boot.sql.init.DatabaseInitializationMode"
},
{
  "name":"org.springframework.boot.sql.init.DatabaseInitializationSettings"
},
{
  "name":"org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }]
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor$InitializerBeanNames"
},
{
  "name":"org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.ssl.DefaultSslBundleRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addBundleUpdateHandler","parameterTypes":["java.lang.String","java.util.function.Consumer"] }, {"name":"close","parameterTypes":[] }, {"name":"getBundle","parameterTypes":["java.lang.String"] }, {"name":"registerBundle","parameterTypes":["java.lang.String","org.springframework.boot.ssl.SslBundle"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"updateBundle","parameterTypes":["java.lang.String","org.springframework.boot.ssl.SslBundle"] }]
},
{
  "name":"org.springframework.boot.ssl.DefaultSslBundleRegistry$RegisteredSslBundle"
},
{
  "name":"org.springframework.boot.ssl.NoSuchSslBundleException"
},
{
  "name":"org.springframework.boot.ssl.SslBundle"
},
{
  "name":"org.springframework.boot.ssl.SslBundleRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.ssl.SslBundles",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.SimpleAsyncTaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.task.TaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.TaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.TaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskExecutorCustomizer"
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.task.ThreadPoolTaskSchedulerCustomizer"
},
{
  "name":"org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory",
  "methods":[{"name":"toMetadataReaderFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.FilteredMethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"byAnnotation","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.boot.web.client.ClientHttpRequestFactoriesRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.client.RestTemplateBuilder"
},
{
  "name":"org.springframework.boot.web.codec.CodecCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.context.WebServerInitializedEvent"
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getShutdown","parameterTypes":[] }, {"name":"getWebServer","parameterTypes":["org.springframework.http.server.reactive.HttpHandler"] }, {"name":"setShutdown","parameterTypes":["org.springframework.boot.web.server.Shutdown"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyRouteProvider"
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyServerCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.netty.NettyWebServer"
},
{
  "name":"org.springframework.boot.web.embedded.netty.SslServerCustomizer"
},
{
  "name":"org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.embedded.undertow.UndertowWebServer$UndertowWebServerRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.embedded.undertow.UndertowWebServer.UndertowWebServerRuntimeHints"
},
{
  "name":"org.springframework.boot.web.error.ErrorAttributeOptions"
},
{
  "name":"org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.error.DefaultErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getError","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest"] }, {"name":"getErrorAttributes","parameterTypes":["org.springframework.web.reactive.function.server.ServerRequest","org.springframework.boot.web.error.ErrorAttributeOptions"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"storeErrorInformation","parameterTypes":["java.lang.Throwable","org.springframework.web.server.ServerWebExchange"] }]
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorAttributes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.filter.OrderedHiddenHttpMethodFilter"
},
{
  "name":"org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.reactive.server.AbstractReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ConfigurableReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.reactive.server.ReactiveWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.AbstractConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addErrorPages","parameterTypes":["org.springframework.boot.web.server.ErrorPage[]"] }, {"name":"getAddress","parameterTypes":[] }, {"name":"getCompression","parameterTypes":[] }, {"name":"getErrorPages","parameterTypes":[] }, {"name":"getHttp2","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getServerHeader","parameterTypes":[] }, {"name":"getSsl","parameterTypes":[] }, {"name":"getSslBundles","parameterTypes":[] }, {"name":"setAddress","parameterTypes":["java.net.InetAddress"] }, {"name":"setCompression","parameterTypes":["org.springframework.boot.web.server.Compression"] }, {"name":"setErrorPages","parameterTypes":["java.util.Set"] }, {"name":"setHttp2","parameterTypes":["org.springframework.boot.web.server.Http2"] }, {"name":"setPort","parameterTypes":["int"] }, {"name":"setServerHeader","parameterTypes":["java.lang.String"] }, {"name":"setSsl","parameterTypes":["org.springframework.boot.web.server.Ssl"] }, {"name":"setSslBundles","parameterTypes":["org.springframework.boot.ssl.SslBundles"] }]
},
{
  "name":"org.springframework.boot.web.server.Compression",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.ConfigurableWebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.Cookie$SameSite",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.ErrorPage"
},
{
  "name":"org.springframework.boot.web.server.ErrorPageRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.Http2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.MimeMappings"
},
{
  "name":"org.springframework.boot.web.server.MimeMappings$MimeMappingsRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.server.MimeMappings.MimeMappingsRuntimeHints"
},
{
  "name":"org.springframework.boot.web.server.Shutdown"
},
{
  "name":"org.springframework.boot.web.server.Ssl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.Ssl$ClientAuth",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.Ssl$ServerNameSslBundle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.WebServer"
},
{
  "name":"org.springframework.boot.web.server.WebServerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.boot.web.servlet.DispatcherType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.boot.web.servlet.server.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Jsp",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Session",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Session$Cookie",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.boot.web.servlet.server.Session$SessionTrackingMode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cache.Cache"
},
{
  "name":"org.springframework.cache.CacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCache","parameterTypes":["java.lang.String"] }, {"name":"getCacheNames","parameterTypes":[] }]
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCache"
},
{
  "name":"org.springframework.cache.caffeine.CaffeineCacheManager"
},
{
  "name":"org.springframework.cache.interceptor.CacheAspectSupport"
},
{
  "name":"org.springframework.cache.jcache.JCacheCache"
},
{
  "name":"org.springframework.cglib.core.ClassNameReader",
  "fields":[{"name":"EARLY_EXIT"}]
},
{
  "name":"org.springframework.cglib.proxy.Dispatcher"
},
{
  "name":"org.springframework.cglib.proxy.MethodInterceptor"
},
{
  "name":"org.springframework.cglib.proxy.NoOp"
},
{
  "name":"org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshAutoConfiguration"
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithIntegrationConfiguration"
},
{
  "name":"org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.BootstrapConfiguration",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.EncryptionRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.bootstrap.encrypt.RsaProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.bootstrap.marker.Marker"
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.ConditionalOnBlockingDiscoveryEnabled",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryEnabled",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ConditionalOnDiscoveryHealthIndicatorEnabled",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ConditionalOnReactiveDiscoveryEnabled",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.DefaultServiceInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.ServiceInstance",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getScheme","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.actuator.FeaturesEndpoint"
},
{
  "name":"org.springframework.cloud.client.actuator.HasFeatures",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.actuator.NamedFeature"
},
{
  "name":"org.springframework.cloud.client.discovery.DiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"probe","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"probe","parameterTypes":[] }, {"name":"reactiveProbe","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getServices","parameterTypes":[] }, {"name":"probe","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getServices","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.event.InstanceRegisteredEvent"
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"health","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"health","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getContributor","parameterTypes":["java.lang.String"] }, {"name":"iterator","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getServices","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.BlockingLoadBalancerInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.BlockingRestClassesPresentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.DefaultRequest"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"intercept","parameterTypes":["org.springframework.http.HttpRequest","byte[]","org.springframework.http.client.ClientHttpRequestExecution"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalanced",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancedRetryFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancedRetryPolicy"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryInterceptorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$RetryMissingOrDisabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerEagerLoadProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerLifecycle"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getHealthCheck","parameterTypes":[] }, {"name":"getHint","parameterTypes":[] }, {"name":"getHintHeaderName","parameterTypes":[] }, {"name":"getRetry","parameterTypes":[] }, {"name":"getStickySession","parameterTypes":[] }, {"name":"getSubset","parameterTypes":[] }, {"name":"getXForwarded","parameterTypes":[] }, {"name":"isCallGetWithRequestOnDelegates","parameterTypes":[] }, {"name":"setCallGetWithRequestOnDelegates","parameterTypes":["boolean"] }, {"name":"setHealthCheck","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck"] }, {"name":"setHint","parameterTypes":["java.util.Map"] }, {"name":"setHintHeaderName","parameterTypes":["java.lang.String"] }, {"name":"setRetry","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry"] }, {"name":"setStickySession","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession"] }, {"name":"setSubset","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Subset"] }, {"name":"setxForwarded","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded"] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$HealthCheck",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Retry$Backoff",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$StickySession",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$Subset",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerProperties$XForwarded",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequest"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRequestTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.LoadBalancerRestClientBuilderBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.Request"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.RequestData"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.Response"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.RestTemplateCustomizer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.RetryLoadBalancerInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"intercept","parameterTypes":["org.springframework.http.HttpRequest","byte[]","org.springframework.http.client.ClientHttpRequestExecution"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.ServiceInstanceChooser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"choose","parameterTypes":["java.lang.String"] }, {"name":"choose","parameterTypes":["java.lang.String","org.springframework.cloud.client.loadbalancer.Request"] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"filter","parameterTypes":["org.springframework.web.reactive.function.client.ClientRequest","org.springframework.web.reactive.function.client.ExchangeFunction"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancedExchangeFilterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$OnAnyLoadBalancerImplementationPresentCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerRetryPolicy$Factory"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerWebClientBuilderBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer"
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactiveLoadBalancer$Factory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"filter","parameterTypes":["org.springframework.web.reactive.function.client.ClientRequest","org.springframework.web.reactive.function.client.ExchangeFunction"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.loadbalancer.reactive.RetryableLoadBalancerExchangeFilterFunction"
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.Registration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint"
},
{
  "name":"org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"apply","parameterTypes":["org.springframework.boot.context.properties.bind.BindHandler"] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.InetUtils$HostInfo"
},
{
  "name":"org.springframework.cloud.commons.util.InetUtilsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.commons.util.UtilAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.config.client.ConfigServerInstanceProvider"
},
{
  "name":"org.springframework.cloud.config.server.config.ConfigServerProperties"
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityPredicate"
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompatibilityVerifierProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.SleuthPresentVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"verify","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.SpringBootVersionVerifier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"verify","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.TlsProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.configuration.VerificationResult"
},
{
  "name":"org.springframework.cloud.context.config.annotation.RefreshScope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentChangeEvent"
},
{
  "name":"org.springframework.cloud.context.environment.EnvironmentManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"buildContext","parameterTypes":["java.lang.String"] }, {"name":"createContext","parameterTypes":["java.lang.String"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getAnnotatedInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType","java.lang.Class"] }, {"name":"getConfigurations","parameterTypes":[] }, {"name":"getContextNames","parameterTypes":[] }, {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getInstance","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class[]"] }, {"name":"getInstance","parameterTypes":["java.lang.String","org.springframework.core.ResolvableType"] }, {"name":"getInstances","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getLazyProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getParent","parameterTypes":[] }, {"name":"getProvider","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"registerBeans","parameterTypes":["java.lang.String","org.springframework.context.support.GenericApplicationContext"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setConfigurations","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.cloud.context.named.NamedContextFactory$Specification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.refresh.ContextRefresher"
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint$PauseEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartEndpoint$ResumeEndpoint"
},
{
  "name":"org.springframework.cloud.context.restart.RestartListener",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.context.scope.refresh.RefreshScope"
},
{
  "name":"org.springframework.cloud.context.scope.refresh.RefreshScopeRefreshedEvent"
},
{
  "name":"org.springframework.cloud.endpoint.RefreshEndpoint"
},
{
  "name":"org.springframework.cloud.function.web.function.FunctionEndpointInitializer"
},
{
  "name":"org.springframework.cloud.health.RefreshScopeHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientConfigurationRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClientSpecification",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.Class[]"] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getConfiguration","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.annotation.LoadBalancerClients",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.aot.LoadBalancerChildContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.support.RegisteredBean"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.blocking.XForwardedHeadersTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"transformRequest","parameterTypes":["org.springframework.http.HttpRequest","org.springframework.cloud.client.ServiceInstance"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.cache.LoadBalancerCacheProperties$Caffeine",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$0",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "fields":[{"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"CGLIB$SET_STATIC_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }, {"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$FastClass$$0",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.BlockingLoadBalancerClientAutoConfiguration$BlockingLoadBalancerRetryConfig$$SpringCGLIB$$FastClass$$1",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.CaffeineHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"loadBalancerChildContextInitializer","parameterTypes":["org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory","org.springframework.context.ApplicationContext"] }, {"name":"loadBalancerClientFactory","parameterTypes":["org.springframework.cloud.client.loadbalancer.LoadBalancerClientsProperties","org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$DefaultLoadBalancerCacheManagerConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCacheManagerWarnConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnCaffeineCacheMissingCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$OnLoadBalancerCachingEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.config.LoadBalancerZoneConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.core.LoadBalancerServiceInstanceCookieTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"transformRequest","parameterTypes":["org.springframework.http.HttpRequest","org.springframework.cloud.client.ServiceInstance"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerClientFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getInstance","parameterTypes":["java.lang.String"] }, {"name":"getProperties","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.loadbalancer.support.LoadBalancerEagerContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.CloudEurekaClient"
},
{
  "name":"org.springframework.cloud.netflix.eureka.CloudEurekaInstanceConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnMissingRefreshScope",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$ConditionalOnRefreshScope",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$EurekaHealthIndicatorConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$OnMissingRefreshScopeCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientConfigBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"allowRedirects","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"fetchRegistryForRemoteRegions","parameterTypes":[] }, {"name":"getAvailabilityZones","parameterTypes":["java.lang.String"] }, {"name":"getBackupRegistryImpl","parameterTypes":[] }, {"name":"getCacheRefreshExecutorExponentialBackOffBound","parameterTypes":[] }, {"name":"getCacheRefreshExecutorThreadPoolSize","parameterTypes":[] }, {"name":"getClientDataAccept","parameterTypes":[] }, {"name":"getDecoderName","parameterTypes":[] }, {"name":"getDollarReplacement","parameterTypes":[] }, {"name":"getEncoderName","parameterTypes":[] }, {"name":"getEscapeCharReplacement","parameterTypes":[] }, {"name":"getEurekaConnectionIdleTimeoutSeconds","parameterTypes":[] }, {"name":"getEurekaServerConnectTimeoutSeconds","parameterTypes":[] }, {"name":"getEurekaServerDNSName","parameterTypes":[] }, {"name":"getEurekaServerPort","parameterTypes":[] }, {"name":"getEurekaServerReadTimeoutSeconds","parameterTypes":[] }, {"name":"getEurekaServerServiceUrls","parameterTypes":["java.lang.String"] }, {"name":"getEurekaServerTotalConnections","parameterTypes":[] }, {"name":"getEurekaServerTotalConnectionsPerHost","parameterTypes":[] }, {"name":"getEurekaServerURLContext","parameterTypes":[] }, {"name":"getEurekaServiceUrlPollIntervalSeconds","parameterTypes":[] }, {"name":"getExperimental","parameterTypes":["java.lang.String"] }, {"name":"getHeartbeatExecutorExponentialBackOffBound","parameterTypes":[] }, {"name":"getHeartbeatExecutorThreadPoolSize","parameterTypes":[] }, {"name":"getInitialInstanceInfoReplicationIntervalSeconds","parameterTypes":[] }, {"name":"getInstanceInfoReplicationIntervalSeconds","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getProxyHost","parameterTypes":[] }, {"name":"getProxyPassword","parameterTypes":[] }, {"name":"getProxyPort","parameterTypes":[] }, {"name":"getProxyUserName","parameterTypes":[] }, {"name":"getRegion","parameterTypes":[] }, {"name":"getRegistryFetchIntervalSeconds","parameterTypes":[] }, {"name":"getRegistryRefreshSingleVipAddress","parameterTypes":[] }, {"name":"getTransportConfig","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"shouldDisableDelta","parameterTypes":[] }, {"name":"shouldEnforceRegistrationAtInit","parameterTypes":[] }, {"name":"shouldFetchRegistry","parameterTypes":[] }, {"name":"shouldFilterOnlyUpInstances","parameterTypes":[] }, {"name":"shouldGZipContent","parameterTypes":[] }, {"name":"shouldLogDeltaDiff","parameterTypes":[] }, {"name":"shouldOnDemandUpdateStatusChange","parameterTypes":[] }, {"name":"shouldPreferSameZoneEureka","parameterTypes":[] }, {"name":"shouldRegisterWithEureka","parameterTypes":[] }, {"name":"shouldUnregisterOnShutdown","parameterTypes":[] }, {"name":"shouldUseDnsForFetchingServiceUrls","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaClientHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getServices","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaDiscoveryClientConfiguration$EurekaClientConfigurationRefresher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaHealthIndicator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"health","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.EurekaInstanceConfigBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"getASGName","parameterTypes":[] }, {"name":"getAppGroupName","parameterTypes":[] }, {"name":"getAppname","parameterTypes":[] }, {"name":"getDataCenterInfo","parameterTypes":[] }, {"name":"getDefaultAddressResolutionOrder","parameterTypes":[] }, {"name":"getHealthCheckUrl","parameterTypes":[] }, {"name":"getHealthCheckUrlPath","parameterTypes":[] }, {"name":"getHomePageUrl","parameterTypes":[] }, {"name":"getHomePageUrlPath","parameterTypes":[] }, {"name":"getHostName","parameterTypes":["boolean"] }, {"name":"getInitialStatus","parameterTypes":[] }, {"name":"getInstanceId","parameterTypes":[] }, {"name":"getIpAddress","parameterTypes":[] }, {"name":"getLeaseExpirationDurationInSeconds","parameterTypes":[] }, {"name":"getLeaseRenewalIntervalInSeconds","parameterTypes":[] }, {"name":"getMetadataMap","parameterTypes":[] }, {"name":"getNamespace","parameterTypes":[] }, {"name":"getNonSecurePort","parameterTypes":[] }, {"name":"getSecureHealthCheckUrl","parameterTypes":[] }, {"name":"getSecurePort","parameterTypes":[] }, {"name":"getSecurePortEnabled","parameterTypes":[] }, {"name":"getSecureVirtualHostName","parameterTypes":[] }, {"name":"getStatusPageUrl","parameterTypes":[] }, {"name":"getStatusPageUrlPath","parameterTypes":[] }, {"name":"getVirtualHostName","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isInstanceEnabledOnit","parameterTypes":[] }, {"name":"isNonSecurePortEnabled","parameterTypes":[] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setNonSecurePort","parameterTypes":["int"] }, {"name":"setSecurePort","parameterTypes":["int"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.RestTemplateTimeoutProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$JerseyClientNotPresentOrNotEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration$JerseyClientPresentAndEnabledCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapConfiguration",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.config.EurekaConfigServerBootstrapper",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.http.EurekaClientHttpRequestFactorySupplier",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.http.RestTemplateDiscoveryClientOptionalArgs",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactories",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"newTransportClientFactory","parameterTypes":["com.netflix.discovery.EurekaClientConfig","java.util.Collection","com.netflix.appinfo.InstanceInfo"] }, {"name":"newTransportClientFactory","parameterTypes":["com.netflix.discovery.EurekaClientConfig","java.util.Collection","com.netflix.appinfo.InstanceInfo","java.util.Optional","java.util.Optional"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerClientConfiguration"
},
{
  "name":"org.springframework.cloud.netflix.eureka.loadbalancer.EurekaLoadBalancerProperties",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.loadbalancer.LoadBalancerEurekaAutoConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.metadata.ManagementMetadata"
},
{
  "name":"org.springframework.cloud.netflix.eureka.metadata.ManagementMetadataProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"description","parameterTypes":[] }, {"name":"getInstances","parameterTypes":["java.lang.String"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getServices","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.reactive.EurekaReactiveDiscoveryClientConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"isAutoStartup","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }, {"name":"supportsEventType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getHost","parameterTypes":[] }, {"name":"getInstanceId","parameterTypes":[] }, {"name":"getMetadata","parameterTypes":[] }, {"name":"getPort","parameterTypes":[] }, {"name":"getServiceId","parameterTypes":[] }, {"name":"getUri","parameterTypes":[] }, {"name":"isSecure","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$Builder"
},
{
  "name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"deregister","parameterTypes":["org.springframework.cloud.client.serviceregistry.Registration"] }, {"name":"getStatus","parameterTypes":["org.springframework.cloud.client.serviceregistry.Registration"] }, {"name":"register","parameterTypes":["org.springframework.cloud.client.serviceregistry.Registration"] }, {"name":"setStatus","parameterTypes":["org.springframework.cloud.client.serviceregistry.Registration","java.lang.String"] }]
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapDisabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.ConditionalOnBootstrapEnabled",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationContext"
},
{
  "name":"org.springframework.context.ApplicationContextAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.context.ApplicationContextInitializer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.ApplicationEvent"
},
{
  "name":"org.springframework.context.ApplicationEventPublisher"
},
{
  "name":"org.springframework.context.ApplicationEventPublisherAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.ApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsAsyncExecution","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.ApplicationStartupAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.ConfigurableApplicationContext"
},
{
  "name":"org.springframework.context.EmbeddedValueResolverAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.EnvironmentAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.Lifecycle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.LifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.MessageSource"
},
{
  "name":"org.springframework.context.MessageSourceAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.MessageSourceResolvable"
},
{
  "name":"org.springframework.context.PayloadApplicationEvent"
},
{
  "name":"org.springframework.context.Phased",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.ResourceLoaderAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.SmartLifecycle",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPhase","parameterTypes":[] }, {"name":"isAutoStartup","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.context.annotation.AnnotationConfigRegistry"
},
{
  "name":"org.springframework.context.annotation.AnnotationScopeMetadataResolver",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AspectJAutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.AutoProxyRegistrar",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Bean",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider"
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"postProcessAfterInstantiation","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInstantiation","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"postProcessMergedBeanDefinition","parameterTypes":["org.springframework.beans.factory.support.RootBeanDefinition","java.lang.Class","java.lang.String"] }, {"name":"postProcessProperties","parameterTypes":["org.springframework.beans.PropertyValues","java.lang.Object","java.lang.String"] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.support.RegisteredBean"] }, {"name":"resetBeanDefinition","parameterTypes":["java.lang.String"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.context.annotation.CommonAnnotationBeanPostProcessor$LookupElement"
},
{
  "name":"org.springframework.context.annotation.ComponentScan",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.ComponentScan$Filter",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.context.annotation.Conditional",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Configuration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassEnhancer$EnhancedConfiguration",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassParser$DefaultDeferredImportSelectorGroup",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ConfigurationClassPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"postProcessBeanDefinitionRegistry","parameterTypes":["org.springframework.beans.factory.support.BeanDefinitionRegistry"] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.support.RegisteredBean"] }, {"name":"setApplicationStartup","parameterTypes":["org.springframework.core.metrics.ApplicationStartup"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setMetadataReaderFactory","parameterTypes":["org.springframework.core.type.classreading.MetadataReaderFactory"] }, {"name":"setResourceLoader","parameterTypes":["org.springframework.core.io.ResourceLoader"] }]
},
{
  "name":"org.springframework.context.annotation.EnableAspectJAutoProxy",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Import",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ImportAware",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.annotation.ImportRuntimeHints",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Lazy",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Primary",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Profile",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.ProfileCondition",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Role",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.annotation.Scope",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.aot.KotlinReflectionBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.aot.ReflectiveProcessorBeanFactoryInitializationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.event.ContextClosedEvent"
},
{
  "name":"org.springframework.context.event.ContextRefreshedEvent"
},
{
  "name":"org.springframework.context.event.ContextStoppedEvent"
},
{
  "name":"org.springframework.context.event.DefaultEventListenerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"createApplicationListener","parameterTypes":["java.lang.String","java.lang.Class","java.lang.reflect.Method"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"supportsMethod","parameterTypes":["java.lang.reflect.Method"] }]
},
{
  "name":"org.springframework.context.event.EventListener"
},
{
  "name":"org.springframework.context.event.EventListenerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.context.event.EventListenerMethodProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.context.event.SmartApplicationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getListenerId","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"supportsSourceType","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.context.i18n.LocaleContext"
},
{
  "name":"org.springframework.context.support.ApplicationObjectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onClose","parameterTypes":[] }, {"name":"onRefresh","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup"
},
{
  "name":"org.springframework.context.support.GenericApplicationContext"
},
{
  "name":"org.springframework.context.support.MessageSourceAccessor"
},
{
  "name":"org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.DefaultParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.MethodParameter"
},
{
  "name":"org.springframework.core.Ordered",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.ParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.PrioritizedParameterNameDiscoverer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addDiscoverer","parameterTypes":["org.springframework.core.ParameterNameDiscoverer"] }, {"name":"getParameterNames","parameterTypes":["java.lang.reflect.Constructor"] }]
},
{
  "name":"org.springframework.core.PriorityOrdered",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.ReactiveAdapter"
},
{
  "name":"org.springframework.core.ReactiveAdapterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.ReactiveTypeDescriptor"
},
{
  "name":"org.springframework.core.ResolvableType"
},
{
  "name":"org.springframework.core.annotation.AliasFor",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.core.annotation.MergedAnnotation"
},
{
  "name":"org.springframework.core.annotation.MergedAnnotations$SearchStrategy"
},
{
  "name":"org.springframework.core.annotation.Order",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.codec.Decoder"
},
{
  "name":"org.springframework.core.codec.Encoder"
},
{
  "name":"org.springframework.core.convert.ConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor"] }]
},
{
  "name":"org.springframework.core.convert.TypeDescriptor"
},
{
  "name":"org.springframework.core.convert.converter.Converter"
},
{
  "name":"org.springframework.core.convert.converter.ConverterFactory"
},
{
  "name":"org.springframework.core.convert.converter.ConverterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter"
},
{
  "name":"org.springframework.core.convert.converter.GenericConverter$ConvertiblePair"
},
{
  "name":"org.springframework.core.convert.support.ConfigurableConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.convert.support.DefaultConversionService"
},
{
  "name":"org.springframework.core.convert.support.GenericConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addConverter","parameterTypes":["java.lang.Class","java.lang.Class","org.springframework.core.convert.converter.Converter"] }, {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.Converter"] }, {"name":"addConverter","parameterTypes":["org.springframework.core.convert.converter.GenericConverter"] }, {"name":"addConverterFactory","parameterTypes":["org.springframework.core.convert.converter.ConverterFactory"] }, {"name":"canBypassConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"canConvert","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"canConvert","parameterTypes":["org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"convert","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"convert","parameterTypes":["java.lang.Object","org.springframework.core.convert.TypeDescriptor","org.springframework.core.convert.TypeDescriptor"] }, {"name":"removeConvertible","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.core.env.ConfigurableEnvironment"
},
{
  "name":"org.springframework.core.env.ConfigurablePropertyResolver"
},
{
  "name":"org.springframework.core.env.Environment"
},
{
  "name":"org.springframework.core.env.EnvironmentCapable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.core.env.MutablePropertySources"
},
{
  "name":"org.springframework.core.env.PropertyResolver"
},
{
  "name":"org.springframework.core.env.PropertySources"
},
{
  "name":"org.springframework.core.io.ProtocolResolver",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.io.Resource"
},
{
  "name":"org.springframework.core.io.ResourceLoader"
},
{
  "name":"org.springframework.core.io.buffer.DataBuffer"
},
{
  "name":"org.springframework.core.io.buffer.DataBufferFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"wrap","parameterTypes":["java.nio.ByteBuffer"] }]
},
{
  "name":"org.springframework.core.io.buffer.DefaultDataBuffer"
},
{
  "name":"org.springframework.core.io.buffer.DefaultDataBufferFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"allocateBuffer","parameterTypes":[] }, {"name":"allocateBuffer","parameterTypes":["int"] }, {"name":"close","parameterTypes":[] }, {"name":"isDirect","parameterTypes":[] }, {"name":"join","parameterTypes":["java.util.List"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }, {"name":"wrap","parameterTypes":["java.nio.ByteBuffer"] }, {"name":"wrap","parameterTypes":["byte[]"] }]
},
{
  "name":"org.springframework.core.io.support.PropertiesLoaderSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setFileEncoding","parameterTypes":["java.lang.String"] }, {"name":"setIgnoreResourceNotFound","parameterTypes":["boolean"] }, {"name":"setLocalOverride","parameterTypes":["boolean"] }, {"name":"setLocation","parameterTypes":["org.springframework.core.io.Resource"] }, {"name":"setLocations","parameterTypes":["org.springframework.core.io.Resource[]"] }, {"name":"setProperties","parameterTypes":["java.util.Properties"] }, {"name":"setPropertiesArray","parameterTypes":["java.util.Properties[]"] }, {"name":"setPropertiesPersister","parameterTypes":["org.springframework.util.PropertiesPersister"] }]
},
{
  "name":"org.springframework.core.metrics.ApplicationStartup"
},
{
  "name":"org.springframework.core.task.AsyncListenableTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.task.AsyncTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"execute","parameterTypes":["java.lang.Runnable","long"] }, {"name":"submitCompletable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitCompletable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.core.task.SimpleAsyncTaskExecutor"
},
{
  "name":"org.springframework.core.task.TaskDecorator"
},
{
  "name":"org.springframework.core.task.TaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.core.type.AnnotationMetadata"
},
{
  "name":"org.springframework.core.type.classreading.CachingMetadataReaderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMetadataReader","parameterTypes":["org.springframework.core.io.Resource"] }]
},
{
  "name":"org.springframework.core.type.classreading.MetadataReader"
},
{
  "name":"org.springframework.core.type.classreading.MetadataReaderFactory",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"from","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"of","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }, {"name":"valueOf","parameterTypes":["org.springframework.boot.type.classreading.ConcurrentReferenceCachingMetadataReaderFactory"] }]
},
{
  "name":"org.springframework.core.type.classreading.SimpleMetadataReaderFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getMetadataReader","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.dao.DataAccessException"
},
{
  "name":"org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.dao.support.PersistenceExceptionTranslator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.annotation.Id",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.annotation.Persistent",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.aot.AuditingBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.aot.ManagedTypesBeanFactoryInitializationAotProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.cassandra.ReactiveSession"
},
{
  "name":"org.springframework.data.convert.CustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class"] }, {"name":"getCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"getPropertyValueConversions","parameterTypes":[] }, {"name":"getSimpleTypeHolder","parameterTypes":[] }, {"name":"hasCustomReadTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class"] }, {"name":"hasCustomWriteTarget","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"hasValueConverter","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"isSimpleType","parameterTypes":["java.lang.Class"] }, {"name":"registerConvertersIn","parameterTypes":["org.springframework.core.convert.converter.ConverterRegistry"] }]
},
{
  "name":"org.springframework.data.convert.CustomConversions$ConverterRegistration"
},
{
  "name":"org.springframework.data.convert.CustomConversions$ConverterRegistrationIntent"
},
{
  "name":"org.springframework.data.convert.CustomConversions$StoreConversions"
},
{
  "name":"org.springframework.data.convert.EntityConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.convert.EntityReader",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.convert.EntityWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.convert.PropertyValueConversions"
},
{
  "name":"org.springframework.data.domain.Example",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$GenericPropertyMatcher",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$GenericPropertyMatchers",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$MatchMode",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$MatcherConfigurer",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$NoOpPropertyValueTransformer",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$NullHandler",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$PropertySpecifier",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$PropertySpecifiers",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$PropertyValueTransformer",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ExampleMatcher$StringMatcher",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Limit",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Limit$Limited",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Limit$Unlimited",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"toList","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.domain.OffsetScrollPosition",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.OffsetScrollPosition$OffsetPositionFunction",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "allRecordComponents":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.PageRequest"
},
{
  "name":"org.springframework.data.domain.Pageable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ScrollPosition",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.ScrollPosition$Direction",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Sort",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Sort$Direction",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Sort$NullHandling",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Sort$Order",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Sort$TypedSort",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.domain.Window"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ElasticsearchTemplate"
},
{
  "name":"org.springframework.data.elasticsearch.client.elc.ReactiveElasticsearchClient"
},
{
  "name":"org.springframework.data.elasticsearch.repository.ElasticsearchRepository"
},
{
  "name":"org.springframework.data.jdbc.repository.config.AbstractJdbcConfiguration"
},
{
  "name":"org.springframework.data.jpa.repository.JpaRepository"
},
{
  "name":"org.springframework.data.keyvalue.annotation.KeySpace",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.keyvalue.aot.KeyValueRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.ldap.repository.LdapRepository"
},
{
  "name":"org.springframework.data.mapping.Association"
},
{
  "name":"org.springframework.data.mapping.MappingException"
},
{
  "name":"org.springframework.data.mapping.PersistentEntity"
},
{
  "name":"org.springframework.data.mapping.PersistentProperty"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyAccessor"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPath"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPathAccessor"
},
{
  "name":"org.springframework.data.mapping.PersistentPropertyPaths"
},
{
  "name":"org.springframework.data.mapping.PropertyPath"
},
{
  "name":"org.springframework.data.mapping.callback.EntityCallbacks"
},
{
  "name":"org.springframework.data.mapping.callback.ReactiveEntityCallbacks"
},
{
  "name":"org.springframework.data.mapping.context.AbstractMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"createPersistentProperty","parameterTypes":["org.springframework.data.mapping.model.Property","org.springframework.data.mapping.model.MutablePersistentEntity","org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"findPersistentPropertyPaths","parameterTypes":["java.lang.Class","java.util.function.Predicate"] }, {"name":"getManagedTypes","parameterTypes":[] }, {"name":"getPersistentEntities","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","java.lang.Class"] }, {"name":"getPersistentPropertyPath","parameterTypes":["java.lang.String","org.springframework.data.util.TypeInformation"] }, {"name":"getPersistentPropertyPath","parameterTypes":["org.springframework.data.mapping.PropertyPath"] }, {"name":"hasPersistentEntityFor","parameterTypes":["java.lang.Class"] }, {"name":"initialize","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setEnvironment","parameterTypes":["org.springframework.core.env.Environment"] }, {"name":"setInitialEntitySet","parameterTypes":["java.util.Set"] }, {"name":"setManagedTypes","parameterTypes":["org.springframework.data.domain.ManagedTypes"] }, {"name":"setSimpleTypeHolder","parameterTypes":["org.springframework.data.mapping.model.SimpleTypeHolder"] }, {"name":"setStrict","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.data.mapping.context.MappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["java.lang.Class"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getRequiredPersistentEntity","parameterTypes":["org.springframework.data.util.TypeInformation"] }]
},
{
  "name":"org.springframework.data.mapping.model.EntityInstantiators"
},
{
  "name":"org.springframework.data.mapping.model.FieldNamingStrategy"
},
{
  "name":"org.springframework.data.mapping.model.MutablePersistentEntity"
},
{
  "name":"org.springframework.data.mapping.model.ParameterValueProvider"
},
{
  "name":"org.springframework.data.mapping.model.Property"
},
{
  "name":"org.springframework.data.mapping.model.SimpleTypeHolder"
},
{
  "name":"org.springframework.data.mapping.model.ValueExpressionEvaluator"
},
{
  "name":"org.springframework.data.mongodb.CodecRegistryProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCodecFor","parameterTypes":["java.lang.Class"] }, {"name":"hasCodecFor","parameterTypes":["java.lang.Class"] }]
},
{
  "name":"org.springframework.data.mongodb.MongoDatabaseFactory"
},
{
  "name":"org.springframework.data.mongodb.MongoManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.ReactiveMongoDatabaseFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"isTransactionActive","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.SessionSynchronization"
},
{
  "name":"org.springframework.data.mongodb.aot.MongoManagedTypesBeanRegistrationAotProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.aot.MongoRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.config.GeoJsonConfiguration",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.BulkOperations$BulkMode"
},
{
  "name":"org.springframework.data.mongodb.core.ChangeStreamEvent"
},
{
  "name":"org.springframework.data.mongodb.core.ChangeStreamOptions"
},
{
  "name":"org.springframework.data.mongodb.core.CollectionOptions"
},
{
  "name":"org.springframework.data.mongodb.core.CollectionPreparer"
},
{
  "name":"org.springframework.data.mongodb.core.CollectionPreparerSupport$ReactiveCollectionPreparerDelegate"
},
{
  "name":"org.springframework.data.mongodb.core.EntityOperations$AdaptibleEntity"
},
{
  "name":"org.springframework.data.mongodb.core.FindAndModifyOptions"
},
{
  "name":"org.springframework.data.mongodb.core.FindAndReplaceOptions"
},
{
  "name":"org.springframework.data.mongodb.core.FindPublisherPreparer"
},
{
  "name":"org.springframework.data.mongodb.core.MappedDocument"
},
{
  "name":"org.springframework.data.mongodb.core.MongoAction"
},
{
  "name":"org.springframework.data.mongodb.core.MongoTemplate"
},
{
  "name":"org.springframework.data.mongodb.core.QueryOperations$AggregationDefinition"
},
{
  "name":"org.springframework.data.mongodb.core.QueryOperations$DistinctQueryContext"
},
{
  "name":"org.springframework.data.mongodb.core.QueryOperations$QueryContext"
},
{
  "name":"org.springframework.data.mongodb.core.QueryOperations$UpdateContext"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveAggregationOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveAggregationOperation$ReactiveAggregation"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveBulkOperations"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveChangeStreamOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveChangeStreamOperation$ReactiveChangeStream"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveCollectionCallback"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveDatabaseCallback"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveFindOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveFindOperation$ReactiveFind"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveFluentMongoOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveInsertOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveInsertOperation$ReactiveInsert"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMapReduceOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMapReduceOperation$ReactiveMapReduce"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"changeStream","parameterTypes":["java.lang.String","org.springframework.data.mongodb.core.ChangeStreamOptions","java.lang.Class"] }, {"name":"changeStream","parameterTypes":["org.springframework.data.mongodb.core.ChangeStreamOptions","java.lang.Class"] }, {"name":"createView","parameterTypes":["java.lang.String","java.lang.Class","org.springframework.data.mongodb.core.aggregation.AggregationPipeline"] }, {"name":"createView","parameterTypes":["java.lang.String","java.lang.Class","org.springframework.data.mongodb.core.aggregation.AggregationOperation[]"] }, {"name":"estimatedCount","parameterTypes":["java.lang.Class"] }, {"name":"exactCount","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"exactCount","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","java.lang.String"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.FindAndReplaceOptions"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.FindAndReplaceOptions","java.lang.Class","java.lang.Class"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.FindAndReplaceOptions","java.lang.Class","java.lang.String"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.FindAndReplaceOptions","java.lang.String"] }, {"name":"findDistinct","parameterTypes":["java.lang.String","java.lang.Class","java.lang.Class"] }, {"name":"findDistinct","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String","java.lang.String","java.lang.Class"] }, {"name":"replace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object"] }, {"name":"replace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","java.lang.String"] }, {"name":"replace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.ReplaceOptions"] }, {"name":"withSession","parameterTypes":["java.util.function.Supplier"] }]
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"aggregate","parameterTypes":["org.springframework.data.mongodb.core.aggregation.Aggregation","java.lang.Class","java.lang.Class"] }, {"name":"aggregate","parameterTypes":["org.springframework.data.mongodb.core.aggregation.Aggregation","java.lang.String","java.lang.Class"] }, {"name":"aggregate","parameterTypes":["org.springframework.data.mongodb.core.aggregation.TypedAggregation","java.lang.Class"] }, {"name":"aggregate","parameterTypes":["org.springframework.data.mongodb.core.aggregation.TypedAggregation","java.lang.String","java.lang.Class"] }, {"name":"aggregateAndReturn","parameterTypes":["java.lang.Class"] }, {"name":"bulkOps","parameterTypes":["org.springframework.data.mongodb.core.BulkOperations$BulkMode","java.lang.Class"] }, {"name":"bulkOps","parameterTypes":["org.springframework.data.mongodb.core.BulkOperations$BulkMode","java.lang.Class","java.lang.String"] }, {"name":"bulkOps","parameterTypes":["org.springframework.data.mongodb.core.BulkOperations$BulkMode","java.lang.String"] }, {"name":"changeStream","parameterTypes":["java.lang.Class"] }, {"name":"changeStream","parameterTypes":["java.lang.String","java.lang.String","org.springframework.data.mongodb.core.ChangeStreamOptions","java.lang.Class"] }, {"name":"close","parameterTypes":[] }, {"name":"collectionExists","parameterTypes":["java.lang.Class"] }, {"name":"collectionExists","parameterTypes":["java.lang.String"] }, {"name":"count","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"count","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"count","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String"] }, {"name":"createCollection","parameterTypes":["java.lang.Class"] }, {"name":"createCollection","parameterTypes":["java.lang.Class","org.springframework.data.mongodb.core.CollectionOptions"] }, {"name":"createCollection","parameterTypes":["java.lang.String"] }, {"name":"createCollection","parameterTypes":["java.lang.String","org.springframework.data.mongodb.core.CollectionOptions"] }, {"name":"createView","parameterTypes":["java.lang.String","java.lang.Class","org.springframework.data.mongodb.core.aggregation.AggregationPipeline","org.springframework.data.mongodb.core.ViewOptions"] }, {"name":"createView","parameterTypes":["java.lang.String","java.lang.String","org.springframework.data.mongodb.core.aggregation.AggregationPipeline","org.springframework.data.mongodb.core.ViewOptions"] }, {"name":"dropCollection","parameterTypes":["java.lang.Class"] }, {"name":"dropCollection","parameterTypes":["java.lang.String"] }, {"name":"estimatedCount","parameterTypes":["java.lang.String"] }, {"name":"exactCount","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"execute","parameterTypes":["java.lang.Class","org.springframework.data.mongodb.core.ReactiveCollectionCallback"] }, {"name":"execute","parameterTypes":["java.lang.String","org.springframework.data.mongodb.core.ReactiveCollectionCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.mongodb.core.ReactiveDatabaseCallback"] }, {"name":"executeCommand","parameterTypes":["java.lang.String"] }, {"name":"executeCommand","parameterTypes":["org.bson.Document"] }, {"name":"executeCommand","parameterTypes":["org.bson.Document","com.mongodb.ReadPreference"] }, {"name":"exists","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"exists","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"exists","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String"] }, {"name":"find","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"find","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"findAll","parameterTypes":["java.lang.Class"] }, {"name":"findAll","parameterTypes":["java.lang.Class","java.lang.String"] }, {"name":"findAllAndRemove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"findAllAndRemove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"findAllAndRemove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String"] }, {"name":"findAndModify","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class"] }, {"name":"findAndModify","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class","java.lang.String"] }, {"name":"findAndModify","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","org.springframework.data.mongodb.core.FindAndModifyOptions","java.lang.Class"] }, {"name":"findAndModify","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","org.springframework.data.mongodb.core.FindAndModifyOptions","java.lang.Class","java.lang.String"] }, {"name":"findAndRemove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"findAndRemove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"findAndReplace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.FindAndReplaceOptions","java.lang.Class","java.lang.String","java.lang.Class"] }, {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"findById","parameterTypes":["java.lang.Object","java.lang.Class","java.lang.String"] }, {"name":"findDistinct","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String","java.lang.Class","java.lang.Class"] }, {"name":"findDistinct","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String","java.lang.String","java.lang.Class","java.lang.Class"] }, {"name":"findOne","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"findOne","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"geoNear","parameterTypes":["org.springframework.data.mongodb.core.query.NearQuery","java.lang.Class"] }, {"name":"geoNear","parameterTypes":["org.springframework.data.mongodb.core.query.NearQuery","java.lang.Class","java.lang.String"] }, {"name":"getCollection","parameterTypes":["java.lang.String"] }, {"name":"getCollectionName","parameterTypes":["java.lang.Class"] }, {"name":"getCollectionNames","parameterTypes":[] }, {"name":"getConverter","parameterTypes":[] }, {"name":"indexOps","parameterTypes":["java.lang.Class"] }, {"name":"indexOps","parameterTypes":["java.lang.String"] }, {"name":"insert","parameterTypes":["java.lang.Class"] }, {"name":"insert","parameterTypes":["java.lang.Object"] }, {"name":"insert","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"insert","parameterTypes":["java.util.Collection","java.lang.Class"] }, {"name":"insert","parameterTypes":["java.util.Collection","java.lang.String"] }, {"name":"insert","parameterTypes":["reactor.core.publisher.Mono"] }, {"name":"insertAll","parameterTypes":["java.util.Collection"] }, {"name":"insertAll","parameterTypes":["reactor.core.publisher.Mono"] }, {"name":"insertAll","parameterTypes":["reactor.core.publisher.Mono","java.lang.Class"] }, {"name":"insertAll","parameterTypes":["reactor.core.publisher.Mono","java.lang.String"] }, {"name":"mapReduce","parameterTypes":["java.lang.Class"] }, {"name":"mapReduce","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.Class","java.lang.String","java.lang.String","org.springframework.data.mongodb.core.mapreduce.MapReduceOptions"] }, {"name":"mapReduce","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String","java.lang.Class","java.lang.String","java.lang.String","org.springframework.data.mongodb.core.mapreduce.MapReduceOptions"] }, {"name":"query","parameterTypes":["java.lang.Class"] }, {"name":"remove","parameterTypes":["java.lang.Class"] }, {"name":"remove","parameterTypes":["java.lang.Object"] }, {"name":"remove","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"remove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"remove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"remove","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.String"] }, {"name":"remove","parameterTypes":["reactor.core.publisher.Mono"] }, {"name":"remove","parameterTypes":["reactor.core.publisher.Mono","java.lang.String"] }, {"name":"replace","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Object","org.springframework.data.mongodb.core.ReplaceOptions","java.lang.String"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"save","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Mono"] }, {"name":"save","parameterTypes":["reactor.core.publisher.Mono","java.lang.String"] }, {"name":"scroll","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"scroll","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"tail","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class"] }, {"name":"tail","parameterTypes":["org.springframework.data.mongodb.core.query.Query","java.lang.Class","java.lang.String"] }, {"name":"update","parameterTypes":["java.lang.Class"] }, {"name":"updateFirst","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class"] }, {"name":"updateFirst","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class","java.lang.String"] }, {"name":"updateFirst","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.String"] }, {"name":"updateMulti","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class"] }, {"name":"updateMulti","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class","java.lang.String"] }, {"name":"updateMulti","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.String"] }, {"name":"upsert","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class"] }, {"name":"upsert","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.Class","java.lang.String"] }, {"name":"upsert","parameterTypes":["org.springframework.data.mongodb.core.query.Query","org.springframework.data.mongodb.core.query.UpdateDefinition","java.lang.String"] }, {"name":"withSession","parameterTypes":["com.mongodb.ClientSessionOptions"] }, {"name":"withSession","parameterTypes":["com.mongodb.reactivestreams.client.ClientSession"] }, {"name":"withSession","parameterTypes":["org.reactivestreams.Publisher"] }]
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate$DocumentCallback"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate$PersistableEntityModel"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReactiveCollectionQueryCallback"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveMongoTemplate$ReadDocumentCallback"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveRemoveOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveRemoveOperation$ReactiveRemove"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveSessionCallback"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveSessionScoped"
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveUpdateOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.ReactiveUpdateOperation$ReactiveUpdate"
},
{
  "name":"org.springframework.data.mongodb.core.ReadConcernAware",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReadPreferenceAware",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.ReplaceOptions"
},
{
  "name":"org.springframework.data.mongodb.core.SimpleReactiveMongoDatabaseFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"getCodecRegistry","parameterTypes":[] }, {"name":"getExceptionTranslator","parameterTypes":[] }, {"name":"getMongoDatabase","parameterTypes":[] }, {"name":"getMongoDatabase","parameterTypes":["java.lang.String"] }, {"name":"getSession","parameterTypes":["com.mongodb.ClientSessionOptions"] }, {"name":"withSession","parameterTypes":["com.mongodb.reactivestreams.client.ClientSession"] }]
},
{
  "name":"org.springframework.data.mongodb.core.ViewOptions"
},
{
  "name":"org.springframework.data.mongodb.core.WriteConcernResolver"
},
{
  "name":"org.springframework.data.mongodb.core.WriteResultChecking"
},
{
  "name":"org.springframework.data.mongodb.core.aggregation.Aggregation"
},
{
  "name":"org.springframework.data.mongodb.core.aggregation.AggregationOperation"
},
{
  "name":"org.springframework.data.mongodb.core.aggregation.AggregationOptions"
},
{
  "name":"org.springframework.data.mongodb.core.aggregation.AggregationPipeline"
},
{
  "name":"org.springframework.data.mongodb.core.aggregation.TypedAggregation"
},
{
  "name":"org.springframework.data.mongodb.core.annotation.Collation",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.convert.AbstractMongoConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getConversionService","parameterTypes":[] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"setCustomConversions","parameterTypes":["org.springframework.data.convert.CustomConversions"] }, {"name":"setInstantiators","parameterTypes":["org.springframework.data.mapping.model.EntityInstantiators"] }]
},
{
  "name":"org.springframework.data.mongodb.core.convert.DbRefProxyHandler"
},
{
  "name":"org.springframework.data.mongodb.core.convert.DbRefResolver"
},
{
  "name":"org.springframework.data.mongodb.core.convert.DbRefResolverCallback"
},
{
  "name":"org.springframework.data.mongodb.core.convert.DocumentAccessor"
},
{
  "name":"org.springframework.data.mongodb.core.convert.MappingMongoConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"convertToMongoType","parameterTypes":["java.lang.Object","org.springframework.data.mongodb.core.mapping.MongoPersistentEntity"] }, {"name":"convertToMongoType","parameterTypes":["java.lang.Object","org.springframework.data.util.TypeInformation"] }, {"name":"getCodecRegistry","parameterTypes":[] }, {"name":"getCustomConversions","parameterTypes":[] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getMappingContext","parameterTypes":[] }, {"name":"getProjectionFactory","parameterTypes":[] }, {"name":"getTypeMapper","parameterTypes":[] }, {"name":"project","parameterTypes":["org.springframework.data.projection.EntityProjection","org.bson.conversions.Bson"] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toDBRef","parameterTypes":["java.lang.Object","org.springframework.data.mongodb.core.mapping.MongoPersistentProperty"] }, {"name":"toDocumentPointer","parameterTypes":["java.lang.Object","org.springframework.data.mongodb.core.mapping.MongoPersistentProperty"] }, {"name":"write","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext"
},
{
  "name":"org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider"
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"convertId","parameterTypes":["java.lang.Object","java.lang.Class"] }, {"name":"mapValueToTargetType","parameterTypes":["java.lang.Object","java.lang.Class","org.springframework.data.mongodb.core.convert.DbRefResolver"] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoTypeMapper"
},
{
  "name":"org.springframework.data.mongodb.core.convert.MongoWriter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"convertToMongoType","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.data.mongodb.core.convert.ObjectPath"
},
{
  "name":"org.springframework.data.mongodb.core.index.IndexOperations"
},
{
  "name":"org.springframework.data.mongodb.core.index.ReactiveIndexOperations"
},
{
  "name":"org.springframework.data.mongodb.core.mapping.BasicMongoPersistentEntity"
},
{
  "name":"org.springframework.data.mongodb.core.mapping.Document",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.DocumentPointer"
},
{
  "name":"org.springframework.data.mongodb.core.mapping.Field",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.core.mapping.MongoMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.core.mapping.MongoPersistentEntity"
},
{
  "name":"org.springframework.data.mongodb.core.mapping.MongoPersistentProperty"
},
{
  "name":"org.springframework.data.mongodb.core.mapping.event.MongoMappingEvent"
},
{
  "name":"org.springframework.data.mongodb.core.mapreduce.MapReduceOptions"
},
{
  "name":"org.springframework.data.mongodb.core.query.BasicQuery",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.query.BasicQuery$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.springframework.data.mongodb.core.query.Collation"
},
{
  "name":"org.springframework.data.mongodb.core.query.NearQuery"
},
{
  "name":"org.springframework.data.mongodb.core.query.Query",
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.core.query.Query$$SpringCGLIB$$0",
  "fields":[{"name":"CGLIB$CALLBACK_FILTER"}, {"name":"CGLIB$FACTORY_DATA"}],
  "methods":[{"name":"CGLIB$SET_THREAD_CALLBACKS","parameterTypes":["org.springframework.cglib.proxy.Callback[]"] }]
},
{
  "name":"org.springframework.data.mongodb.core.query.UpdateDefinition"
},
{
  "name":"org.springframework.data.mongodb.gridfs.GridFsObject"
},
{
  "name":"org.springframework.data.mongodb.gridfs.GridFsOperationsSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.gridfs.ReactiveGridFsOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.Object"] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.String"] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.String","java.lang.Object"] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.String","java.lang.String"] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.String","java.lang.String","org.bson.Document"] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.String","org.bson.Document"] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","org.bson.Document"] }]
},
{
  "name":"org.springframework.data.mongodb.gridfs.ReactiveGridFsResource"
},
{
  "name":"org.springframework.data.mongodb.gridfs.ReactiveGridFsTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"delete","parameterTypes":["org.springframework.data.mongodb.core.query.Query"] }, {"name":"find","parameterTypes":["org.springframework.data.mongodb.core.query.Query"] }, {"name":"findFirst","parameterTypes":["org.springframework.data.mongodb.core.query.Query"] }, {"name":"findOne","parameterTypes":["org.springframework.data.mongodb.core.query.Query"] }, {"name":"getResource","parameterTypes":["com.mongodb.client.gridfs.model.GridFSFile"] }, {"name":"getResource","parameterTypes":["java.lang.String"] }, {"name":"getResources","parameterTypes":["java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"store","parameterTypes":["org.reactivestreams.Publisher","java.lang.String","java.lang.String","java.lang.Object"] }, {"name":"store","parameterTypes":["org.springframework.data.mongodb.gridfs.GridFsObject"] }]
},
{
  "name":"org.springframework.data.mongodb.gridfs.ReactiveGridFsTemplate$ReactiveBucketCallback"
},
{
  "name":"org.springframework.data.mongodb.repository.ReactiveMongoRepository",
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findAll","parameterTypes":["org.springframework.data.domain.Example","org.springframework.data.domain.Sort"] }, {"name":"insert","parameterTypes":["java.lang.Iterable"] }, {"name":"insert","parameterTypes":["java.lang.Object"] }, {"name":"insert","parameterTypes":["org.reactivestreams.Publisher"] }]
},
{
  "name":"org.springframework.data.mongodb.repository.aot.AotMongoRepositoryPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.repository.aot.RepositoryRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.mongodb.repository.config.EnableReactiveMongoRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.mongodb.repository.config.ReactiveMongoRepositoryConfigurationExtension"
},
{
  "name":"org.springframework.data.mongodb.repository.support.MongoRepositoryFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.mongodb.repository.support.ReactiveMongoRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }, {"name":"afterPropertiesSet","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.projection.EntityProjection"
},
{
  "name":"org.springframework.data.projection.EntityProjection$PropertyProjection"
},
{
  "name":"org.springframework.data.projection.EntityProjectionIntrospector"
},
{
  "name":"org.springframework.data.projection.ProjectionFactory"
},
{
  "name":"org.springframework.data.querydsl.aot.QuerydslHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.querydsl.binding.QuerydslBindings"
},
{
  "name":"org.springframework.data.querydsl.binding.QuerydslBindingsFactory"
},
{
  "name":"org.springframework.data.querydsl.binding.QuerydslPredicate"
},
{
  "name":"org.springframework.data.r2dbc.aot.R2dbcRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.r2dbc.convert.MappingR2dbcConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getArrayValue","parameterTypes":["org.springframework.data.relational.core.dialect.ArrayColumns","org.springframework.data.relational.core.mapping.RelationalPersistentProperty","java.lang.Object"] }, {"name":"getTargetType","parameterTypes":["java.lang.Class"] }, {"name":"isSimpleType","parameterTypes":["java.lang.Class"] }, {"name":"populateIdIfNecessary","parameterTypes":["java.lang.Object"] }, {"name":"read","parameterTypes":["java.lang.Class","io.r2dbc.spi.Row","io.r2dbc.spi.RowMetadata"] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"toRowDocument","parameterTypes":["java.lang.Class","io.r2dbc.spi.Readable","java.lang.Iterable"] }, {"name":"write","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.r2dbc.convert.R2dbcConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.r2dbc.convert.R2dbcCustomConversions",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.r2dbc.core.FluentR2dbcOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"query","parameterTypes":["org.springframework.r2dbc.core.PreparedOperation","java.lang.Class","java.util.function.Function"] }, {"name":"query","parameterTypes":["org.springframework.r2dbc.core.PreparedOperation","java.util.function.Function"] }]
},
{
  "name":"org.springframework.data.r2dbc.core.R2dbcEntityTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"count","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Class"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"exists","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"getConverter","parameterTypes":[] }, {"name":"getDataAccessStrategy","parameterTypes":[] }, {"name":"getDatabaseClient","parameterTypes":[] }, {"name":"getRowsFetchSpec","parameterTypes":["org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec","java.lang.Class","java.lang.Class"] }, {"name":"insert","parameterTypes":["java.lang.Class"] }, {"name":"insert","parameterTypes":["java.lang.Object"] }, {"name":"query","parameterTypes":["org.springframework.r2dbc.core.PreparedOperation","java.lang.Class"] }, {"name":"query","parameterTypes":["org.springframework.r2dbc.core.PreparedOperation","java.lang.Class","java.lang.Class"] }, {"name":"query","parameterTypes":["org.springframework.r2dbc.core.PreparedOperation","java.lang.Class","java.util.function.BiFunction"] }, {"name":"query","parameterTypes":["org.springframework.r2dbc.core.PreparedOperation","java.util.function.BiFunction"] }, {"name":"select","parameterTypes":["java.lang.Class"] }, {"name":"select","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"selectOne","parameterTypes":["org.springframework.data.relational.core.query.Query","java.lang.Class"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"update","parameterTypes":["java.lang.Class"] }, {"name":"update","parameterTypes":["java.lang.Object"] }, {"name":"update","parameterTypes":["org.springframework.data.relational.core.query.Query","org.springframework.data.relational.core.query.Update","java.lang.Class"] }]
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveDataAccessStrategy"
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveDeleteOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveDeleteOperation$ReactiveDelete"
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveInsertOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveInsertOperation$ReactiveInsert"
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveSelectOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveSelectOperation$ReactiveSelect"
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveUpdateOperation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.core.ReactiveUpdateOperation$ReactiveUpdate"
},
{
  "name":"org.springframework.data.r2dbc.core.StatementMapper$SelectSpec"
},
{
  "name":"org.springframework.data.r2dbc.dialect.DialectResolver$BuiltInDialectProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.dialect.DialectResolver$R2dbcDialectProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.dialect.DialectResolver.BuiltInDialectProvider"
},
{
  "name":"org.springframework.data.r2dbc.dialect.R2dbcDialect"
},
{
  "name":"org.springframework.data.r2dbc.mapping.OutboundRow"
},
{
  "name":"org.springframework.data.r2dbc.mapping.R2dbcMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.r2dbc.repository.R2dbcRepository"
},
{
  "name":"org.springframework.data.r2dbc.repository.config.EnableR2dbcRepositories",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.r2dbc.repository.support.R2dbcRepositoryFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Class"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.data.redis.aot.RedisRuntimeHints",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.cache.RedisCache"
},
{
  "name":"org.springframework.data.redis.connection.ClusterCommandExecutor"
},
{
  "name":"org.springframework.data.redis.connection.ClusterTopologyProvider"
},
{
  "name":"org.springframework.data.redis.connection.DataType"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.redis.connection.RedisClusterConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisClusterConnection"
},
{
  "name":"org.springframework.data.redis.connection.RedisConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisConfiguration$ClusterConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.RedisConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.redis.connection.RedisKeyCommands"
},
{
  "name":"org.springframework.data.redis.connection.RedisNode"
},
{
  "name":"org.springframework.data.redis.connection.RedisPassword"
},
{
  "name":"org.springframework.data.redis.connection.RedisSentinelConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisSentinelConnection"
},
{
  "name":"org.springframework.data.redis.connection.RedisSocketConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.RedisStandaloneConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.SortParameters"
},
{
  "name":"org.springframework.data.redis.connection.jedis.JedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.ClusterConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceClientConfiguration$LettuceClientConfigurationBuilder"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceClusterConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnection$PipeliningFlushPolicy"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getClusterConnection","parameterTypes":[] }, {"name":"getConnection","parameterTypes":[] }, {"name":"getConvertPipelineAndTxResults","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getReactiveClusterConnection","parameterTypes":[] }, {"name":"getReactiveConnection","parameterTypes":[] }, {"name":"getSentinelConnection","parameterTypes":[] }, {"name":"isAutoStartup","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"translateExceptionIfPossible","parameterTypes":["java.lang.RuntimeException"] }]
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$MutableLettuceClientConfiguration"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$SharedConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory$State"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisClusterConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisConnection"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.RedisCredentialsProviderFactory"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.StandaloneConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.StaticMasterReplicaConnectionProvider"
},
{
  "name":"org.springframework.data.redis.connection.lettuce.aot.LettuceRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.BoundGeoOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundHashOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundListOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundSetOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundStreamOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundValueOperations"
},
{
  "name":"org.springframework.data.redis.core.BoundZSetOperations"
},
{
  "name":"org.springframework.data.redis.core.BulkMapper"
},
{
  "name":"org.springframework.data.redis.core.ClusterOperations"
},
{
  "name":"org.springframework.data.redis.core.Cursor"
},
{
  "name":"org.springframework.data.redis.core.GeoOperations"
},
{
  "name":"org.springframework.data.redis.core.HashOperations"
},
{
  "name":"org.springframework.data.redis.core.HyperLogLogOperations"
},
{
  "name":"org.springframework.data.redis.core.KeyOperations"
},
{
  "name":"org.springframework.data.redis.core.ListOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveGeoOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveHashOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveHyperLogLogOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveListOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisCallback"
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List"] }, {"name":"listenToChannel","parameterTypes":["java.lang.String[]"] }, {"name":"listenToChannelLater","parameterTypes":["java.lang.String[]"] }, {"name":"listenToPattern","parameterTypes":["java.lang.String[]"] }, {"name":"listenToPatternLater","parameterTypes":["java.lang.String[]"] }, {"name":"scan","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisSessionCallback"
},
{
  "name":"org.springframework.data.redis.core.ReactiveRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, {"name":"createFlux","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback"] }, {"name":"createMono","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback"] }, {"name":"delete","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"delete","parameterTypes":["java.lang.Object[]"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisCallback","boolean"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.util.List"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.util.List","org.springframework.data.redis.serializer.RedisElementWriter","org.springframework.data.redis.serializer.RedisElementReader"] }, {"name":"executeInSession","parameterTypes":["org.springframework.data.redis.core.ReactiveRedisSessionCallback"] }, {"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, {"name":"getConnectionFactory","parameterTypes":[] }, {"name":"getExpire","parameterTypes":["java.lang.Object"] }, {"name":"getSerializationContext","parameterTypes":[] }, {"name":"hasKey","parameterTypes":["java.lang.Object"] }, {"name":"keys","parameterTypes":["java.lang.Object"] }, {"name":"listenTo","parameterTypes":["org.springframework.data.redis.listener.Topic[]"] }, {"name":"listenToLater","parameterTypes":["org.springframework.data.redis.listener.Topic[]"] }, {"name":"move","parameterTypes":["java.lang.Object","int"] }, {"name":"opsForGeo","parameterTypes":[] }, {"name":"opsForGeo","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForHash","parameterTypes":[] }, {"name":"opsForHash","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForHyperLogLog","parameterTypes":[] }, {"name":"opsForHyperLogLog","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForList","parameterTypes":[] }, {"name":"opsForList","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForSet","parameterTypes":[] }, {"name":"opsForSet","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForStream","parameterTypes":[] }, {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForValue","parameterTypes":[] }, {"name":"opsForValue","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"opsForZSet","parameterTypes":[] }, {"name":"opsForZSet","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializationContext"] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"randomKey","parameterTypes":[] }, {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"type","parameterTypes":["java.lang.Object"] }, {"name":"unlink","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"unlink","parameterTypes":["java.lang.Object[]"] }]
},
{
  "name":"org.springframework.data.redis.core.ReactiveSetOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveStreamOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveStringRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.ReactiveValueOperations"
},
{
  "name":"org.springframework.data.redis.core.ReactiveZSetOperations"
},
{
  "name":"org.springframework.data.redis.core.RedisAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getConnectionFactory","parameterTypes":[] }, {"name":"getRequiredConnectionFactory","parameterTypes":[] }, {"name":"setConnectionFactory","parameterTypes":["org.springframework.data.redis.connection.RedisConnectionFactory"] }]
},
{
  "name":"org.springframework.data.redis.core.RedisCallback"
},
{
  "name":"org.springframework.data.redis.core.RedisHash",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.redis.core.RedisOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"expire","parameterTypes":["java.lang.Object","java.time.Duration"] }, {"name":"expireAt","parameterTypes":["java.lang.Object","java.time.Instant"] }, {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit"] }]
},
{
  "name":"org.springframework.data.redis.core.RedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"boundGeoOps","parameterTypes":["java.lang.Object"] }, {"name":"boundHashOps","parameterTypes":["java.lang.Object"] }, {"name":"boundListOps","parameterTypes":["java.lang.Object"] }, {"name":"boundSetOps","parameterTypes":["java.lang.Object"] }, {"name":"boundStreamOps","parameterTypes":["java.lang.Object"] }, {"name":"boundValueOps","parameterTypes":["java.lang.Object"] }, {"name":"boundZSetOps","parameterTypes":["java.lang.Object"] }, {"name":"close","parameterTypes":[] }, {"name":"convertAndSend","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"copy","parameterTypes":["java.lang.Object","java.lang.Object","boolean"] }, {"name":"countExistingKeys","parameterTypes":["java.util.Collection"] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"delete","parameterTypes":["java.util.Collection"] }, {"name":"discard","parameterTypes":[] }, {"name":"dump","parameterTypes":["java.lang.Object"] }, {"name":"exec","parameterTypes":[] }, {"name":"exec","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.RedisCallback","boolean","boolean"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","java.util.List","java.lang.Object[]"] }, {"name":"execute","parameterTypes":["org.springframework.data.redis.core.script.RedisScript","org.springframework.data.redis.serializer.RedisSerializer","org.springframework.data.redis.serializer.RedisSerializer","java.util.List","java.lang.Object[]"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.RedisCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback"] }, {"name":"executePipelined","parameterTypes":["org.springframework.data.redis.core.SessionCallback","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"executeWithStickyConnection","parameterTypes":["org.springframework.data.redis.core.RedisCallback"] }, {"name":"expire","parameterTypes":["java.lang.Object","long","java.util.concurrent.TimeUnit"] }, {"name":"expireAt","parameterTypes":["java.lang.Object","java.util.Date"] }, {"name":"getClientList","parameterTypes":[] }, {"name":"getDefaultSerializer","parameterTypes":[] }, {"name":"getExpire","parameterTypes":["java.lang.Object"] }, {"name":"getExpire","parameterTypes":["java.lang.Object","java.util.concurrent.TimeUnit"] }, {"name":"getHashKeySerializer","parameterTypes":[] }, {"name":"getHashValueSerializer","parameterTypes":[] }, {"name":"getKeySerializer","parameterTypes":[] }, {"name":"getStringSerializer","parameterTypes":[] }, {"name":"getValueSerializer","parameterTypes":[] }, {"name":"hasKey","parameterTypes":["java.lang.Object"] }, {"name":"isEnableDefaultSerializer","parameterTypes":[] }, {"name":"isExposeConnection","parameterTypes":[] }, {"name":"keys","parameterTypes":["java.lang.Object"] }, {"name":"killClient","parameterTypes":["java.lang.String","int"] }, {"name":"move","parameterTypes":["java.lang.Object","int"] }, {"name":"multi","parameterTypes":[] }, {"name":"opsForCluster","parameterTypes":[] }, {"name":"opsForGeo","parameterTypes":[] }, {"name":"opsForHash","parameterTypes":[] }, {"name":"opsForHyperLogLog","parameterTypes":[] }, {"name":"opsForList","parameterTypes":[] }, {"name":"opsForSet","parameterTypes":[] }, {"name":"opsForStream","parameterTypes":[] }, {"name":"opsForStream","parameterTypes":["org.springframework.data.redis.hash.HashMapper"] }, {"name":"opsForValue","parameterTypes":[] }, {"name":"opsForZSet","parameterTypes":[] }, {"name":"persist","parameterTypes":["java.lang.Object"] }, {"name":"randomKey","parameterTypes":[] }, {"name":"rename","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"renameIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"replicaOf","parameterTypes":["java.lang.String","int"] }, {"name":"replicaOfNoOne","parameterTypes":[] }, {"name":"restore","parameterTypes":["java.lang.Object","byte[]","long","java.util.concurrent.TimeUnit","boolean"] }, {"name":"scan","parameterTypes":["org.springframework.data.redis.core.ScanOptions"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setDefaultSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setEnableDefaultSerializer","parameterTypes":["boolean"] }, {"name":"setEnableTransactionSupport","parameterTypes":["boolean"] }, {"name":"setExposeConnection","parameterTypes":["boolean"] }, {"name":"setHashKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setHashValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setKeySerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setScriptExecutor","parameterTypes":["org.springframework.data.redis.core.script.ScriptExecutor"] }, {"name":"setStringSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"setValueSerializer","parameterTypes":["org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","java.lang.Object"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.core.BulkMapper","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"sort","parameterTypes":["org.springframework.data.redis.core.query.SortQuery","org.springframework.data.redis.serializer.RedisSerializer"] }, {"name":"type","parameterTypes":["java.lang.Object"] }, {"name":"unlink","parameterTypes":["java.lang.Object"] }, {"name":"unlink","parameterTypes":["java.util.Collection"] }, {"name":"unwatch","parameterTypes":[] }, {"name":"watch","parameterTypes":["java.lang.Object"] }, {"name":"watch","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.data.redis.core.ScanOptions"
},
{
  "name":"org.springframework.data.redis.core.SessionCallback"
},
{
  "name":"org.springframework.data.redis.core.SetOperations"
},
{
  "name":"org.springframework.data.redis.core.StreamOperations"
},
{
  "name":"org.springframework.data.redis.core.StringRedisTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.redis.core.ValueOperations"
},
{
  "name":"org.springframework.data.redis.core.ZSetOperations"
},
{
  "name":"org.springframework.data.redis.core.query.SortQuery"
},
{
  "name":"org.springframework.data.redis.core.script.RedisScript"
},
{
  "name":"org.springframework.data.redis.core.script.ScriptExecutor"
},
{
  "name":"org.springframework.data.redis.hash.HashMapper"
},
{
  "name":"org.springframework.data.redis.listener.ChannelTopic"
},
{
  "name":"org.springframework.data.redis.listener.PatternTopic"
},
{
  "name":"org.springframework.data.redis.listener.ReactiveRedisMessageListenerContainer"
},
{
  "name":"org.springframework.data.redis.listener.Topic"
},
{
  "name":"org.springframework.data.redis.repository.configuration.EnableRedisRepositories"
},
{
  "name":"org.springframework.data.redis.repository.support.RedisRepositoryFactory",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.redis.serializer.RedisElementReader"
},
{
  "name":"org.springframework.data.redis.serializer.RedisElementWriter"
},
{
  "name":"org.springframework.data.redis.serializer.RedisSerializationContext"
},
{
  "name":"org.springframework.data.redis.serializer.RedisSerializer"
},
{
  "name":"org.springframework.data.relational.RelationalManagedTypes",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"forEach","parameterTypes":["java.util.function.Consumer"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.relational.aot.RelationalManagedTypesBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.relational.core.conversion.AbstractRelationalConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getConversionService","parameterTypes":[] }, {"name":"getConversions","parameterTypes":[] }, {"name":"getEntityInstantiators","parameterTypes":[] }, {"name":"getMappingContext","parameterTypes":[] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }]
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createInstance","parameterTypes":["org.springframework.data.mapping.PersistentEntity","java.util.function.Function"] }, {"name":"getEnvironment","parameterTypes":[] }, {"name":"getPropertyAccessor","parameterTypes":["org.springframework.data.mapping.PersistentEntity","java.lang.Object"] }, {"name":"introspectProjection","parameterTypes":["java.lang.Class","java.lang.Class"] }, {"name":"project","parameterTypes":["org.springframework.data.projection.EntityProjection","org.springframework.data.relational.domain.RowDocument"] }, {"name":"read","parameterTypes":["java.lang.Class","java.lang.Object"] }, {"name":"read","parameterTypes":["java.lang.Class","org.springframework.data.relational.domain.RowDocument"] }, {"name":"readValue","parameterTypes":["java.lang.Object","org.springframework.data.util.TypeInformation"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"writeValue","parameterTypes":["java.lang.Object","org.springframework.data.util.TypeInformation"] }]
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter$ConversionContext"
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter$ProjectingConversionContext"
},
{
  "name":"org.springframework.data.relational.core.conversion.MappingRelationalConverter$RelationalPropertyValueProvider"
},
{
  "name":"org.springframework.data.relational.core.conversion.ObjectPath"
},
{
  "name":"org.springframework.data.relational.core.conversion.RelationalConverter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.relational.core.conversion.RowDocumentAccessor"
},
{
  "name":"org.springframework.data.relational.core.dialect.ArrayColumns"
},
{
  "name":"org.springframework.data.relational.core.mapping.AggregatePath"
},
{
  "name":"org.springframework.data.relational.core.mapping.BasicRelationalPersistentProperty"
},
{
  "name":"org.springframework.data.relational.core.mapping.Column",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.relational.core.mapping.NamingStrategy"
},
{
  "name":"org.springframework.data.relational.core.mapping.RelationalMappingContext",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAggregatePath","parameterTypes":["org.springframework.data.mapping.PersistentPropertyPath"] }, {"name":"getAggregatePath","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalPersistentEntity"] }, {"name":"getNamingStrategy","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.mapping.PersistentProperty"] }, {"name":"getPersistentEntity","parameterTypes":["org.springframework.data.relational.core.mapping.RelationalPersistentProperty"] }, {"name":"isForceQuote","parameterTypes":[] }, {"name":"isSingleQueryLoadingEnabled","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setForceQuote","parameterTypes":["boolean"] }, {"name":"setSingleQueryLoadingEnabled","parameterTypes":["boolean"] }, {"name":"setSqlIdentifierSanitizer","parameterTypes":["org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"] }]
},
{
  "name":"org.springframework.data.relational.core.mapping.RelationalPersistentEntity"
},
{
  "name":"org.springframework.data.relational.core.mapping.RelationalPersistentProperty"
},
{
  "name":"org.springframework.data.relational.core.mapping.SqlIdentifierSanitizer"
},
{
  "name":"org.springframework.data.relational.core.mapping.Table",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.relational.core.query.Criteria"
},
{
  "name":"org.springframework.data.relational.core.query.Query"
},
{
  "name":"org.springframework.data.relational.core.query.Update"
},
{
  "name":"org.springframework.data.relational.core.sql.SqlIdentifier"
},
{
  "name":"org.springframework.data.relational.core.sql.Table"
},
{
  "name":"org.springframework.data.relational.domain.RowDocument"
},
{
  "name":"org.springframework.data.repository.NoRepositoryBean",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.data.repository.Repository",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.data.repository.aot.hint.RepositoryRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.config.AotRepositoryContext"
},
{
  "name":"org.springframework.data.repository.config.PropertiesBasedNamedQueriesFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfiguration",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }, {"name":"from","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }, {"name":"of","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }, {"name":"valueOf","parameterTypes":["org.springframework.data.repository.config.RepositoryConfigurationAdapter"] }]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfigurationAdapter",
  "methods":[{"name":"toRepositoryConfiguration","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.repository.config.RepositoryConfigurationSource"
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotContribution"
},
{
  "name":"org.springframework.data.repository.config.RepositoryRegistrationAotProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"getConfigMap","parameterTypes":[] }, {"name":"processAheadOfTime","parameterTypes":["org.springframework.beans.factory.support.RegisteredBean"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setConfigMap","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.data.repository.core.EntityInformation"
},
{
  "name":"org.springframework.data.repository.core.NamedQueries"
},
{
  "name":"org.springframework.data.repository.core.RepositoryInformation"
},
{
  "name":"org.springframework.data.repository.core.support.PropertiesBasedNamedQueries"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addRepositoryFactoryCustomizer","parameterTypes":["org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"] }, {"name":"getEntityInformation","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"getPersistentEntity","parameterTypes":[] }, {"name":"getQueryMethods","parameterTypes":[] }, {"name":"getRepositoryInformation","parameterTypes":[] }, {"name":"isSingleton","parameterTypes":[] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setBeanClassLoader","parameterTypes":["java.lang.ClassLoader"] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setCustomImplementation","parameterTypes":["java.lang.Object"] }, {"name":"setEvaluationContextProvider","parameterTypes":["org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"] }, {"name":"setLazyInit","parameterTypes":["boolean"] }, {"name":"setNamedQueries","parameterTypes":["org.springframework.data.repository.core.NamedQueries"] }, {"name":"setQueryLookupStrategyKey","parameterTypes":["org.springframework.data.repository.query.QueryLookupStrategy$Key"] }, {"name":"setRepositoryBaseClass","parameterTypes":["java.lang.Class"] }, {"name":"setRepositoryFragments","parameterTypes":["org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryCustomizer"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactoryInformation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFactorySupport",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragment"
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["java.util.List"] }, {"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getObject","parameterTypes":[] }, {"name":"getObjectType","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }]
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.repository.core.support.RepositoryMethodInvocationListener$RepositoryMethodInvocation"
},
{
  "name":"org.springframework.data.repository.kotlin.CoroutineCrudRepository"
},
{
  "name":"org.springframework.data.repository.query.FluentQuery",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.data.repository.query.FluentQuery$ReactiveFluentQuery",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"org.springframework.data.repository.query.QueryLookupStrategy$Key"
},
{
  "name":"org.springframework.data.repository.query.QueryMethodEvaluationContextProvider"
},
{
  "name":"org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"count","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"exists","parameterTypes":["org.springframework.data.domain.Example"] }, {"name":"findBy","parameterTypes":["org.springframework.data.domain.Example","java.util.function.Function"] }, {"name":"findOne","parameterTypes":["org.springframework.data.domain.Example"] }]
},
{
  "name":"org.springframework.data.repository.reactive.ReactiveCrudRepository",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"count","parameterTypes":[] }, {"name":"delete","parameterTypes":["java.lang.Object"] }, {"name":"deleteAll","parameterTypes":[] }, {"name":"deleteAll","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteAll","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"deleteAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"deleteById","parameterTypes":["java.lang.Object"] }, {"name":"deleteById","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"existsById","parameterTypes":["java.lang.Object"] }, {"name":"existsById","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"findAll","parameterTypes":[] }, {"name":"findAllById","parameterTypes":["java.lang.Iterable"] }, {"name":"findAllById","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"findById","parameterTypes":["java.lang.Object"] }, {"name":"findById","parameterTypes":["org.reactivestreams.Publisher"] }, {"name":"save","parameterTypes":["java.lang.Object"] }, {"name":"saveAll","parameterTypes":["java.lang.Iterable"] }, {"name":"saveAll","parameterTypes":["org.reactivestreams.Publisher"] }]
},
{
  "name":"org.springframework.data.repository.reactive.ReactiveSortingRepository",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"findAll","parameterTypes":["org.springframework.data.domain.Sort"] }]
},
{
  "name":"org.springframework.data.rest.core.config.RepositoryRestConfiguration"
},
{
  "name":"org.springframework.data.rest.webmvc.config.RepositoryRestMvcConfiguration"
},
{
  "name":"org.springframework.data.util.CustomCollectionRegistrar",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.CustomCollections$EclipseCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections$VavrCollections",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.CustomCollections.EclipseCollections"
},
{
  "name":"org.springframework.data.util.CustomCollections.VavrCollections"
},
{
  "name":"org.springframework.data.util.KotlinBeanInfoFactory",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$DefaultPropertyNameDetectionStrategy",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$InvocationInformation",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$PropertyNameDetectionStrategy",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$Recorded",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$Recorded$ToCollectionConverter",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$Recorded$ToMapConverter",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$RecordingMethodInterceptor",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.MethodInvocationRecorder$Unrecorded",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.Streamable",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.util.TypeInformation"
},
{
  "name":"org.springframework.data.web.PageableHandlerMethodArgumentResolver"
},
{
  "name":"org.springframework.data.web.PagedModel"
},
{
  "name":"org.springframework.data.web.aot.WebRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonConfiguration",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.web.config.SpringDataJacksonModules",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.data.web.config.SpringDataWebSettings"
},
{
  "name":"org.springframework.expression.BeanResolver"
},
{
  "name":"org.springframework.expression.EvaluationContext"
},
{
  "name":"org.springframework.expression.Expression"
},
{
  "name":"org.springframework.expression.ExpressionParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.expression.ParseException"
},
{
  "name":"org.springframework.expression.ParserContext"
},
{
  "name":"org.springframework.expression.common.TemplateAwareExpressionParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"parseExpression","parameterTypes":["java.lang.String"] }, {"name":"parseExpression","parameterTypes":["java.lang.String","org.springframework.expression.ParserContext"] }]
},
{
  "name":"org.springframework.expression.spel.standard.SpelExpression"
},
{
  "name":"org.springframework.expression.spel.standard.SpelExpressionParser",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.format.AnnotationFormatterFactory"
},
{
  "name":"org.springframework.format.Formatter"
},
{
  "name":"org.springframework.format.FormatterRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.format.Parser"
},
{
  "name":"org.springframework.format.Printer"
},
{
  "name":"org.springframework.format.support.FormattingConversionService",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addFormatter","parameterTypes":["org.springframework.format.Formatter"] }, {"name":"addFormatterForFieldAnnotation","parameterTypes":["org.springframework.format.AnnotationFormatterFactory"] }, {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Formatter"] }, {"name":"addFormatterForFieldType","parameterTypes":["java.lang.Class","org.springframework.format.Printer","org.springframework.format.Parser"] }, {"name":"addParser","parameterTypes":["org.springframework.format.Parser"] }, {"name":"addPrinter","parameterTypes":["org.springframework.format.Printer"] }, {"name":"close","parameterTypes":[] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.format.support.FormattingConversionServiceRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.hateoas.EntityModel"
},
{
  "name":"org.springframework.hateoas.Link"
},
{
  "name":"org.springframework.hateoas.server.LinkRelationProvider"
},
{
  "name":"org.springframework.http.CacheControl",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.ContentDisposition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.HttpEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.HttpHeaders",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.HttpMethod",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.HttpMimeTypesRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.HttpRange",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.HttpRequest"
},
{
  "name":"org.springframework.http.HttpStatus",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.HttpStatusCode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.MediaType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.MediaTypeEditor"
},
{
  "name":"org.springframework.http.ProblemDetail",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.ReactiveHttpInputMessage"
},
{
  "name":"org.springframework.http.ResponseCookie$ResponseCookieBuilder"
},
{
  "name":"org.springframework.http.ResponseEntity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
  "allDeclaredFields":true
},
{
  "name":"org.springframework.http.client.ClientHttpRequestExecution"
},
{
  "name":"org.springframework.http.client.ClientHttpRequestFactory",
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.client.ClientHttpRequestInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.http.client.ClientHttpResponse"
},
{
  "name":"org.springframework.http.client.HttpComponentsClientHttpRequestFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.client.ReactorResourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.client.SimpleClientHttpRequestFactory",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.http.client.reactive.ClientHttpConnector",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.client.reactive.ReactorClientHttpConnector"
},
{
  "name":"org.springframework.http.codec.ClientCodecConfigurer"
},
{
  "name":"org.springframework.http.codec.CodecConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"customCodecs","parameterTypes":[] }, {"name":"getReaders","parameterTypes":[] }, {"name":"getWriters","parameterTypes":[] }, {"name":"registerDefaults","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.http.codec.CodecConfigurer$CustomCodecs"
},
{
  "name":"org.springframework.http.codec.CodecConfigurerRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"clone","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"defaultCodecs","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.codec.ServerCodecConfigurer$ServerDefaultCodecs"
},
{
  "name":"org.springframework.http.codec.multipart.DefaultPartHttpMessageReader"
},
{
  "name":"org.springframework.http.converter.HttpMessageConverter"
},
{
  "name":"org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.converter.json.JacksonModulesRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.converter.json.ProblemDetailJacksonMixin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.http.converter.json.ProblemDetailRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.server.PathContainer"
},
{
  "name":"org.springframework.http.server.reactive.HttpHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.server.reactive.ReactorHttpHandlerAdapter"
},
{
  "name":"org.springframework.http.server.reactive.ServerHttpRequest"
},
{
  "name":"org.springframework.http.server.reactive.ServerHttpResponse"
},
{
  "name":"org.springframework.http.server.reactive.observation.DefaultServerRequestObservationConvention",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getContextualName","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getHighCardinalityKeyValues","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getLowCardinalityKeyValues","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getName","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.http.server.reactive.observation.ServerRequestObservationContext"
},
{
  "name":"org.springframework.http.server.reactive.observation.ServerRequestObservationConvention",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getContextualName","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getHighCardinalityKeyValues","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"getLowCardinalityKeyValues","parameterTypes":["io.micrometer.observation.Observation$Context"] }, {"name":"supportsContext","parameterTypes":["io.micrometer.observation.Observation$Context"] }]
},
{
  "name":"org.springframework.integration.config.EnableIntegration"
},
{
  "name":"org.springframework.integration.graph.IntegrationGraphServer"
},
{
  "name":"org.springframework.integration.monitor.IntegrationMBeanExporter"
},
{
  "name":"org.springframework.jdbc.core.JdbcTemplate"
},
{
  "name":"org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
},
{
  "name":"org.springframework.jdbc.datasource.SimpleDriverDataSource"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy"
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType"
},
{
  "name":"org.springframework.jdbc.datasource.init.DatabasePopulator"
},
{
  "name":"org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource"
},
{
  "name":"org.springframework.jms.core.JmsTemplate"
},
{
  "name":"org.springframework.jmx.export.MBeanExporter"
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedAttribute",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedOperation",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.jmx.export.annotation.ManagedResource",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.EnableKafka",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.KafkaBootstrapConfiguration",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.KafkaListener",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerAnnotationBeanPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"postProcessAfterInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"postProcessBeforeInitialization","parameterTypes":["java.lang.Object","java.lang.String"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }]
},
{
  "name":"org.springframework.kafka.annotation.KafkaListenerConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.annotation.PartitionOffset",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.annotation.TopicPartition",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.kafka.aot.KafkaAvroBeanRegistrationAotProcessor",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.aot.KafkaRuntimeHints",
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createContainer","parameterTypes":["java.util.regex.Pattern"] }, {"name":"createContainer","parameterTypes":["java.lang.String[]"] }, {"name":"createContainer","parameterTypes":["org.springframework.kafka.support.TopicPartitionOffset[]"] }, {"name":"createListenerContainer","parameterTypes":["org.springframework.kafka.config.KafkaListenerEndpoint"] }, {"name":"getConsumerFactory","parameterTypes":[] }, {"name":"getContainerProperties","parameterTypes":[] }, {"name":"initializeContainer","parameterTypes":["org.springframework.kafka.listener.AbstractMessageListenerContainer","org.springframework.kafka.config.KafkaListenerEndpoint"] }, {"name":"isBatchListener","parameterTypes":[] }, {"name":"setAckDiscarded","parameterTypes":["java.lang.Boolean"] }, {"name":"setAfterRollbackProcessor","parameterTypes":["org.springframework.kafka.listener.AfterRollbackProcessor"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"setAutoStartup","parameterTypes":["java.lang.Boolean"] }, {"name":"setBatchInterceptor","parameterTypes":["org.springframework.kafka.listener.BatchInterceptor"] }, {"name":"setBatchListener","parameterTypes":["java.lang.Boolean"] }, {"name":"setBatchMessageConverter","parameterTypes":["org.springframework.kafka.support.converter.BatchMessageConverter"] }, {"name":"setBatchToRecordAdapter","parameterTypes":["org.springframework.kafka.listener.adapter.BatchToRecordAdapter"] }, {"name":"setChangeConsumerThreadName","parameterTypes":["boolean"] }, {"name":"setCommonErrorHandler","parameterTypes":["org.springframework.kafka.listener.CommonErrorHandler"] }, {"name":"setConsumerFactory","parameterTypes":["org.springframework.kafka.core.ConsumerFactory"] }, {"name":"setContainerCustomizer","parameterTypes":["org.springframework.kafka.config.ContainerCustomizer"] }, {"name":"setCorrelationHeaderName","parameterTypes":["java.lang.String"] }, {"name":"setMissingTopicsFatal","parameterTypes":["boolean"] }, {"name":"setPhase","parameterTypes":["int"] }, {"name":"setRecordFilterStrategy","parameterTypes":["org.springframework.kafka.listener.adapter.RecordFilterStrategy"] }, {"name":"setRecordInterceptor","parameterTypes":["org.springframework.kafka.listener.RecordInterceptor"] }, {"name":"setRecordMessageConverter","parameterTypes":["org.springframework.kafka.support.converter.RecordMessageConverter"] }, {"name":"setReplyHeadersConfigurer","parameterTypes":["org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"] }, {"name":"setReplyTemplate","parameterTypes":["org.springframework.kafka.core.KafkaTemplate"] }, {"name":"setThreadNameSupplier","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"org.springframework.kafka.config.AbstractKafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.ConcurrentKafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.config.ContainerCustomizer"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerContainerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createContainer","parameterTypes":["java.util.regex.Pattern"] }, {"name":"createContainer","parameterTypes":["java.lang.String[]"] }]
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpointRegistrar"
},
{
  "name":"org.springframework.kafka.config.KafkaListenerEndpointRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"destroy","parameterTypes":[] }, {"name":"getAllListenerContainers","parameterTypes":[] }, {"name":"getListenerContainer","parameterTypes":["java.lang.String"] }, {"name":"getListenerContainerIds","parameterTypes":[] }, {"name":"getListenerContainers","parameterTypes":[] }, {"name":"getListenerContainersMatching","parameterTypes":["java.util.function.BiPredicate"] }, {"name":"getListenerContainersMatching","parameterTypes":["java.util.function.Predicate"] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getUnregisteredListenerContainer","parameterTypes":["java.lang.String"] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.kafka.config.MethodKafkaListenerEndpoint"
},
{
  "name":"org.springframework.kafka.config.StreamsBuilderFactoryBean"
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createConsumer","parameterTypes":[] }, {"name":"createConsumer","parameterTypes":["java.lang.String"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String"] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.String"] }]
},
{
  "name":"org.springframework.kafka.core.ConsumerFactory$Listener"
},
{
  "name":"org.springframework.kafka.core.ConsumerPostProcessor"
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaConsumerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addListener","parameterTypes":["int","org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"addListener","parameterTypes":["org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"addPostProcessor","parameterTypes":["org.springframework.kafka.core.ConsumerPostProcessor"] }, {"name":"close","parameterTypes":[] }, {"name":"createConsumer","parameterTypes":["java.lang.String","java.lang.String","java.lang.String","java.util.Properties"] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"getKeyDeserializer","parameterTypes":[] }, {"name":"getListeners","parameterTypes":[] }, {"name":"getPostProcessors","parameterTypes":[] }, {"name":"getValueDeserializer","parameterTypes":[] }, {"name":"isAutoCommit","parameterTypes":[] }, {"name":"removeConfig","parameterTypes":["java.lang.String"] }, {"name":"removeListener","parameterTypes":["org.springframework.kafka.core.ConsumerFactory$Listener"] }, {"name":"removePostProcessor","parameterTypes":["org.springframework.kafka.core.ConsumerPostProcessor"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"updateConfigs","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addListener","parameterTypes":["int","org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"addListener","parameterTypes":["org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"addPostProcessor","parameterTypes":["org.springframework.kafka.core.ProducerPostProcessor"] }, {"name":"closeThreadBoundProducer","parameterTypes":[] }, {"name":"copyWithConfigurationOverride","parameterTypes":["java.util.Map"] }, {"name":"createNonTransactionalProducer","parameterTypes":[] }, {"name":"createProducer","parameterTypes":[] }, {"name":"createProducer","parameterTypes":["java.lang.String"] }, {"name":"destroy","parameterTypes":[] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"getKeySerializer","parameterTypes":[] }, {"name":"getKeySerializerSupplier","parameterTypes":[] }, {"name":"getListeners","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"getPhysicalCloseTimeout","parameterTypes":[] }, {"name":"getPostProcessors","parameterTypes":[] }, {"name":"getTransactionIdPrefix","parameterTypes":[] }, {"name":"getValueSerializer","parameterTypes":[] }, {"name":"getValueSerializerSupplier","parameterTypes":[] }, {"name":"isProducerPerThread","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"removeConfig","parameterTypes":["java.lang.String"] }, {"name":"removeListener","parameterTypes":["org.springframework.kafka.core.ProducerFactory$Listener"] }, {"name":"removePostProcessor","parameterTypes":["org.springframework.kafka.core.ProducerPostProcessor"] }, {"name":"reset","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"transactionCapable","parameterTypes":[] }, {"name":"updateConfigs","parameterTypes":["java.util.Map"] }]
},
{
  "name":"org.springframework.kafka.core.DefaultKafkaProducerFactory$CloseSafeProducer"
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"clusterId","parameterTypes":[] }, {"name":"createOrModifyTopics","parameterTypes":["org.apache.kafka.clients.admin.NewTopic[]"] }, {"name":"describeTopics","parameterTypes":["java.lang.String[]"] }, {"name":"getConfigurationProperties","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.core.KafkaAdmin$NewTopics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.core.KafkaAdminOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.core.KafkaOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"receive","parameterTypes":["java.lang.String","int","long"] }, {"name":"receive","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaOperations$OperationsCallback"
},
{
  "name":"org.springframework.kafka.core.KafkaOperations$ProducerCallback"
},
{
  "name":"org.springframework.kafka.core.KafkaResourceFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setBootstrapServersSupplier","parameterTypes":["java.util.function.Supplier"] }]
},
{
  "name":"org.springframework.kafka.core.KafkaTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterSingletonsInstantiated","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"execute","parameterTypes":["org.springframework.kafka.core.KafkaOperations$ProducerCallback"] }, {"name":"executeInTransaction","parameterTypes":["org.springframework.kafka.core.KafkaOperations$OperationsCallback"] }, {"name":"flush","parameterTypes":[] }, {"name":"getProducerFactory","parameterTypes":[] }, {"name":"inTransaction","parameterTypes":[] }, {"name":"isAllowNonTransactional","parameterTypes":[] }, {"name":"isTransactional","parameterTypes":[] }, {"name":"metrics","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"partitionsFor","parameterTypes":["java.lang.String"] }, {"name":"receive","parameterTypes":["java.lang.String","int","long","java.time.Duration"] }, {"name":"receive","parameterTypes":["java.util.Collection","java.time.Duration"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Long","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Integer","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Object"] }, {"name":"send","parameterTypes":["java.lang.String","java.lang.Object","java.lang.Object"] }, {"name":"send","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord"] }, {"name":"send","parameterTypes":["org.springframework.messaging.Message"] }, {"name":"sendDefault","parameterTypes":["java.lang.Integer","java.lang.Long","java.lang.Object","java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Integer","java.lang.Object","java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Object"] }, {"name":"sendDefault","parameterTypes":["java.lang.Object","java.lang.Object"] }, {"name":"sendOffsetsToTransaction","parameterTypes":["java.util.Map","org.apache.kafka.clients.consumer.ConsumerGroupMetadata"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.kafka.core.ProducerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.core.ProducerFactory$Listener"
},
{
  "name":"org.springframework.kafka.core.ProducerPostProcessor"
},
{
  "name":"org.springframework.kafka.core.TransactionIdSuffixStrategy"
},
{
  "name":"org.springframework.kafka.core.reactive.ReactiveKafkaProducerTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.listener.AbstractMessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.AfterRollbackProcessor"
},
{
  "name":"org.springframework.kafka.listener.BatchInterceptor"
},
{
  "name":"org.springframework.kafka.listener.CommonErrorHandler"
},
{
  "name":"org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.ConsumerAwareRebalanceListener"
},
{
  "name":"org.springframework.kafka.listener.ContainerProperties"
},
{
  "name":"org.springframework.kafka.listener.KafkaConsumerBackoffManager"
},
{
  "name":"org.springframework.kafka.listener.ListenerContainerRegistry",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.listener.MessageListenerContainer"
},
{
  "name":"org.springframework.kafka.listener.RecordInterceptor"
},
{
  "name":"org.springframework.kafka.listener.adapter.BatchToRecordAdapter"
},
{
  "name":"org.springframework.kafka.listener.adapter.RecordFilterStrategy"
},
{
  "name":"org.springframework.kafka.listener.adapter.ReplyHeadersConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.DestinationTopicResolver"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfiguration"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurationBuilder"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicConfigurer"
},
{
  "name":"org.springframework.kafka.retrytopic.RetryTopicSchedulerWrapper"
},
{
  "name":"org.springframework.kafka.security.jaas.KafkaJaasLoginModuleInitializer"
},
{
  "name":"org.springframework.kafka.support.LoggingProducerListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onError","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord","org.apache.kafka.clients.producer.RecordMetadata","java.lang.Exception"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.kafka.support.ProducerListener",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"onSuccess","parameterTypes":["org.apache.kafka.clients.producer.ProducerRecord","org.apache.kafka.clients.producer.RecordMetadata"] }]
},
{
  "name":"org.springframework.kafka.support.TopicPartitionOffset"
},
{
  "name":"org.springframework.kafka.support.TopicPartitionOffset$SeekPosition"
},
{
  "name":"org.springframework.kafka.support.converter.BatchMessageConverter"
},
{
  "name":"org.springframework.kafka.support.converter.RecordMessageConverter"
},
{
  "name":"org.springframework.kafka.support.micrometer.KafkaRecordSenderContext"
},
{
  "name":"org.springframework.kafka.support.micrometer.KafkaTemplateObservationConvention"
},
{
  "name":"org.springframework.kafka.support.micrometer.MicrometerHolder"
},
{
  "name":"org.springframework.kafka.transaction.KafkaAwareTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.kafka.transaction.KafkaTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getProducerFactory","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.lang.NonNull",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.lang.Nullable",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.ldap.core.ContextSource"
},
{
  "name":"org.springframework.ldap.core.LdapOperations"
},
{
  "name":"org.springframework.mail.javamail.JavaMailMimeTypesRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.mail.javamail.JavaMailSenderImpl"
},
{
  "name":"org.springframework.messaging.Message"
},
{
  "name":"org.springframework.messaging.MessagingException"
},
{
  "name":"org.springframework.messaging.ReactiveMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.messaging.converter.SmartMessageConverter"
},
{
  "name":"org.springframework.messaging.handler.CompositeMessageCondition"
},
{
  "name":"org.springframework.messaging.handler.HandlerMethod"
},
{
  "name":"org.springframework.messaging.handler.MessagingAdviceBean"
},
{
  "name":"org.springframework.messaging.handler.annotation.DestinationVariable",
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.handler.annotation.MessageMapping",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.handler.annotation.MessageMappingReflectiveProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.handler.annotation.reactive.MessageMappingMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"extendMapping","parameterTypes":["java.lang.Object","org.springframework.messaging.handler.HandlerMethod"] }, {"name":"getConversionService","parameterTypes":[] }, {"name":"getDecoders","parameterTypes":[] }, {"name":"getRouteMatcher","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }, {"name":"registerMessagingAdvice","parameterTypes":["org.springframework.messaging.handler.MessagingAdviceBean"] }, {"name":"setConversionService","parameterTypes":["org.springframework.core.convert.ConversionService"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, {"name":"setValidator","parameterTypes":["org.springframework.validation.Validator"] }]
},
{
  "name":"org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory"
},
{
  "name":"org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver"
},
{
  "name":"org.springframework.messaging.handler.invocation.reactive.AbstractMethodMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"extendMapping","parameterTypes":["java.lang.Object","org.springframework.messaging.handler.HandlerMethod"] }, {"name":"getApplicationContext","parameterTypes":[] }, {"name":"getArgumentResolverConfigurer","parameterTypes":[] }, {"name":"getBeanName","parameterTypes":[] }, {"name":"getDestinationLookup","parameterTypes":[] }, {"name":"getDirectLookupMappings","parameterTypes":["java.lang.Object"] }, {"name":"getHandlerMethods","parameterTypes":[] }, {"name":"getHandlerPredicate","parameterTypes":[] }, {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","org.springframework.messaging.Message"] }, {"name":"getReactiveAdapterRegistry","parameterTypes":[] }, {"name":"getReturnValueHandlerConfigurer","parameterTypes":[] }, {"name":"handleMatch","parameterTypes":["java.lang.Object","org.springframework.messaging.handler.HandlerMethod","org.springframework.messaging.Message"] }, {"name":"handleMessage","parameterTypes":["org.springframework.messaging.Message"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setArgumentResolverConfigurer","parameterTypes":["org.springframework.messaging.handler.invocation.reactive.ArgumentResolverConfigurer"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setHandlerPredicate","parameterTypes":["java.util.function.Predicate"] }, {"name":"setHandlers","parameterTypes":["java.util.List"] }, {"name":"setReturnValueHandlerConfigurer","parameterTypes":["org.springframework.messaging.handler.invocation.reactive.ReturnValueHandlerConfigurer"] }]
},
{
  "name":"org.springframework.messaging.handler.invocation.reactive.AbstractMethodMessageHandler$Match"
},
{
  "name":"org.springframework.messaging.handler.invocation.reactive.ArgumentResolverConfigurer"
},
{
  "name":"org.springframework.messaging.handler.invocation.reactive.HandlerMethodArgumentResolverComposite"
},
{
  "name":"org.springframework.messaging.handler.invocation.reactive.ReturnValueHandlerConfigurer"
},
{
  "name":"org.springframework.messaging.rsocket.MetadataExtractor"
},
{
  "name":"org.springframework.messaging.rsocket.RSocketConnectorConfigurer"
},
{
  "name":"org.springframework.messaging.rsocket.RSocketRequester"
},
{
  "name":"org.springframework.messaging.rsocket.RSocketRequester$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.rsocket.RSocketStrategies",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.rsocket.RSocketStrategies$Builder"
},
{
  "name":"org.springframework.messaging.rsocket.annotation.support.MessagingRSocket"
},
{
  "name":"org.springframework.messaging.rsocket.annotation.support.RSocketFrameTypeMessageCondition"
},
{
  "name":"org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"setDecoders","parameterTypes":["java.util.List"] }, {"name":"setReactiveAdapterRegistry","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry"] }, {"name":"setRouteMatcher","parameterTypes":["org.springframework.util.RouteMatcher"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.messaging.rsocket.service.RSocketExchangeBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
},
{
  "name":"org.springframework.oxm.Marshaller"
},
{
  "name":"org.springframework.oxm.Unmarshaller"
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.r2dbc.connection.R2dbcTransactionManager$ConnectionFactoryTransactionObject"
},
{
  "name":"org.springframework.r2dbc.connection.init.DatabasePopulator"
},
{
  "name":"org.springframework.r2dbc.core.ConnectionAccessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"inConnection","parameterTypes":["java.util.function.Function"] }, {"name":"inConnectionMany","parameterTypes":["java.util.function.Function"] }]
},
{
  "name":"org.springframework.r2dbc.core.DatabaseClient",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.r2dbc.core.DatabaseClient$Builder"
},
{
  "name":"org.springframework.r2dbc.core.DatabaseClient$GenericExecuteSpec"
},
{
  "name":"org.springframework.r2dbc.core.Parameter"
},
{
  "name":"org.springframework.r2dbc.core.PreparedOperation"
},
{
  "name":"org.springframework.r2dbc.core.RowsFetchSpec"
},
{
  "name":"org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BindMarkerFactoryProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver$BuiltInBindMarkersFactoryProvider",
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver.BuiltInBindMarkersFactoryProvider"
},
{
  "name":"org.springframework.retry.RetryContext"
},
{
  "name":"org.springframework.retry.RetryListener"
},
{
  "name":"org.springframework.retry.backoff.BackOffPolicy"
},
{
  "name":"org.springframework.retry.support.RetryTemplate"
},
{
  "name":"org.springframework.scheduling.SchedulingTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"prefersShortLivedTasks","parameterTypes":[] }]
},
{
  "name":"org.springframework.scheduling.annotation.SchedulingConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.scheduling.concurrent.CustomizableThreadFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"newThread","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ExecutorConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getPhase","parameterTypes":[] }, {"name":"initialize","parameterTypes":[] }, {"name":"initiateShutdown","parameterTypes":[] }, {"name":"isRunning","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.event.ContextClosedEvent"] }, {"name":"setAcceptTasksAfterContextClose","parameterTypes":["boolean"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"setAwaitTerminationMillis","parameterTypes":["long"] }, {"name":"setAwaitTerminationSeconds","parameterTypes":["int"] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setPhase","parameterTypes":["int"] }, {"name":"setRejectedExecutionHandler","parameterTypes":["java.util.concurrent.RejectedExecutionHandler"] }, {"name":"setThreadFactory","parameterTypes":["java.util.concurrent.ThreadFactory"] }, {"name":"setThreadNamePrefix","parameterTypes":["java.lang.String"] }, {"name":"setWaitForTasksToCompleteOnShutdown","parameterTypes":["boolean"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"start","parameterTypes":[] }, {"name":"stop","parameterTypes":[] }, {"name":"stop","parameterTypes":["java.lang.Runnable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler"
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"execute","parameterTypes":["java.lang.Runnable"] }, {"name":"submit","parameterTypes":["java.lang.Runnable"] }, {"name":"submit","parameterTypes":["java.util.concurrent.Callable"] }, {"name":"submitListenable","parameterTypes":["java.lang.Runnable"] }, {"name":"submitListenable","parameterTypes":["java.util.concurrent.Callable"] }]
},
{
  "name":"org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler"
},
{
  "name":"org.springframework.scheduling.config.ScheduledTaskRegistrar"
},
{
  "name":"org.springframework.scheduling.quartz.SchedulerFactoryBeanRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.aot.hint.CoreSecurityRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.authentication.AuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.security.authentication.AuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"publishAuthenticationFailure","parameterTypes":["org.springframework.security.core.AuthenticationException","org.springframework.security.core.Authentication"] }, {"name":"publishAuthenticationSuccess","parameterTypes":["org.springframework.security.core.Authentication"] }, {"name":"setApplicationEventPublisher","parameterTypes":["org.springframework.context.ApplicationEventPublisher"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.authentication.ReactiveAuthenticationManager"
},
{
  "name":"org.springframework.security.authentication.password.ReactiveCompromisedPasswordChecker"
},
{
  "name":"org.springframework.security.config.Customizer"
},
{
  "name":"org.springframework.security.config.annotation.ObjectPostProcessor"
},
{
  "name":"org.springframework.security.config.annotation.authentication.configuration.AuthenticationManagerBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.configuration.EnableWebSecurity"
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.EnableWebFluxSecurity",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ReactiveOAuth2ClientImportSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.ServerHttpSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.security.config.annotation.web.reactive.WebFluxSecurityConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"conversionServicePostProcessor","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.aot.hint.OAuth2LoginRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.aot.hint.WebMvcSecurityConfigurationRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.crypto.RsaKeyConversionServicePostProcessor",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"postProcessBeanFactory","parameterTypes":["org.springframework.beans.factory.config.ConfigurableListableBeanFactory"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.http.SessionCreationPolicy"
},
{
  "name":"org.springframework.security.config.web.server.SecurityWebFiltersOrder"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$AnonymousSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$AuthorizeExchangeSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$CorsSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$CsrfSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$ExceptionHandlingSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$FormLoginSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$HeaderSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$HttpBasicSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$HttpsRedirectSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$LogoutSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2ClientSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2ResourceServerSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$PasswordManagementSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$RequestCacheSpec"
},
{
  "name":"org.springframework.security.config.web.server.ServerHttpSecurity$X509Spec"
},
{
  "name":"org.springframework.security.core.Authentication"
},
{
  "name":"org.springframework.security.core.AuthenticationException"
},
{
  "name":"org.springframework.security.core.annotation.CurrentSecurityContext"
},
{
  "name":"org.springframework.security.core.context.SecurityContext"
},
{
  "name":"org.springframework.security.core.userdetails.ReactiveUserDetailsPasswordService"
},
{
  "name":"org.springframework.security.core.userdetails.ReactiveUserDetailsService"
},
{
  "name":"org.springframework.security.crypto.encrypt.TextEncryptor"
},
{
  "name":"org.springframework.security.crypto.password.PasswordEncoder"
},
{
  "name":"org.springframework.security.data.repository.query.SecurityEvaluationContextExtension"
},
{
  "name":"org.springframework.security.oauth2.client.annotation.RegisteredOAuth2AuthorizedClient"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistration"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ClientRegistrationRepository"
},
{
  "name":"org.springframework.security.oauth2.client.registration.ReactiveClientRegistrationRepository"
},
{
  "name":"org.springframework.security.oauth2.core.OAuth2Token"
},
{
  "name":"org.springframework.security.oauth2.core.OAuth2TokenValidator"
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoder"
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtDecoderInitializationException"
},
{
  "name":"org.springframework.security.oauth2.jwt.JwtException"
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder"
},
{
  "name":"org.springframework.security.oauth2.jwt.NimbusReactiveJwtDecoder$JwkSetUriReactiveJwtDecoderBuilder"
},
{
  "name":"org.springframework.security.oauth2.jwt.ReactiveJwtDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.security.oauth2.jwt.SupplierReactiveJwtDecoder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"decode","parameterTypes":["java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.oauth2.server.authorization.OAuth2Authorization"
},
{
  "name":"org.springframework.security.oauth2.server.authorization.OAuth2AuthorizationService"
},
{
  "name":"org.springframework.security.oauth2.server.resource.authentication.BearerTokenAuthenticationToken"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.ReactiveOpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.oauth2.server.resource.introspection.SpringReactiveOpaqueTokenIntrospector"
},
{
  "name":"org.springframework.security.rsa.crypto.RsaSecretEncryptor"
},
{
  "name":"org.springframework.security.rsocket.core.SecuritySocketAcceptorInterceptor"
},
{
  "name":"org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository"
},
{
  "name":"org.springframework.security.web.SecurityFilterChain"
},
{
  "name":"org.springframework.security.web.aot.hint.WebMvcSecurityRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter"
},
{
  "name":"org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter"
},
{
  "name":"org.springframework.security.web.context.AbstractSecurityWebApplicationInitializer"
},
{
  "name":"org.springframework.security.web.reactive.result.method.annotation.AuthenticationPrincipalArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.reactive.BindingContext","org.springframework.web.server.ServerWebExchange"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.security.web.reactive.result.method.annotation.CurrentSecurityContextArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"resolveArgument","parameterTypes":["org.springframework.core.MethodParameter","org.springframework.web.reactive.BindingContext","org.springframework.web.server.ServerWebExchange"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supportsParameter","parameterTypes":["org.springframework.core.MethodParameter"] }]
},
{
  "name":"org.springframework.security.web.reactive.result.view.CsrfRequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getExtraHiddenFields","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, {"name":"processAction","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.String","java.lang.String"] }, {"name":"processFormFieldValue","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.String","java.lang.String","java.lang.String"] }, {"name":"processUrl","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.String"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.server.SecurityWebFilterChain",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.server.ServerAuthenticationEntryPoint"
},
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"filter","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.web.server.WebFilterChain"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.security.web.server.WebFilterChainProxy$WebFilterChainDecorator"
},
{
  "name":"org.springframework.security.web.server.authorization.ServerAccessDeniedHandler"
},
{
  "name":"org.springframework.security.web.server.context.ServerSecurityContextRepository"
},
{
  "name":"org.springframework.security.web.server.firewall.ServerExchangeRejectedException"
},
{
  "name":"org.springframework.security.web.server.firewall.ServerExchangeRejectedHandler"
},
{
  "name":"org.springframework.security.web.server.firewall.ServerWebExchangeFirewall"
},
{
  "name":"org.springframework.security.web.server.util.matcher.ServerWebExchangeMatcher"
},
{
  "name":"org.springframework.security.web.util.matcher.OrRequestMatcher"
},
{
  "name":"org.springframework.security.web.util.matcher.RequestMatcher"
},
{
  "name":"org.springframework.session.Session"
},
{
  "name":"org.springframework.stereotype.Component",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.stereotype.Controller",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.stereotype.Indexed",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.stereotype.Repository",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.stereotype.Service",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.ConfigurableTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addListener","parameterTypes":["org.springframework.transaction.TransactionExecutionListener"] }]
},
{
  "name":"org.springframework.transaction.NoTransactionException"
},
{
  "name":"org.springframework.transaction.PlatformTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.ReactiveTransaction"
},
{
  "name":"org.springframework.transaction.ReactiveTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.TransactionDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.TransactionException"
},
{
  "name":"org.springframework.transaction.TransactionExecutionListener"
},
{
  "name":"org.springframework.transaction.TransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.TransactionStatus"
},
{
  "name":"org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setImportMetadata","parameterTypes":["org.springframework.core.type.AnnotationMetadata"] }, {"name":"transactionalEventListenerFactory","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.AnnotationTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isCandidateClass","parameterTypes":["java.lang.Class"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.EnableTransactionManagement",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"transactionAdvisor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource","org.springframework.transaction.interceptor.TransactionInterceptor"] }, {"name":"transactionAttributeSource","parameterTypes":[] }, {"name":"transactionInterceptor","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }]
},
{
  "name":"org.springframework.transaction.annotation.RestrictedTransactionalEventListenerFactory",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"createApplicationListener","parameterTypes":["java.lang.String","java.lang.Class","java.lang.reflect.Method"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionManagementConfigurationSelector",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.TransactionRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.annotation.Transactional",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.aspectj.AbstractTransactionAspect"
},
{
  "name":"org.springframework.transaction.event.TransactionalEventListenerFactory",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getOrder","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"supportsMethod","parameterTypes":["java.lang.reflect.Method"] }]
},
{
  "name":"org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"getTransactionAttribute","parameterTypes":["java.lang.reflect.Method","java.lang.Class"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }]
},
{
  "name":"org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getPointcut","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getTransactionAttributeSource","parameterTypes":[] }, {"name":"getTransactionManager","parameterTypes":[] }, {"name":"setBeanFactory","parameterTypes":["org.springframework.beans.factory.BeanFactory"] }, {"name":"setTransactionAttributeSource","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource"] }, {"name":"setTransactionAttributeSources","parameterTypes":["org.springframework.transaction.interceptor.TransactionAttributeSource[]"] }, {"name":"setTransactionAttributes","parameterTypes":["java.util.Properties"] }, {"name":"setTransactionManager","parameterTypes":["org.springframework.transaction.TransactionManager"] }, {"name":"setTransactionManagerBeanName","parameterTypes":["java.lang.String"] }]
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport$ReactiveTransactionSupport"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolder"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttribute"
},
{
  "name":"org.springframework.transaction.interceptor.TransactionAttributeSource",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.transaction.interceptor.TransactionInterceptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"invoke","parameterTypes":["org.aopalliance.intercept.MethodInvocation"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.reactive.AbstractReactiveTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"commit","parameterTypes":["org.springframework.transaction.ReactiveTransaction"] }, {"name":"getReactiveTransaction","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, {"name":"getTransactionExecutionListeners","parameterTypes":[] }, {"name":"rollback","parameterTypes":["org.springframework.transaction.ReactiveTransaction"] }, {"name":"setTransactionExecutionListeners","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.transaction.reactive.AbstractReactiveTransactionManager$SuspendedResourcesHolder"
},
{
  "name":"org.springframework.transaction.reactive.GenericReactiveTransaction"
},
{
  "name":"org.springframework.transaction.reactive.TransactionCallback"
},
{
  "name":"org.springframework.transaction.reactive.TransactionSynchronization"
},
{
  "name":"org.springframework.transaction.reactive.TransactionSynchronizationManager"
},
{
  "name":"org.springframework.transaction.reactive.TransactionalOperator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"commit","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, {"name":"getTransaction","parameterTypes":["org.springframework.transaction.TransactionDefinition"] }, {"name":"getTransactionExecutionListeners","parameterTypes":[] }, {"name":"rollback","parameterTypes":["org.springframework.transaction.TransactionStatus"] }, {"name":"setTransactionExecutionListeners","parameterTypes":["java.util.Collection"] }]
},
{
  "name":"org.springframework.transaction.support.AbstractPlatformTransactionManager$SuspendedResourcesHolder"
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionDefinition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getIsolationLevel","parameterTypes":[] }, {"name":"getName","parameterTypes":[] }, {"name":"getPropagationBehavior","parameterTypes":[] }, {"name":"getTimeout","parameterTypes":[] }, {"name":"hashCode","parameterTypes":[] }, {"name":"isReadOnly","parameterTypes":[] }, {"name":"toString","parameterTypes":[] }]
},
{
  "name":"org.springframework.transaction.support.DefaultTransactionStatus"
},
{
  "name":"org.springframework.transaction.support.TransactionCallback"
},
{
  "name":"org.springframework.transaction.support.TransactionOperations",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"executeWithoutResult","parameterTypes":["java.util.function.Consumer"] }]
},
{
  "name":"org.springframework.transaction.support.TransactionTemplate",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"equals","parameterTypes":["java.lang.Object"] }, {"name":"execute","parameterTypes":["org.springframework.transaction.support.TransactionCallback"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.ui.Model"
},
{
  "name":"org.springframework.util.CustomizableThreadCreator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"createThread","parameterTypes":["java.lang.Runnable"] }, {"name":"getThreadGroup","parameterTypes":[] }, {"name":"getThreadNamePrefix","parameterTypes":[] }, {"name":"getThreadPriority","parameterTypes":[] }, {"name":"isDaemon","parameterTypes":[] }, {"name":"setDaemon","parameterTypes":["boolean"] }, {"name":"setThreadGroup","parameterTypes":["java.lang.ThreadGroup"] }, {"name":"setThreadGroupName","parameterTypes":["java.lang.String"] }, {"name":"setThreadPriority","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.util.MimeType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"org.springframework.util.MultiValueMap",
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "methods":[{"name":"putIfAbsent","parameterTypes":["java.lang.Object","java.lang.Object"] }]
},
{
  "name":"org.springframework.util.PropertiesPersister"
},
{
  "name":"org.springframework.util.RouteMatcher"
},
{
  "name":"org.springframework.util.RouteMatcher$Route"
},
{
  "name":"org.springframework.util.StringValueResolver"
},
{
  "name":"org.springframework.util.concurrent.ListenableFuture"
},
{
  "name":"org.springframework.util.unit.DataSize"
},
{
  "name":"org.springframework.validation.BindingResult"
},
{
  "name":"org.springframework.validation.Errors"
},
{
  "name":"org.springframework.validation.MessageCodesResolver"
},
{
  "name":"org.springframework.validation.ObjectError"
},
{
  "name":"org.springframework.validation.SmartValidator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.validation.Validator",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }, {"name":"validateObject","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.BeanValidationBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.validation.beanvalidation.LocalValidatorFactoryBean",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"destroy","parameterTypes":[] }, {"name":"getClockProvider","parameterTypes":[] }, {"name":"getConstraintValidatorFactory","parameterTypes":[] }, {"name":"getMessageInterpolator","parameterTypes":[] }, {"name":"getParameterNameProvider","parameterTypes":[] }, {"name":"getTraversableResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"unwrap","parameterTypes":["java.lang.Class"] }, {"name":"usingContext","parameterTypes":[] }]
},
{
  "name":"org.springframework.validation.beanvalidation.MethodValidationPostProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setAdaptConstraintViolations","parameterTypes":["boolean"] }, {"name":"setValidatedAnnotationType","parameterTypes":["java.lang.Class"] }, {"name":"setValidator","parameterTypes":["jakarta.validation.Validator"] }, {"name":"setValidatorFactory","parameterTypes":["jakarta.validation.ValidatorFactory"] }, {"name":"setValidatorProvider","parameterTypes":["org.springframework.beans.factory.ObjectProvider"] }]
},
{
  "name":"org.springframework.validation.beanvalidation.SpringValidatorAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"forExecutables","parameterTypes":[] }, {"name":"getConstraintsForClass","parameterTypes":["java.lang.Class"] }, {"name":"supports","parameterTypes":["java.lang.Class"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors"] }, {"name":"validate","parameterTypes":["java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, {"name":"validate","parameterTypes":["java.lang.Object","java.lang.Class[]"] }, {"name":"validateProperty","parameterTypes":["java.lang.Object","java.lang.String","java.lang.Class[]"] }, {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","org.springframework.validation.Errors","java.lang.Object[]"] }, {"name":"validateValue","parameterTypes":["java.lang.Class","java.lang.String","java.lang.Object","java.lang.Class[]"] }]
},
{
  "name":"org.springframework.validation.method.MethodValidationException"
},
{
  "name":"org.springframework.validation.method.MethodValidationResult"
},
{
  "name":"org.springframework.web.ErrorResponseException"
},
{
  "name":"org.springframework.web.bind.annotation.ControllerAdvice",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.ControllerMappingReflectiveProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.CrossOrigin"
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandler",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.ExceptionHandlerReflectiveProcessor",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.GetMapping",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.Mapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ModelAttribute"
},
{
  "name":"org.springframework.web.bind.annotation.RequestMapping",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.RequestMethod"
},
{
  "name":"org.springframework.web.bind.annotation.ResponseBody",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.bind.annotation.ResponseStatus",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.RestController",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.annotation.RestControllerAdvice",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.bind.support.ConfigurableWebBindingInitializer"
},
{
  "name":"org.springframework.web.bind.support.WebBindingInitializer"
},
{
  "name":"org.springframework.web.bind.support.WebExchangeBindException"
},
{
  "name":"org.springframework.web.client.RestClient"
},
{
  "name":"org.springframework.web.client.RestClient$Builder"
},
{
  "name":"org.springframework.web.client.RestTemplate"
},
{
  "name":"org.springframework.web.context.ConfigurableWebApplicationContext"
},
{
  "name":"org.springframework.web.context.support.GenericWebApplicationContext"
},
{
  "name":"org.springframework.web.cors.CorsConfiguration"
},
{
  "name":"org.springframework.web.cors.reactive.CorsConfigurationSource"
},
{
  "name":"org.springframework.web.cors.reactive.CorsProcessor"
},
{
  "name":"org.springframework.web.cors.reactive.PreFlightRequestHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.filter.CharacterEncodingFilter"
},
{
  "name":"org.springframework.web.method.HandlerMethod"
},
{
  "name":"org.springframework.web.method.annotation.HandlerMethodValidationException"
},
{
  "name":"org.springframework.web.reactive.BindingContext"
},
{
  "name":"org.springframework.web.reactive.DispatchExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.reactive.DispatcherHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, {"name":"handlePreFlight","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.HandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.reactive.HandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.HandlerResult"
},
{
  "name":"org.springframework.web.reactive.HandlerResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"
},
{
  "name":"org.springframework.web.reactive.config.BlockingExecutionConfigurer"
},
{
  "name":"org.springframework.web.reactive.config.CorsRegistry"
},
{
  "name":"org.springframework.web.reactive.config.DelegatingWebFluxConfiguration",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"configurePathMatching","parameterTypes":["org.springframework.web.reactive.config.PathMatchConfigurer"] }, {"name":"setConfigurers","parameterTypes":["java.util.List"] }]
},
{
  "name":"org.springframework.web.reactive.config.EnableWebFlux",
  "queryAllDeclaredMethods":true
},
{
  "name":"org.springframework.web.reactive.config.PathMatchConfigurer"
},
{
  "name":"org.springframework.web.reactive.config.ResourceHandlerRegistration"
},
{
  "name":"org.springframework.web.reactive.config.ResourceHandlerRegistry"
},
{
  "name":"org.springframework.web.reactive.config.ViewResolverRegistry"
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurationSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"handlerFunctionAdapter","parameterTypes":[] }, {"name":"requestMappingHandlerAdapter","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.format.support.FormattingConversionService","org.springframework.validation.Validator"] }, {"name":"requestMappingHandlerMapping","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, {"name":"resourceHandlerMapping","parameterTypes":["org.springframework.web.reactive.resource.ResourceUrlProvider"] }, {"name":"resourceUrlProvider","parameterTypes":[] }, {"name":"responseBodyResultHandler","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, {"name":"responseEntityResultHandler","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.http.codec.ServerCodecConfigurer","org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, {"name":"responseStatusExceptionHandler","parameterTypes":[] }, {"name":"routerFunctionMapping","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, {"name":"serverCodecConfigurer","parameterTypes":[] }, {"name":"serverResponseResultHandler","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"simpleHandlerAdapter","parameterTypes":[] }, {"name":"viewResolutionResultHandler","parameterTypes":["org.springframework.core.ReactiveAdapterRegistry","org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, {"name":"webFluxAdapterRegistry","parameterTypes":[] }, {"name":"webFluxContentTypeResolver","parameterTypes":[] }, {"name":"webFluxWebSocketHandlerAdapter","parameterTypes":[] }, {"name":"webHandler","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.config.WebFluxConfigurer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"addCorsMappings","parameterTypes":["org.springframework.web.reactive.config.CorsRegistry"] }, {"name":"addFormatters","parameterTypes":["org.springframework.format.FormatterRegistry"] }, {"name":"addResourceHandlers","parameterTypes":["org.springframework.web.reactive.config.ResourceHandlerRegistry"] }, {"name":"close","parameterTypes":[] }, {"name":"configureArgumentResolvers","parameterTypes":["org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"] }, {"name":"configureBlockingExecution","parameterTypes":["org.springframework.web.reactive.config.BlockingExecutionConfigurer"] }, {"name":"configureContentTypeResolver","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder"] }, {"name":"configureHttpMessageCodecs","parameterTypes":["org.springframework.http.codec.ServerCodecConfigurer"] }, {"name":"configurePathMatching","parameterTypes":["org.springframework.web.reactive.config.PathMatchConfigurer"] }, {"name":"configureViewResolvers","parameterTypes":["org.springframework.web.reactive.config.ViewResolverRegistry"] }, {"name":"getMessageCodesResolver","parameterTypes":[] }, {"name":"getValidator","parameterTypes":[] }, {"name":"getWebSocketService","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.function.client.ClientRequest"
},
{
  "name":"org.springframework.web.reactive.function.client.ClientRequestObservationConvention"
},
{
  "name":"org.springframework.web.reactive.function.client.ClientResponse"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFilterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"andThen","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeFilterFunction"] }, {"name":"apply","parameterTypes":["org.springframework.web.reactive.function.client.ExchangeFunction"] }]
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeFunction"
},
{
  "name":"org.springframework.web.reactive.function.client.ExchangeStrategies"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient"
},
{
  "name":"org.springframework.web.reactive.function.client.WebClient$Builder",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.function.server.HandlerFilterFunction"
},
{
  "name":"org.springframework.web.reactive.function.server.HandlerFunction"
},
{
  "name":"org.springframework.web.reactive.function.server.RequestPredicate"
},
{
  "name":"org.springframework.web.reactive.function.server.RouterFunction",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.function.server.RouterFunctions$Visitor"
},
{
  "name":"org.springframework.web.reactive.function.server.ServerRequest"
},
{
  "name":"org.springframework.web.reactive.function.server.ServerResponse"
},
{
  "name":"org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.reactive.function.server.support.RouterFunctionMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.function.server.support.ServerResponseResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"handleResult","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.web.reactive.HandlerResult"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["org.springframework.web.reactive.HandlerResult"] }]
},
{
  "name":"org.springframework.web.reactive.handler.AbstractHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getCorsProcessor","parameterTypes":[] }, {"name":"getHandler","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, {"name":"getOrder","parameterTypes":[] }, {"name":"getPathPatternParser","parameterTypes":[] }, {"name":"setBeanName","parameterTypes":["java.lang.String"] }, {"name":"setCorsConfigurationSource","parameterTypes":["org.springframework.web.cors.reactive.CorsConfigurationSource"] }, {"name":"setCorsConfigurations","parameterTypes":["java.util.Map"] }, {"name":"setCorsProcessor","parameterTypes":["org.springframework.web.cors.reactive.CorsProcessor"] }, {"name":"setOrder","parameterTypes":["int"] }, {"name":"setUseCaseSensitiveMatch","parameterTypes":["boolean"] }, {"name":"setUseTrailingSlashMatch","parameterTypes":["boolean"] }]
},
{
  "name":"org.springframework.web.reactive.handler.AbstractUrlHandlerMapping"
},
{
  "name":"org.springframework.web.reactive.resource.NoResourceFoundException"
},
{
  "name":"org.springframework.web.reactive.resource.ResourceResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.reactive.resource.ResourceResolverChain"
},
{
  "name":"org.springframework.web.reactive.resource.ResourceTransformer",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"transform","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.core.io.Resource","org.springframework.web.reactive.resource.ResourceTransformerChain"] }]
},
{
  "name":"org.springframework.web.reactive.resource.ResourceTransformerChain"
},
{
  "name":"org.springframework.web.reactive.resource.ResourceUrlProvider",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"onApplicationEvent","parameterTypes":["org.springframework.context.ApplicationEvent"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.resource.ResourceWebHandler"
},
{
  "name":"org.springframework.web.reactive.result.HandlerResultHandlerSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAdapterRegistry","parameterTypes":[] }, {"name":"getContentTypeResolver","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"setOrder","parameterTypes":["int"] }]
},
{
  "name":"org.springframework.web.reactive.result.SimpleHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.reactive.result.condition.RequestCondition"
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"getDirectPaths","parameterTypes":["java.lang.Object"] }, {"name":"getHandlerMethods","parameterTypes":[] }, {"name":"getMatchingMapping","parameterTypes":["java.lang.Object","org.springframework.web.server.ServerWebExchange"] }, {"name":"handleMatch","parameterTypes":["java.lang.Object","org.springframework.web.method.HandlerMethod","org.springframework.web.server.ServerWebExchange"] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, {"name":"unregisterMapping","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping$MappingRegistry"
},
{
  "name":"org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getAdapterRegistry","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.InvocableHandlerMethod"
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfo"
},
{
  "name":"org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getHandlerInternal","parameterTypes":["org.springframework.web.server.ServerWebExchange"] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"getMessageWriters","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer"
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.InitBinderBindingContext"
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Object"] }, {"name":"handleError","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] }, {"name":"setApplicationContext","parameterTypes":["org.springframework.context.ApplicationContext"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"afterPropertiesSet","parameterTypes":[] }, {"name":"close","parameterTypes":[] }, {"name":"getContentTypeResolver","parameterTypes":[] }, {"name":"getPathPrefixes","parameterTypes":[] }, {"name":"initCorsConfiguration","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerHandlerMethod","parameterTypes":["java.lang.Object","java.lang.reflect.Method","java.lang.Object"] }, {"name":"registerMapping","parameterTypes":["java.lang.Object","java.lang.Object","java.lang.reflect.Method"] }, {"name":"registerMapping","parameterTypes":["org.springframework.web.reactive.result.method.RequestMappingInfo","java.lang.Object","java.lang.reflect.Method"] }, {"name":"setContentTypeResolver","parameterTypes":["org.springframework.web.reactive.accept.RequestedContentTypeResolver"] }, {"name":"setEmbeddedValueResolver","parameterTypes":["org.springframework.util.StringValueResolver"] }, {"name":"setPathPrefixes","parameterTypes":["java.util.Map"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping$AnnotationDescriptor"
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handleResult","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.web.reactive.HandlerResult"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["org.springframework.web.reactive.HandlerResult"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseEntityExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"setMessageSource","parameterTypes":["org.springframework.context.MessageSource"] }]
},
{
  "name":"org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handleResult","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.web.reactive.HandlerResult"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["org.springframework.web.reactive.HandlerResult"] }]
},
{
  "name":"org.springframework.web.reactive.result.view.RequestDataValueProcessor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.reactive.result.view.View"
},
{
  "name":"org.springframework.web.reactive.result.view.ViewResolutionResultHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handleResult","parameterTypes":["org.springframework.web.server.ServerWebExchange","org.springframework.web.reactive.HandlerResult"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["org.springframework.web.reactive.HandlerResult"] }]
},
{
  "name":"org.springframework.web.reactive.result.view.ViewResolver"
},
{
  "name":"org.springframework.web.reactive.socket.server.WebSocketService"
},
{
  "name":"org.springframework.web.reactive.socket.server.support.HandshakeWebSocketServiceRuntimeHints",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"getOrder","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Object"] }, {"name":"shutdown","parameterTypes":[] }, {"name":"supports","parameterTypes":["java.lang.Object"] }]
},
{
  "name":"org.springframework.web.server.MethodNotAllowedException"
},
{
  "name":"org.springframework.web.server.MissingRequestValueException"
},
{
  "name":"org.springframework.web.server.NotAcceptableStatusException"
},
{
  "name":"org.springframework.web.server.ResponseStatusException"
},
{
  "name":"org.springframework.web.server.ServerErrorException"
},
{
  "name":"org.springframework.web.server.ServerWebExchange"
},
{
  "name":"org.springframework.web.server.ServerWebInputException"
},
{
  "name":"org.springframework.web.server.UnsatisfiedRequestParameterException"
},
{
  "name":"org.springframework.web.server.UnsupportedMediaTypeStatusException"
},
{
  "name":"org.springframework.web.server.WebExceptionHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"handle","parameterTypes":["org.springframework.web.server.ServerWebExchange","java.lang.Throwable"] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.server.WebFilter",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.server.WebFilterChain"
},
{
  "name":"org.springframework.web.server.WebHandler",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.springframework.web.server.adapter.ForwardedHeaderTransformer"
},
{
  "name":"org.springframework.web.server.adapter.WebHttpHandlerBuilder"
},
{
  "name":"org.springframework.web.server.i18n.LocaleContextResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.server.session.WebSessionIdResolver",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.server.session.WebSessionManager",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"close","parameterTypes":[] }, {"name":"shutdown","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.service.annotation.HttpExchange"
},
{
  "name":"org.springframework.web.service.annotation.HttpExchangeBeanRegistrationAotProcessor",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.servlet.DispatcherServlet"
},
{
  "name":"org.springframework.web.servlet.config.annotation.EnableWebMvc"
},
{
  "name":"org.springframework.web.servlet.config.annotation.WebMvcConfigurer"
},
{
  "name":"org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer"
},
{
  "name":"org.springframework.web.util.UriBuilderFactory"
},
{
  "name":"org.springframework.web.util.UriComponentsBuilder"
},
{
  "name":"org.springframework.web.util.WebUtilRuntimeHints",
  "queryAllDeclaredConstructors":true,
  "queryAllPublicConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.springframework.web.util.pattern.PathPattern"
},
{
  "name":"org.springframework.web.util.pattern.PathPatternParser"
},
{
  "name":"org.springframework.ws.client.core.WebServiceTemplate"
},
{
  "name":"org.springframework.ws.transport.http.MessageDispatcherServlet"
},
{
  "name":"org.thymeleaf.spring6.SpringTemplateEngine"
},
{
  "name":"org.webjars.WebJarAssetLocator"
},
{
  "name":"org.xnio.SslClientAuthMode"
},
{
  "name":"org.yaml.snakeyaml.Yaml"
},
{
  "name":"reactor.core.CorePublisher",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"reactor.core.Disposable",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"dispose","parameterTypes":[] }]
},
{
  "name":"reactor.core.publisher.Flux",
  "allDeclaredFields":true,
  "allDeclaredClasses":true
},
{
  "name":"reactor.core.publisher.Hooks"
},
{
  "name":"reactor.core.publisher.Mono",
  "allDeclaredFields":true,
  "allDeclaredClasses":true,
  "queryAllDeclaredMethods":true,
  "queryAllPublicMethods":true
},
{
  "name":"reactor.core.publisher.SignalType"
},
{
  "name":"reactor.core.publisher.SynchronousSink"
},
{
  "name":"reactor.kafka.sender.SenderRecord"
},
{
  "name":"reactor.kafka.sender.SenderResult"
},
{
  "name":"reactor.kafka.sender.TransactionManager"
},
{
  "name":"reactor.netty.http.Http2SettingsSpec$Builder"
},
{
  "name":"reactor.netty.http.HttpProtocol"
},
{
  "name":"reactor.netty.http.client.HttpClient"
},
{
  "name":"reactor.netty.http.server.HttpRequestDecoderSpec"
},
{
  "name":"reactor.netty.http.server.HttpServer"
},
{
  "name":"reactor.netty.http.server.HttpServerResponse"
},
{
  "name":"reactor.netty.resources.ConnectionProvider"
},
{
  "name":"reactor.netty.resources.LoopResources"
},
{
  "name":"reactor.netty5.http.server.HttpServerResponse"
},
{
  "name":"reactor.pool.InstrumentedPool"
},
{
  "name":"reactor.pool.InstrumentedPool$PoolMetrics"
},
{
  "name":"reactor.pool.PooledRef"
},
{
  "name":"reactor.pool.PooledRefMetadata"
},
{
  "name":"reactor.tools.agent.ReactorDebugAgent"
},
{
  "name":"reactor.util.annotation.Nullable",
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"value","parameterTypes":[] }]
},
{
  "name":"reactor.util.context.Context"
},
{
  "name":"reactor.util.function.Tuple2"
},
{
  "name":"redis.clients.jedis.Jedis"
},
{
  "name":"scala.Option"
},
{
  "name":"sun.security.provider.ConfigFile"
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }, {"name":"<init>","parameterTypes":["java.security.SecureRandomParameters"] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"zipkin2.reporter.Encoding"
}
]
