spring:
  application:
    name: oauth2-server
  config:
    import: optional:file:.env[.properties]
    
# H2 Database
  datasource:
    url: jdbc:h2:mem:oauth2Db
    
# Defer data.sql until Spring loads
  jpa:
    defer-datasource-initialization: true
# for any script-based initialization
  sql:
    init:
      mode: always

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${properties.authorization.server.issuer}
          
# Custom properties  
properties:
  authorization:
    server:
      issuer: http://localhost:${server.port}
  oauth2:
    clientId: client
    clientSecret: ${OAUTH2_CLIENTSECRET}
    redirectUri: http://localhost:9000/callback
            
server:
  port: ${SERVER_PORT:9000}
  
eureka:
  instance:
    instance-id: ${spring.application.name}:${random.uuid}
    preferIpAddress: true
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/ 
      
logging:
  level:
    org:
      springframework:
        security: DEBUG      
     
# Enable /actuator/info
management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: info, health, metrics
 
  endpoint:
    health:
      probes:
        enabled: true        
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true  
             
# Basic data for /actuator/info
info:
  app:
    name: ${spring.application.name}
    version: 1.0.0     
    